
RCS file: /home/cvsroot/bochs/.bochsrc,v
Working file: .bochsrc
head: 1.6
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.6
	REL-smpbochs-03-30-2000: 1.5
	ported-to-dec-osf1-gcc: 1.5
	local-APIC-timers-tick: 1.5
	smp-linux-boots: 1.4
	added-ioapic: 1.4
	all-processors-boot: 1.4
	working-on-smp-03-26am: 1.4
	cpu-and-mem-are-arrays: 1.4
	before-using-SMF=0: 1.3
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 6;	selected revisions: 6
description:
----------------------------
revision 1.6
date: 2001/04/02 22:34:29;  author: bryce;  state: Exp;  lines: +1 -1
- boot a
----------------------------
revision 1.5
date: 2001/03/31 02:16:52;  author: bryce;  state: Exp;  lines: +2 -2
- point to 2-processor BIOS file, for release
- boot hard disk
----------------------------
revision 1.4
date: 2001/03/26 16:34:29;  author: bryce;  state: Exp;  lines: +4 -4
- use my rombios.bin
- boot a to make it easy to change kernels
- output to out.bochs so I can log it.
----------------------------
revision 1.3
date: 2001/03/22 16:10:09;  author: bryce;  state: Exp;  lines: +3 -4
- point to ../images directory so that all checkouts can share the
  huge images.
----------------------------
revision 1.2
date: 2001/03/19 17:22:10;  author: bryce;  state: Exp;  lines: +9 -288
- my .bochsrc that seems to work
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.bochsrc.original,v
Working file: .bochsrc.original
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/31 01:28:33;  author: bryce;  state: Exp;
- original .bochsrc from snapshot 03-25-2000.  I'm including it in my TAR for
  people's reference.
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.beos-x86-R4,v
Working file: .conf.beos-x86-R4
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.beos-x86-preR4,v
Working file: .conf.beos-x86-preR4
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.macos,v
Working file: .conf.macos
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.sparc,v
Working file: .conf.sparc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.win32,v
Working file: .conf.win32
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.win32-cygwin,v
Working file: .conf.win32-cygwin
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.win32-vcpp,v
Working file: .conf.win32-vcpp
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.conf.x86,v
Working file: .conf.x86
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:54;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/.cvsignore,v
Working file: .cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:12;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/Bochs.proj.hqx,v
Working file: Bochs.proj.hqx
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:33:14;  author: bryce;  state: Exp;
- added with -kb option
=============================================================================

RCS file: /home/cvsroot/bochs/CHANGES.bbd,v
Working file: CHANGES.bbd
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/31 02:41:33;  author: bryce;  state: Exp;  lines: +382 -14
*** empty log message ***
----------------------------
revision 1.1
date: 2001/03/31 02:13:44;  author: bryce;  state: Exp;
- cvs log of my changes
=============================================================================

RCS file: /home/cvsroot/bochs/COPYING,v
Working file: COPYING
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/Makefile.in,v
Working file: Makefile.in
head: 1.8
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.8
	portability-testing1: 1.8
	REL-smpbochs-03-30-2000: 1.4
	ported-to-dec-osf1-gcc: 1.8
	local-APIC-timers-tick: 1.6
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 8;	selected revisions: 8
description:
----------------------------
revision 1.8
date: 2001/04/02 21:28:58;  author: bryce;  state: Exp;  lines: +3 -2
- for systems that don't have strtoull, I included one.  Unfortunately
  the only command that uses long long string conversion loses the
  64-bit value before it gets used.  I can't explain it yet.
----------------------------
revision 1.7
date: 2001/04/02 05:59:41;  author: bryce;  state: Exp;  lines: +9 -9
- now use target:: for the subdirectories so that a simple "make" command
  tries to recompile all the subdirs.
----------------------------
revision 1.6
date: 2001/04/02 01:54:31;  author: bryce;  state: Exp;  lines: +1 -1
- do dist-clean before tar
----------------------------
revision 1.5
date: 2001/03/31 20:04:12;  author: bryce;  state: Exp;  lines: +8 -1
- add make tar command. unfortunately dist-clean erases the makefile
  and you'd like it to do dist-clean before tar. Hm.
----------------------------
revision 1.4
date: 2001/03/31 02:08:01;  author: bryce;  state: Exp;  lines: +4 -3
- default is no readline, for portability
----------------------------
revision 1.3
date: 2001/03/31 00:38:05;  author: bryce;  state: Exp;  lines: +3 -1
- solaris needs -lreadline and -lcurses both.  This stuff should be done
  by autoconf of course, but I don't know how.
----------------------------
revision 1.2
date: 2001/03/21 00:27:18;  author: bryce;  state: Exp;  lines: +1 -1
- hard-coded readline library. one day, figure out autoconf and do it right.
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/NOTES,v
Working file: NOTES
head: 1.18
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.18
	portability-testing1: 1.16
	REL-smpbochs-03-30-2000: 1.10
	ported-to-dec-osf1-gcc: 1.15
	local-APIC-timers-tick: 1.12
	smp-linux-boots: 1.9
	added-ioapic: 1.8
	all-processors-boot: 1.7
	working-on-smp-03-26am: 1.6
	cpu-and-mem-are-arrays: 1.5
	before-using-SMF=0: 1.4
	working-on-smp-03-21pm: 1.2
keyword substitution: kv
total revisions: 18;	selected revisions: 18
description:
----------------------------
revision 1.18
date: 2001/04/03 17:30:28;  author: bryce;  state: Exp;  lines: +7 -0
*** empty log message ***
----------------------------
revision 1.17
date: 2001/04/03 16:06:39;  author: bryce;  state: Exp;  lines: +29 -0
*** empty log message ***
----------------------------
revision 1.16
date: 2001/04/03 07:49:54;  author: bryce;  state: Exp;  lines: +14 -0
*** empty log message ***
----------------------------
revision 1.15
date: 2001/04/02 21:29:19;  author: bryce;  state: Exp;  lines: +10 -0
*** empty log message ***
----------------------------
revision 1.14
date: 2001/04/02 18:49:04;  author: bryce;  state: Exp;  lines: +103 -0
*** empty log message ***
----------------------------
revision 1.13
date: 2001/04/02 05:58:59;  author: bryce;  state: Exp;  lines: +11 -0
*** empty log message ***
----------------------------
revision 1.12
date: 2001/04/02 01:54:35;  author: bryce;  state: Exp;  lines: +77 -0
*** empty log message ***
----------------------------
revision 1.11
date: 2001/03/31 20:09:07;  author: bryce;  state: Exp;  lines: +1 -1
*** empty log message ***
----------------------------
revision 1.10
date: 2001/03/30 23:31:20;  author: bryce;  state: Exp;  lines: +9 -2
*** empty log message ***
----------------------------
revision 1.9
date: 2001/03/29 20:45:44;  author: bryce;  state: Exp;  lines: +121 -0
*** empty log message ***
----------------------------
revision 1.8
date: 2001/03/29 00:25:48;  author: bryce;  state: Exp;  lines: +319 -0
*** empty log message ***
----------------------------
revision 1.7
date: 2001/03/27 17:03:09;  author: bryce;  state: Exp;  lines: +67 -0
*** empty log message ***
----------------------------
revision 1.6
date: 2001/03/26 17:12:26;  author: bryce;  state: Exp;  lines: +47 -0
*** empty log message ***
----------------------------
revision 1.5
date: 2001/03/26 16:30:48;  author: bryce;  state: Exp;  lines: +39 -0
*** empty log message ***
----------------------------
revision 1.4
date: 2001/03/26 16:19:17;  author: bryce;  state: Exp;  lines: +37 -10
*** empty log message ***
----------------------------
revision 1.3
date: 2001/03/23 15:09:12;  author: bryce;  state: Exp;  lines: +76 -0
*** empty log message ***
----------------------------
revision 1.2
date: 2001/03/22 03:30:51;  author: bryce;  state: Exp;  lines: +123 -0
*** empty log message ***
----------------------------
revision 1.1
date: 2001/03/21 00:27:37;  author: bryce;  state: Exp;
*** empty log message ***
=============================================================================

RCS file: /home/cvsroot/bochs/README,v
Working file: README
head: 1.5
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.5
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.4
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 5;	selected revisions: 5
description:
----------------------------
revision 1.5
date: 2001/04/03 17:32:42;  author: bryce;  state: Exp;  lines: +105 -77
*** empty log message ***
----------------------------
revision 1.4
date: 2001/04/01 16:03:48;  author: bryce;  state: Exp;  lines: +1 -1
- fix typo
----------------------------
revision 1.3
date: 2001/03/31 02:18:03;  author: bryce;  state: Exp;  lines: +2 -2
*** empty log message ***
----------------------------
revision 1.2
date: 2001/03/31 02:14:55;  author: bryce;  state: Exp;  lines: +113 -0
*** empty log message ***
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/TO-DO,v
Working file: TO-DO
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/04/02 22:52:16;  author: bryce;  state: Exp;
*** empty log message ***
=============================================================================

RCS file: /home/cvsroot/bochs/bochs.h,v
Working file: bochs.h
head: 1.8
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.8
	portability-testing1: 1.8
	REL-smpbochs-03-30-2000: 1.4
	ported-to-dec-osf1-gcc: 1.7
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 8;	selected revisions: 8
description:
----------------------------
revision 1.8
date: 2001/04/02 22:34:48;  author: bryce;  state: Exp;  lines: +1 -0
- add comments
----------------------------
revision 1.7
date: 2001/04/02 19:36:50;  author: bryce;  state: Exp;  lines: +3 -11
- include new header osdep.h in which I will put all new OS-dependent stuff
----------------------------
revision 1.6
date: 2001/04/02 18:51:39;  author: bryce;  state: Exp;  lines: +9 -0
- for systems without snprintf, use macro to redirect to sprintf.
  Better would be to include the real glibc snprintf function.
----------------------------
revision 1.5
date: 2001/04/02 05:57:10;  author: bryce;  state: Exp;  lines: +1 -0
- in the SMP cpu loop, it was executing instructions and then incrementing
  the tick by only one.  Now it ticks by the same number as the number
  of instructions.
----------------------------
revision 1.4
date: 2001/03/31 02:34:29;  author: bryce;  state: Exp;  lines: +5 -1
- add debug variables apic and ioapic
----------------------------
revision 1.3
date: 2001/03/26 17:12:41;  author: bryce;  state: Exp;  lines: +1 -0
- added my favorite macro, assert
----------------------------
revision 1.2
date: 2001/03/19 17:38:55;  author: bryce;  state: Exp;  lines: +4 -0
- added debug flags for linux debugging
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bochs.rsrc.hqx,v
Working file: bochs.rsrc.hqx
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/config.h.in,v
Working file: config.h.in
head: 1.17
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.17
	portability-testing1: 1.17
	REL-smpbochs-03-30-2000: 1.10
	ported-to-dec-osf1-gcc: 1.13
	local-APIC-timers-tick: 1.11
	smp-linux-boots: 1.8
	added-ioapic: 1.8
	all-processors-boot: 1.7
	working-on-smp-03-26am: 1.7
	cpu-and-mem-are-arrays: 1.6
	before-using-SMF=0: 1.5
	working-on-smp-03-21pm: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 17;	selected revisions: 17
description:
----------------------------
revision 1.17
date: 2001/04/03 07:49:39;  author: bryce;  state: Exp;  lines: +13 -2
- create bx_ptr_equiv_t, an integer the same size as a pointer
----------------------------
revision 1.16
date: 2001/04/03 07:33:00;  author: bryce;  state: Exp;  lines: +6 -5
- check for size of a pointer, to create bx_ptr_equiv_t
- check if compiler allows empty structs
- check if comipler allows __attribute__
- check if we can #include <hash_map.h>, to enable contexts in debugger
----------------------------
revision 1.15
date: 2001/04/03 05:16:11;  author: bryce;  state: Exp;  lines: +11 -1
- added switches for BX_USE_GCC_ATTRIBUTES and BX_CONTEXT_SUPPORT.  They
  default to off.  Eventually, add a configure.in test to turn them
  on if appropriate.
----------------------------
revision 1.14
date: 2001/04/02 22:34:48;  author: bryce;  state: Exp;  lines: +1 -1
- add comments
----------------------------
revision 1.13
date: 2001/04/02 21:28:58;  author: bryce;  state: Exp;  lines: +1 -0
- for systems that don't have strtoull, I included one.  Unfortunately
  the only command that uses long long string conversion loses the
  64-bit value before it gets used.  I can't explain it yet.
----------------------------
revision 1.12
date: 2001/04/02 18:51:59;  author: bryce;  state: Exp;  lines: +1 -0
- add defined for having snprintf
----------------------------
revision 1.11
date: 2001/03/31 20:02:24;  author: bryce;  state: Exp;  lines: +2 -2
- use autoconf style defines for readline library switch
----------------------------
revision 1.10
date: 2001/03/31 02:14:46;  author: bryce;  state: Exp;  lines: +17 -6
- set up a 2-proc configuration by default
- disable READLINE and BX_DEBUG_LINUX by default, for portability
----------------------------
revision 1.9
date: 2001/03/31 00:36:36;  author: bryce;  state: Exp;  lines: +1 -0
- add flag that controls whether #include <readline/history.h> is needed
----------------------------
revision 1.8
date: 2001/03/29 00:26:05;  author: bryce;  state: Exp;  lines: +1 -0
- give a default ID for the I/O APIC
----------------------------
revision 1.7
date: 2001/03/26 17:12:55;  author: bryce;  state: Exp;  lines: +2 -0
- added BX_BOOTSTRAP_PROCESSOR, BX_ADDRESS_SPACES
----------------------------
revision 1.6
date: 2001/03/26 16:31:52;  author: bryce;  state: Exp;  lines: +3 -3
- use 4 processors
- no static member functions for CPU
- no static member functions for pci
----------------------------
revision 1.5
date: 2001/03/23 15:09:40;  author: bryce;  state: Exp;  lines: +3 -1
- add APIC model
- turned on SMP by default (for me at least)
----------------------------
revision 1.4
date: 2001/03/22 16:05:56;  author: bryce;  state: Exp;  lines: +2 -2
- use readline, include linux debugging by default
----------------------------
revision 1.3
date: 2001/03/22 03:31:06;  author: bryce;  state: Exp;  lines: +3 -0
- add defines for multiprocessors
----------------------------
revision 1.2
date: 2001/03/19 18:16:38;  author: bryce;  state: Exp;  lines: +8 -0
- added options for readline and linux, turned off
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/configure,v
Working file: configure
head: 1.10
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.10
	portability-testing1: 1.9
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.7
	local-APIC-timers-tick: 1.5
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 10;	selected revisions: 10
description:
----------------------------
revision 1.10
date: 2001/04/03 17:32:33;  author: bryce;  state: Exp;  lines: +198 -222
- I did AC_LANG_SAVE twice instead of SAVE...RESTORE
- move number of processors before cpu level
- move readline somewhere earlier
- default cpu level=5 like bochs release
- fpu support is off, like bochs release
----------------------------
revision 1.9
date: 2001/04/03 08:08:23;  author: bryce;  state: Exp;  lines: +4 -4
- fixed syntax of configure.in
----------------------------
revision 1.8
date: 2001/04/03 07:33:00;  author: bryce;  state: Exp;  lines: +209 -34
- check for size of a pointer, to create bx_ptr_equiv_t
- check if compiler allows empty structs
- check if comipler allows __attribute__
- check if we can #include <hash_map.h>, to enable contexts in debugger
----------------------------
revision 1.7
date: 2001/04/02 21:28:58;  author: bryce;  state: Exp;  lines: +83 -25
- for systems that don't have strtoull, I included one.  Unfortunately
  the only command that uses long long string conversion loses the
  64-bit value before it gets used.  I can't explain it yet.
----------------------------
revision 1.6
date: 2001/04/02 18:52:15;  author: bryce;  state: Exp;  lines: +83 -25
- add check for snprintf
----------------------------
revision 1.5
date: 2001/04/02 02:11:41;  author: bryce;  state: Exp;  lines: +9 -7
- enable FPU by default, to be consistent with 2 processors and SMP
----------------------------
revision 1.4
date: 2001/04/02 01:55:09;  author: bryce;  state: Exp;  lines: +17 -13
- define HAVE_LIBREADLINE when readline found
----------------------------
revision 1.3
date: 2001/03/31 20:06:18;  author: bryce;  state: Exp;  lines: +562 -161
- I got autoconf so now I can fix up the configuration options.  Added
  cpu-level 6, as the default.
- added --enable-processors=N.  it warns you unless you use 1, 2, or 4.
- added --enable-apic.  warns you if apic is off but processors>1.
- if debugger selected, it warns you to turn on disasm too
----------------------------
revision 1.2
date: 2001/03/26 16:19:34;  author: bryce;  state: Exp;  lines: +12 -2
- allow configure --enable-cpu-level=6
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/configure.in,v
Working file: configure.in
head: 1.9
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.9
	portability-testing1: 1.8
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.6
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 9;	selected revisions: 9
description:
----------------------------
revision 1.9
date: 2001/04/03 17:32:33;  author: bryce;  state: Exp;  lines: +69 -58
- I did AC_LANG_SAVE twice instead of SAVE...RESTORE
- move number of processors before cpu level
- move readline somewhere earlier
- default cpu level=5 like bochs release
- fpu support is off, like bochs release
----------------------------
revision 1.8
date: 2001/04/03 08:08:24;  author: bryce;  state: Exp;  lines: +3 -3
- fixed syntax of configure.in
----------------------------
revision 1.7
date: 2001/04/03 07:33:00;  author: bryce;  state: Exp;  lines: +26 -0
- check for size of a pointer, to create bx_ptr_equiv_t
- check if compiler allows empty structs
- check if comipler allows __attribute__
- check if we can #include <hash_map.h>, to enable contexts in debugger
----------------------------
revision 1.6
date: 2001/04/02 21:28:58;  author: bryce;  state: Exp;  lines: +1 -0
- for systems that don't have strtoull, I included one.  Unfortunately
  the only command that uses long long string conversion loses the
  64-bit value before it gets used.  I can't explain it yet.
----------------------------
revision 1.5
date: 2001/04/02 18:52:15;  author: bryce;  state: Exp;  lines: +1 -0
- add check for snprintf
----------------------------
revision 1.4
date: 2001/04/02 02:11:41;  author: bryce;  state: Exp;  lines: +4 -2
- enable FPU by default, to be consistent with 2 processors and SMP
----------------------------
revision 1.3
date: 2001/04/02 01:55:09;  author: bryce;  state: Exp;  lines: +1 -0
- define HAVE_LIBREADLINE when readline found
----------------------------
revision 1.2
date: 2001/03/31 20:06:18;  author: bryce;  state: Exp;  lines: +116 -8
- I got autoconf so now I can fix up the configuration options.  Added
  cpu-level 6, as the default.
- added --enable-processors=N.  it warns you unless you use 1, 2, or 4.
- added --enable-apic.  warns you if apic is off but processors>1.
- if debugger selected, it warns you to turn on disasm too
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/load32bitOShack.cc,v
Working file: load32bitOShack.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/26 17:13:12;  author: bryce;  state: Exp;  lines: +2 -2
- now BX_MEM itself is a pointer, so no need for &
----------------------------
revision 1.2
date: 2001/03/26 16:32:57;  author: bryce;  state: Exp;  lines: +6 -4
- now BX_MEM is an array
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/macintosh.txt,v
Working file: macintosh.txt
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/macutils.c,v
Working file: macutils.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/macutils.h,v
Working file: macutils.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/main.cc,v
Working file: main.cc
head: 1.7
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.7
	portability-testing1: 1.7
	REL-smpbochs-03-30-2000: 1.4
	ported-to-dec-osf1-gcc: 1.7
	local-APIC-timers-tick: 1.6
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 7;	selected revisions: 7
description:
----------------------------
revision 1.7
date: 2001/04/02 05:57:10;  author: bryce;  state: Exp;  lines: +4 -3
- in the SMP cpu loop, it was executing instructions and then incrementing
  the tick by only one.  Now it ticks by the same number as the number
  of instructions.
----------------------------
revision 1.6
date: 2001/04/02 01:55:25;  author: bryce;  state: Exp;  lines: +11 -11
- added comments to initialization of bx_options
----------------------------
revision 1.5
date: 2001/03/31 20:52:33;  author: bryce;  state: Exp;  lines: +1 -1
- made comment consistent with code
----------------------------
revision 1.4
date: 2001/03/30 14:31:12;  author: bryce;  state: Exp;  lines: +22 -7
- the first time I tried with BX_DEBUGGER=0, many things were still broken.
  Now even with the debugger off, it will initialize N cpus and run them all.
----------------------------
revision 1.3
date: 2001/03/26 17:13:36;  author: bryce;  state: Exp;  lines: +5 -4
- BX_CPU and BX_MEM are arrays of pointers now
----------------------------
revision 1.2
date: 2001/03/26 16:20:02;  author: bryce;  state: Exp;  lines: +1 -0
- do bx_printf in addition to fprintf(stderr...) on exit
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/osdep.cc,v
Working file: osdep.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	ported-to-dec-osf1-gcc: 1.2
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/02 21:28:58;  author: bryce;  state: Exp;  lines: +147 -0
- for systems that don't have strtoull, I included one.  Unfortunately
  the only command that uses long long string conversion loses the
  64-bit value before it gets used.  I can't explain it yet.
----------------------------
revision 1.1
date: 2001/04/02 19:37:45;  author: bryce;  state: Exp;
- OS-dependent functions and settings
=============================================================================

RCS file: /home/cvsroot/bochs/osdep.h,v
Working file: osdep.h
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	ported-to-dec-osf1-gcc: 1.2
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/02 22:35:05;  author: bryce;  state: Exp;  lines: +13 -4
- put the correct "ifdef __cplusplus" structure around things
----------------------------
revision 1.2
date: 2001/04/02 21:28:58;  author: bryce;  state: Exp;  lines: +8 -0
- for systems that don't have strtoull, I included one.  Unfortunately
  the only command that uses long long string conversion loses the
  64-bit value before it gets used.  I can't explain it yet.
----------------------------
revision 1.1
date: 2001/04/02 19:37:45;  author: bryce;  state: Exp;
- OS-dependent functions and settings
=============================================================================

RCS file: /home/cvsroot/bochs/pc_system.cc,v
Working file: pc_system.cc
head: 1.7
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.7
	portability-testing1: 1.7
	REL-smpbochs-03-30-2000: 1.6
	ported-to-dec-osf1-gcc: 1.7
	local-APIC-timers-tick: 1.7
	smp-linux-boots: 1.5
	added-ioapic: 1.4
	all-processors-boot: 1.4
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 7;	selected revisions: 7
description:
----------------------------
revision 1.7
date: 2001/04/02 01:56:08;  author: bryce;  state: Exp;  lines: +0 -20
- removed wait_for_event() since it was #ifed out anyway.  I haven't
  studied WHY it was removed.
----------------------------
revision 1.6
date: 2001/03/31 02:33:40;  author: bryce;  state: Exp;  lines: +2 -1
- condition print interrupt debug message on bx_dbg.interrupts
----------------------------
revision 1.5
date: 2001/03/29 20:47:07;  author: bryce;  state: Exp;  lines: +4 -3
- removed system-wide INTR, and gave one to each CPU
- any devices that use the pc_system set_INTR (including users of the
  BX_INTR macro) will set the interrupt on the bootstrap processor only.
----------------------------
revision 1.4
date: 2001/03/27 17:03:39;  author: bryce;  state: Exp;  lines: +2 -2
- read_physical and write_physical now have a pointer to which CPU did it
----------------------------
revision 1.3
date: 2001/03/26 17:14:11;  author: bryce;  state: Exp;  lines: +6 -4
- BX_CPU[] and BX_MEM[] are
- send all interrupts to the bootstrap processor (for now)
----------------------------
revision 1.2
date: 2001/03/26 16:33:12;  author: bryce;  state: Exp;  lines: +4 -4
- now BX_CPU and BX_MEM are arrays
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/pc_system.h,v
Working file: pc_system.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/29 20:47:07;  author: bryce;  state: Exp;  lines: +1 -1
- removed system-wide INTR, and gave one to each CPU
- any devices that use the pc_system set_INTR (including users of the
  BX_INTR macro) will set the interrupt on the bootstrap processor only.
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/state_file.cc,v
Working file: state_file.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/state_file.h,v
Working file: state_file.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/win32.txt,v
Working file: win32.txt
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:36:43;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bios/.cvsignore,v
Working file: bios/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/bios/BIOS-bochs-2-processors,v
Working file: bios/BIOS-bochs-2-processors
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/31 01:03:08;  author: bryce;  state: Exp;
- added compiled binary for 2-uP and 4-uP simulations.  This saves
  people the trouble of finding tools86, etc.
=============================================================================

RCS file: /home/cvsroot/bochs/bios/BIOS-bochs-4-processors,v
Working file: bios/BIOS-bochs-4-processors
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/31 01:03:08;  author: bryce;  state: Exp;
- added compiled binary for 2-uP and 4-uP simulations.  This saves
  people the trouble of finding tools86, etc.
=============================================================================

RCS file: /home/cvsroot/bochs/bios/BIOS-bochs-990925a,v
Working file: bios/BIOS-bochs-990925a
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:33:16;  author: bryce;  state: Exp;
- added with -kb option
=============================================================================

RCS file: /home/cvsroot/bochs/bios/Makefile.in,v
Working file: bios/Makefile.in
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.4
	ported-to-dec-osf1-gcc: 1.4
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.3
	before-using-SMF=0: 1.3
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/03/31 00:10:51;  author: bryce;  state: Exp;  lines: +9 -1
- make biosconfig.h while building.  biosconfig.h contains only the
  lines of ../config.h that contain a #define command.  Since it
  has to compile with bcc, not g++, much of config.h will never compile
  if included directly.
----------------------------
revision 1.3
date: 2001/03/26 16:23:33;  author: bryce;  state: Exp;  lines: +6 -4
- added TOOLPATH variable where we expect to find as86, ld86, bcc-cc1, etc.
----------------------------
revision 1.2
date: 2001/03/21 03:03:21;  author: bryce;  state: Exp;  lines: +7 -4
- added paths to tools so that they work on dante
- make as86 and ld86 produce symbol tables for debugging
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bios/VGABIOS-elpin-2.20,v
Working file: bios/VGABIOS-elpin-2.20
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:33:16;  author: bryce;  state: Exp;
- added with -kb option
=============================================================================

RCS file: /home/cvsroot/bochs/bios/VGABIOS-elpin-LICENSE,v
Working file: bios/VGABIOS-elpin-LICENSE
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bios/bios_usage,v
Working file: bios/bios_usage
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bios/dataseghack,v
Working file: bios/dataseghack
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bios/notes,v
Working file: bios/notes
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bios/rombios.c,v
Working file: bios/rombios.c
head: 1.10
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.10
	portability-testing1: 1.10
	REL-smpbochs-03-30-2000: 1.10
	ported-to-dec-osf1-gcc: 1.10
	local-APIC-timers-tick: 1.10
	smp-linux-boots: 1.8
	added-ioapic: 1.7
	all-processors-boot: 1.6
	working-on-smp-03-26am: 1.5
	cpu-and-mem-are-arrays: 1.4
	before-using-SMF=0: 1.4
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 10;	selected revisions: 10
description:
----------------------------
revision 1.10
date: 2001/03/31 02:10:56;  author: bryce;  state: Exp;  lines: +2 -4
- use BX_SMP_PROCESSORS to decide whether to include the mp_config table at all.
  eliminate BX_SIMULATE_SMP
----------------------------
revision 1.9
date: 2001/03/31 01:01:33;  author: bryce;  state: Exp;  lines: +90 -2
- look at BX_SMP_PROCESSORS and decide which MP configuration table to
  include.
----------------------------
revision 1.8
date: 2001/03/29 20:47:45;  author: bryce;  state: Exp;  lines: +15 -15
- oops, the interrupt source was in the wrong column for ints 1-15.
  fixed!
----------------------------
revision 1.7
date: 2001/03/29 00:27:16;  author: bryce;  state: Exp;  lines: +37 -2
- added entries to MP config structure for ISA bus, one I/O APIC, and
  16 interrupts
----------------------------
revision 1.6
date: 2001/03/27 17:04:17;  author: bryce;  state: Exp;  lines: +1 -1
- fix checksum slightly
----------------------------
revision 1.5
date: 2001/03/26 17:14:50;  author: bryce;  state: Exp;  lines: +8 -8
- made CPU#2 the bootstrap processor, to flush out bugs in which the
  CPU number was hardcoded to 0.
----------------------------
revision 1.4
date: 2001/03/26 16:24:56;  author: bryce;  state: Exp;  lines: +15 -15
- I had misunderstood the cpu flags bits before.  Now all 4 are marked
  as enabled, and processor 0 is the bootstrap.
- added cpu signature and feature flags for all
- fixed checksum accordingly
----------------------------
revision 1.3
date: 2001/03/23 15:10:32;  author: bryce;  state: Exp;  lines: +65 -8
- first try at MP configuration table, causes linux to crash!
----------------------------
revision 1.2
date: 2001/03/22 03:30:12;  author: bryce;  state: Exp;  lines: +12 -0
- added (conditional) MP structure that indicates a multiprocessor machine.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/bios/usage.cc,v
Working file: bios/usage.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/.cvsignore,v
Working file: cpu/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/Makefile.in,v
Working file: cpu/Makefile.in
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/31 20:07:19;  author: bryce;  state: Exp;  lines: +3 -1
- added apic.o, only when --enable-apic is on
----------------------------
revision 1.2
date: 2001/03/23 15:05:39;  author: bryce;  state: Exp;  lines: +2 -1
- added apic.cc
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/access.cc,v
Working file: cpu/access.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/27 17:04:38;  author: bryce;  state: Exp;  lines: +17 -17
- read_physical and write_physical now have BX_CPU pointer
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +18 -17
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/apic.cc,v
Working file: cpu/apic.cc
head: 1.11
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.11
	portability-testing1: 1.11
	REL-smpbochs-03-30-2000: 1.9
	ported-to-dec-osf1-gcc: 1.10
	local-APIC-timers-tick: 1.10
	smp-linux-boots: 1.7
	added-ioapic: 1.6
	all-processors-boot: 1.5
	working-on-smp-03-26am: 1.4
	cpu-and-mem-are-arrays: 1.3
	before-using-SMF=0: 1.2
keyword substitution: kv
total revisions: 11;	selected revisions: 11
description:
----------------------------
revision 1.11
date: 2001/04/03 07:49:05;  author: bryce;  state: Exp;  lines: +5 -1
- get_cpu was very broken; it didn't return anything, was static, and had
  the wrong return type.
- be sure to return something even after a bx_panic. compiler doesn't
  know bx_panic is fatal.
----------------------------
revision 1.10
date: 2001/04/02 01:58:30;  author: bryce;  state: Exp;  lines: +92 -20
- implemented local APIC timer, both periodic and one-shot modes.  The
  "periodic" method of bx_local_apic_c is called once per 100 usec
  (see TIMER_DELTA in iodev/bx_devices.cc).
----------------------------
revision 1.9
date: 2001/03/31 02:34:12;  author: bryce;  state: Exp;  lines: +53 -31
- local apic code conditioned on bx_dbg.apic
- I/O apic code conditioned on bx_dbg.ioapic
----------------------------
revision 1.8
date: 2001/03/31 00:38:56;  author: bryce;  state: Exp;  lines: +6 -3
- turns out logical ID of 0xff really IS supposed to match every local APIC,
  so the line that was marked "hack" was actually doing the right thing.
----------------------------
revision 1.7
date: 2001/03/29 21:29:40;  author: bryce;  state: Exp;  lines: +253 -46
- lots of fixes to make SMP Linux boot up
- attempted to separate what happens at hardware reset with INIT.
- added methods deliver, get_delivery_bitmask, match_logical_addr which
  implement physical/logical destinations; also fixed, lowest-priority,
  init, and startup messages.
- deliver returns a boolean flag that says if the delivery was completed.
  In the case of the ioapic this is critical because it cannot clear its
  IRR bit unless it can be sure the message has been delivered to the
  correct recipients.  Linux uses this extensively--it leaves the interrupt
  unmasked so that the IOAPIC notices interrupt edges, but then uses values
  of 00 or ff as a logical destination (with lowest-priority delivery) to
  enable or disable the interrupts.  deliver uses a virtual helper method
  get_delivery_bitmask to produce the list of APIC IDs to send to.  It's
  virtual so that the I/O APIC can reimplement get_delivery_bitmask to
  handle destination shortcuts.
- task priority is now an 8 bit field.  (still unused)
- arbitration priority and processor priority are read only, so I call
  methods get_apr() and get_ppr() to produce them.  (not really implemented)
- you MUST call service_local_apic () after clearing an ISR bit when the
  EOI write arrives.
- a few error types are detected, and set a bit in ESR.  ESR is reset to
  zero on write.
----------------------------
revision 1.6
date: 2001/03/29 00:33:42;  author: bryce;  state: Exp;  lines: +301 -98
- now that I need a local APIC and an I/O APIC, I made a base class
  bx_generic_apic_c which both kinds can inherit from.  This makes it
  type-safe to have pointers to either kind, and they can share some code
  for ID setting and such.  Lots of functions are virtual so that you
  get the right function even if called on a generic pointer.  Many methods
  of the base class are just bx_panics.
- you can read and write lots of the local APIC registers, even the ones
  I don't use or know what to do with.
- now the BX_CPU_C class has its own INTR line, which it uses to detect
  interrupts.  This allows the local APIC to interrupt just one CPU.
- apic_index array is now an array of bx_generic_apic_c pointers
  (either local apics or I/O apics)
- read method that handles wierd byte and word reads
- added some real interrupt code (trigger_irq, untrigger_irq, acknowledge_int,
  an irr[] register) and it sort of works now.
----------------------------
revision 1.5
date: 2001/03/27 17:05:11;  author: bryce;  state: Exp;  lines: +35 -11
- added code that really starts up a remote CPU
----------------------------
revision 1.4
date: 2001/03/26 17:15:30;  author: bryce;  state: Exp;  lines: +26 -8
- added apic_index, a table of BX_CPU_C pointers, indexed by APIC ID
----------------------------
revision 1.3
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.2
date: 2001/03/26 16:26:00;  author: bryce;  state: Exp;  lines: +21 -5
- force delivery status bit to 0, to pretend that the message has
  immediately been sent.
- make icr and err status readable
----------------------------
revision 1.1
date: 2001/03/23 15:08:49;  author: bryce;  state: Exp;
- added APIC model
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/apic.h,v
Working file: cpu/apic.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:26:10;  author: bryce;  state: Exp;  lines: +1 -0
- add err_status variable
----------------------------
revision 1.1
date: 2001/03/23 15:08:49;  author: bryce;  state: Exp;
- added APIC model
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/arith16.cc,v
Working file: cpu/arith16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/arith32.cc,v
Working file: cpu/arith32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/arith8.cc,v
Working file: cpu/arith8.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/bcd.cc,v
Working file: cpu/bcd.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/bit.cc,v
Working file: cpu/bit.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/cpu.cc,v
Working file: cpu/cpu.cc
head: 1.11
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.11
	portability-testing1: 1.11
	REL-smpbochs-03-30-2000: 1.6
	ported-to-dec-osf1-gcc: 1.10
	local-APIC-timers-tick: 1.8
	smp-linux-boots: 1.5
	added-ioapic: 1.4
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 11;	selected revisions: 11
description:
----------------------------
revision 1.11
date: 2001/04/03 05:12:35;  author: bryce;  state: Exp;  lines: +7 -4
- moved #if lines around to make it clearer what happens around
  goto_debugger_check.
----------------------------
revision 1.10
date: 2001/04/02 06:03:30;  author: bryce;  state: Exp;  lines: +0 -1
- remove line that prints cs:ip at every main loop
----------------------------
revision 1.9
date: 2001/04/02 05:58:31;  author: bryce;  state: Exp;  lines: +3 -2
- something about the location CHECK_MAX_INSTRUCTIONS macro was causing
  incorrect simulation and crashes.  I moved it to the debugger_check
  area instead.
----------------------------
revision 1.8
date: 2001/04/02 02:08:03;  author: bryce;  state: Exp;  lines: +23 -14
- do NOT tick once per instruction in cpu_loop because in the SMP loops
  that does too many ticks.  Instead, let the outer loop update ticks
  after each processor has stepped through a few instructions.
- use a macro CHECK_MAX_INSTRUCTIONS to stop the cpu_loop early if
  max_instr_count reaches zero.  This is only compiled in when the
  debugger is off.
----------------------------
revision 1.7
date: 2001/03/31 20:49:08;  author: bryce;  state: Exp;  lines: +5 -0
- added conditionals around the local APIC call
----------------------------
revision 1.6
date: 2001/03/30 14:29:51;  author: bryce;  state: Exp;  lines: +16 -19
- added max instruction count to bx_cpu_c::cpu_loop so that you can run
  a limited number of instructions in each CPU and then switch to another
  CPU.  When BX_DEBUGGER=0, this is the only way to step through N
  instructions.  When BX_DEBUGGER=1, use bx_guard.icount instead since
  the guard is a more complete solution.
----------------------------
revision 1.5
date: 2001/03/29 20:49:00;  author: bryce;  state: Exp;  lines: +4 -5
- mostly harmless hack: added int_from_local_apic flag that tells the
  CPU to acknowledge the interrupt from its local APIC, instead of through
  the pic.
----------------------------
revision 1.4
date: 2001/03/29 00:34:47;  author: bryce;  state: Exp;  lines: +9 -5
- the CPU now looks at its own INTR field instead of the system-wide INTR.
  When its INTR goes up, it calls acknowledge_int on its local APIC, instead
  of calling BX_IAC on the pic model.
----------------------------
revision 1.3
date: 2001/03/26 17:16:42;  author: bryce;  state: Exp;  lines: +44 -26
- BX_CPU and BX_MEM are arrays of pointers now
- implement processor HALT in a way that gives other processors a chance
  to execute.
- instead of a global array of bx_guard_found objects, I put a "guard_found"
  object into each CPU
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +21 -12
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/cpu.h,v
Working file: cpu/cpu.h
head: 1.12
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.12
	portability-testing1: 1.12
	REL-smpbochs-03-30-2000: 1.9
	ported-to-dec-osf1-gcc: 1.10
	local-APIC-timers-tick: 1.10
	smp-linux-boots: 1.8
	added-ioapic: 1.7
	all-processors-boot: 1.6
	working-on-smp-03-26am: 1.5
	cpu-and-mem-are-arrays: 1.4
	before-using-SMF=0: 1.3
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 12;	selected revisions: 12
description:
----------------------------
revision 1.12
date: 2001/04/03 07:49:05;  author: bryce;  state: Exp;  lines: +2 -1
- get_cpu was very broken; it didn't return anything, was static, and had
  the wrong return type.
- be sure to return something even after a bx_panic. compiler doesn't
  know bx_panic is fatal.
----------------------------
revision 1.11
date: 2001/04/03 05:11:40;  author: bryce;  state: Exp;  lines: +2 -2
- accidently had a "nested comment" because the expression
    cpu/*.cc
  looks like a start of comment.
----------------------------
revision 1.10
date: 2001/04/02 01:58:30;  author: bryce;  state: Exp;  lines: +12 -2
- implemented local APIC timer, both periodic and one-shot modes.  The
  "periodic" method of bx_local_apic_c is called once per 100 usec
  (see TIMER_DELTA in iodev/bx_devices.cc).
----------------------------
revision 1.9
date: 2001/03/30 14:29:51;  author: bryce;  state: Exp;  lines: +1 -1
- added max instruction count to bx_cpu_c::cpu_loop so that you can run
  a limited number of instructions in each CPU and then switch to another
  CPU.  When BX_DEBUGGER=0, this is the only way to step through N
  instructions.  When BX_DEBUGGER=1, use bx_guard.icount instead since
  the guard is a more complete solution.
----------------------------
revision 1.8
date: 2001/03/29 21:29:40;  author: bryce;  state: Exp;  lines: +31 -5
- lots of fixes to make SMP Linux boot up
- attempted to separate what happens at hardware reset with INIT.
- added methods deliver, get_delivery_bitmask, match_logical_addr which
  implement physical/logical destinations; also fixed, lowest-priority,
  init, and startup messages.
- deliver returns a boolean flag that says if the delivery was completed.
  In the case of the ioapic this is critical because it cannot clear its
  IRR bit unless it can be sure the message has been delivered to the
  correct recipients.  Linux uses this extensively--it leaves the interrupt
  unmasked so that the IOAPIC notices interrupt edges, but then uses values
  of 00 or ff as a logical destination (with lowest-priority delivery) to
  enable or disable the interrupts.  deliver uses a virtual helper method
  get_delivery_bitmask to produce the list of APIC IDs to send to.  It's
  virtual so that the I/O APIC can reimplement get_delivery_bitmask to
  handle destination shortcuts.
- task priority is now an 8 bit field.  (still unused)
- arbitration priority and processor priority are read only, so I call
  methods get_apr() and get_ppr() to produce them.  (not really implemented)
- you MUST call service_local_apic () after clearing an ISR bit when the
  EOI write arrives.
- a few error types are detected, and set a bit in ESR.  ESR is reset to
  zero on write.
----------------------------
revision 1.7
date: 2001/03/29 00:33:42;  author: bryce;  state: Exp;  lines: +59 -21
- now that I need a local APIC and an I/O APIC, I made a base class
  bx_generic_apic_c which both kinds can inherit from.  This makes it
  type-safe to have pointers to either kind, and they can share some code
  for ID setting and such.  Lots of functions are virtual so that you
  get the right function even if called on a generic pointer.  Many methods
  of the base class are just bx_panics.
- you can read and write lots of the local APIC registers, even the ones
  I don't use or know what to do with.
- now the BX_CPU_C class has its own INTR line, which it uses to detect
  interrupts.  This allows the local APIC to interrupt just one CPU.
- apic_index array is now an array of bx_generic_apic_c pointers
  (either local apics or I/O apics)
- read method that handles wierd byte and word reads
- added some real interrupt code (trigger_irq, untrigger_irq, acknowledge_int,
  an irr[] register) and it sort of works now.
----------------------------
revision 1.6
date: 2001/03/27 17:06:32;  author: bryce;  state: Exp;  lines: +5 -0
- when BX_IN_CPU_METHOD not defined, I do not define certain symbols
  such as AX which referred to a hardcoded BX_CPU[0].
----------------------------
revision 1.5
date: 2001/03/26 17:17:51;  author: bryce;  state: Exp;  lines: +35 -4
- put contents of apic.h into cpu.h
- add name field of BX_CPU_C
----------------------------
revision 1.4
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +25 -7
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
- use C++ method pointers instead of C function pointers so that the
  "this" pointer is transmitted correctly.  These have to be called 
  differently, with a strange looking (object->*fnpointer) syntax.
----------------------------
revision 1.3
date: 2001/03/26 16:26:46;  author: bryce;  state: Exp;  lines: +1 -1
- support APIC if BX_APIC_SUPPORT is on, rather than tying it to BX_CPU_LEVEL
----------------------------
revision 1.2
date: 2001/03/23 15:06:04;  author: bryce;  state: Exp;  lines: +5 -0
- added a local APIC to the CPU model
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/ctrl_xfer16.cc,v
Working file: cpu/ctrl_xfer16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/ctrl_xfer32.cc,v
Working file: cpu/ctrl_xfer32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/ctrl_xfer8.cc,v
Working file: cpu/ctrl_xfer8.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/ctrl_xfer_pro.cc,v
Working file: cpu/ctrl_xfer_pro.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/data_xfer16.cc,v
Working file: cpu/data_xfer16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/data_xfer32.cc,v
Working file: cpu/data_xfer32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/data_xfer8.cc,v
Working file: cpu/data_xfer8.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/debugstuff.cc,v
Working file: cpu/debugstuff.cc
head: 1.5
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.5
	portability-testing1: 1.5
	REL-smpbochs-03-30-2000: 1.4
	ported-to-dec-osf1-gcc: 1.5
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.4
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 5;	selected revisions: 5
description:
----------------------------
revision 1.5
date: 2001/04/02 18:53:12;  author: bryce;  state: Exp;  lines: +2 -0
- comment out references to bx_callback, which is no longer used
----------------------------
revision 1.4
date: 2001/03/29 20:49:41;  author: bryce;  state: Exp;  lines: +1 -1
- look at this CPU's INTR field instead of the pc_system one (which no
  longer exists)
----------------------------
revision 1.3
date: 2001/03/26 17:18:02;  author: bryce;  state: Exp;  lines: +22 -22
- BX_CPU and BX_MEM are now arrays
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +29 -27
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/decode16.cc,v
Working file: cpu/decode16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/decode32.cc,v
Working file: cpu/decode32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/exception.cc,v
Working file: cpu/exception.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.3
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.2
date: 2001/03/19 17:42:08;  author: bryce;  state: Exp;  lines: +5 -0
- call a debug function for every linux syscall (int 0x80)
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/fetchdecode.cc,v
Working file: cpu/fetchdecode.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:27;  author: bryce;  state: Exp;  lines: +1204 -1204
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
- added & before all the method pointers
- now BxError is a method too, so that its type can match the others
- for entries in the main table that point to another table (BxGroupN),
  I got the types correct by adding a third member of the BxOpcodeInfo_t
  structure called AnotherArray that points to another structure of
  BxOpcodeInfo_t's.  When "attr & BxGroupN" is detected, it now looks
  at the AnotherArray instead of using typecasts to force the wrong
  type into the structure.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/flag_ctrl.cc,v
Working file: cpu/flag_ctrl.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/flag_ctrl_pro.cc,v
Working file: cpu/flag_ctrl_pro.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/init.cc,v
Working file: cpu/init.cc
head: 1.7
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.7
	portability-testing1: 1.7
	REL-smpbochs-03-30-2000: 1.6
	ported-to-dec-osf1-gcc: 1.7
	local-APIC-timers-tick: 1.7
	smp-linux-boots: 1.6
	added-ioapic: 1.5
	all-processors-boot: 1.4
	working-on-smp-03-26am: 1.4
	cpu-and-mem-are-arrays: 1.3
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 7;	selected revisions: 7
description:
----------------------------
revision 1.7
date: 2001/03/31 20:08:31;  author: bryce;  state: Exp;  lines: +6 -0
- added #if BX_APIC_SUPPORT where necessary
- code that halts all but bootstrap processor is conditional on
  BX_SMP_PROCESSORS>1.
----------------------------
revision 1.6
date: 2001/03/29 20:55:22;  author: bryce;  state: Exp;  lines: +2 -2
- no longer call BX_INTR (obsolete system-wide interrupt line)
----------------------------
revision 1.5
date: 2001/03/29 00:34:47;  author: bryce;  state: Exp;  lines: +4 -0
- the CPU now looks at its own INTR field instead of the system-wide INTR.
  When its INTR goes up, it calls acknowledge_int on its local APIC, instead
  of calling BX_IAC on the pic model.
----------------------------
revision 1.4
date: 2001/03/26 17:19:21;  author: bryce;  state: Exp;  lines: +18 -3
- constructor of BX_CPU fills in mem field now
- if the CPU is a bootstrap processor, start up as usual.  If an
  application processor, start in a halted state.  How can you tell?
  By comparing APIC ID to hardcoded bootstrap processor number.
----------------------------
revision 1.3
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +4 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.2
date: 2001/03/23 15:06:30;  author: bryce;  state: Exp;  lines: +4 -1
- added support for BX_CPU_LEVEL 6
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/io.cc,v
Working file: cpu/io.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/io_pro.cc,v
Working file: cpu/io_pro.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/lazy_flags.cc,v
Working file: cpu/lazy_flags.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/lazy_flags.h,v
Working file: cpu/lazy_flags.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/logical16.cc,v
Working file: cpu/logical16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/logical32.cc,v
Working file: cpu/logical32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/logical8.cc,v
Working file: cpu/logical8.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/mult16.cc,v
Working file: cpu/mult16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/mult32.cc,v
Working file: cpu/mult32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/mult8.cc,v
Working file: cpu/mult8.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/paging.cc,v
Working file: cpu/paging.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/27 17:06:50;  author: bryce;  state: Exp;  lines: +26 -26
- read_physical and write_physical now have a BX_CPU pointer arg
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +27 -26
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/proc_ctrl.cc,v
Working file: cpu/proc_ctrl.cc
head: 1.7
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.7
	portability-testing1: 1.7
	REL-smpbochs-03-30-2000: 1.6
	ported-to-dec-osf1-gcc: 1.7
	local-APIC-timers-tick: 1.7
	smp-linux-boots: 1.6
	added-ioapic: 1.6
	all-processors-boot: 1.6
	working-on-smp-03-26am: 1.5
	cpu-and-mem-are-arrays: 1.5
	before-using-SMF=0: 1.4
	working-on-smp-03-21pm: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 7;	selected revisions: 7
description:
----------------------------
revision 1.7
date: 2001/04/02 02:08:56;  author: bryce;  state: Exp;  lines: +0 -18
- remove wait_for_interrupt, which was #if0'd away
----------------------------
revision 1.6
date: 2001/03/27 17:07:59;  author: bryce;  state: Exp;  lines: +50 -50
- do not panic on nonzero CR4 write.  Linux wants to use 4Mb pages by
  default, but bochs doesn't support it.  For now, I must use the lilo
  flag "mem=nopentium" or I will have big trouble.
- read_physical and write_physical have BX_CPU pointers now
----------------------------
revision 1.5
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +50 -49
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.4
date: 2001/03/23 15:08:35;  author: bryce;  state: Exp;  lines: +11 -3
- comment RDTSC debug line
- implement CPUID for BX_CPU_LEVEL 6
----------------------------
revision 1.3
date: 2001/03/22 03:26:27;  author: bryce;  state: Exp;  lines: +13 -1
- implement TSC, correctly I hope
----------------------------
revision 1.2
date: 2001/03/19 17:42:22;  author: bryce;  state: Exp;  lines: +1 -1
- clarified print stmt
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/protect_ctrl.cc,v
Working file: cpu/protect_ctrl.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/protect_ctrl_pro.cc,v
Working file: cpu/protect_ctrl_pro.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/resolve16.cc,v
Working file: cpu/resolve16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/resolve32.cc,v
Working file: cpu/resolve32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/segment_ctrl.cc,v
Working file: cpu/segment_ctrl.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/segment_ctrl_pro.cc,v
Working file: cpu/segment_ctrl_pro.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/shift16.cc,v
Working file: cpu/shift16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/shift32.cc,v
Working file: cpu/shift32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/shift8.cc,v
Working file: cpu/shift8.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/soft_int.cc,v
Working file: cpu/soft_int.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/stack16.cc,v
Working file: cpu/stack16.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +3 -1
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/stack32.cc,v
Working file: cpu/stack32.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +4 -1
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/stack_pro.cc,v
Working file: cpu/stack_pro.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/string.cc,v
Working file: cpu/string.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/tasking.cc,v
Working file: cpu/tasking.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/cpu/vm8086.cc,v
Working file: cpu/vm8086.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:38:28;  author: bryce;  state: Exp;  lines: +1 -0
- BX_CPU and BX_MEM are now arrays.  Each BX_CPU_C structure has a pointer
  to a BX_MEM, so within BX_CPU_C methods, just use mem to refer to the
  correct memory object.
- added "BX_IN_CPU_METHOD" before the include of cpu.h in every file that
  defines BX_CPU_C methods.  This changes the way that BX_CPU_THIS_PTR
  is handled.  In BX_CPU_C methods, use the "this" pointer:
       #define BX_CPU_THIS_PTR  this->
  outside, the "this" is not available so us BX_CPU[0] instead.  Since
  the CPU number is hardcoded, it is only a temporary way to make things
  compile.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/.cvsignore,v
Working file: debug/.cvsignore
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 03:53:03;  author: bryce;  state: Exp;  lines: +0 -3
- distribute lexer.c, parser.c, and parser.h again, since everybody has
  a different version of them all.  Then only someone who wants to
  edit parser.y or lexer.l will have to have the right version of
  yacc and flex installed.
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/debug/Makefile.in,v
Working file: debug/Makefile.in
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/19 18:16:47;  author: bryce;  state: Exp;  lines: +1 -0
- added linux.o to objects list
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/crc.cc,v
Working file: debug/crc.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/dbg_main.cc,v
Working file: debug/dbg_main.cc
head: 1.17
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.17
	portability-testing1: 1.17
	REL-smpbochs-03-30-2000: 1.10
	ported-to-dec-osf1-gcc: 1.15
	local-APIC-timers-tick: 1.12
	smp-linux-boots: 1.9
	added-ioapic: 1.8
	all-processors-boot: 1.8
	working-on-smp-03-26am: 1.7
	cpu-and-mem-are-arrays: 1.6
	before-using-SMF=0: 1.5
	working-on-smp-03-21pm: 1.4
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 17;	selected revisions: 17
description:
----------------------------
revision 1.17
date: 2001/04/03 07:31:15;  author: bryce;  state: Exp;  lines: +6 -6
- use BX_HAVE_HASH_MAP instead of BX_CONTEXT_SUPPORT
----------------------------
revision 1.16
date: 2001/04/03 05:15:06;  author: bryce;  state: Exp;  lines: +40 -12
- removed a zero-length array (?)
- put #if BX_CONTEXT_SUPPORT...#endif around the context code that uses
  templates.  Is it even possible to make portable C++ template code?
- bx_dbg_watch and bx_dbg_unwatch had a Boolean arg called read,
  but the parser was calling it with -1, 0, and 1.  Changed to int.
----------------------------
revision 1.15
date: 2001/04/02 19:48:21;  author: bryce;  state: Exp;  lines: +4 -4
- call bx_snprintf instead of snprintf, and the configure and osdep.h
  will take care of it.
----------------------------
revision 1.14
date: 2001/04/02 18:51:42;  author: bryce;  state: Exp;  lines: +4 -4
- for systems without snprintf, use macro to redirect to sprintf.
  Better would be to include the real glibc snprintf function.
----------------------------
revision 1.13
date: 2001/04/02 06:01:06;  author: bryce;  state: Exp;  lines: +1 -1
- tick by quantum, not by 1.
----------------------------
revision 1.12
date: 2001/04/02 02:09:27;  author: bryce;  state: Exp;  lines: +7 -4
- fix #ifs related to readline library
- add comments about ticks and stop flag
----------------------------
revision 1.11
date: 2001/03/31 20:08:55;  author: bryce;  state: Exp;  lines: +2 -2
- use autoconf style #defines to decide whether to use readline.
----------------------------
revision 1.10
date: 2001/03/31 00:35:40;  author: bryce;  state: Exp;  lines: +6 -4
- added an argument to cpu_loop for non-debugger compilation.  Debugger
  should always call cpu_loop with argument of -1, and use guard features
  to stop the uP instead.
----------------------------
revision 1.9
date: 2001/03/29 20:50:52;  author: bryce;  state: Exp;  lines: +39 -39
- lots more BX_CPU_THIS_PTR's removed, since they are hardcoded to
  CPU#0 or something.  Now they go to BX_CPU[dbg_cpu] which you can
  change from the command line (set $cpu=3).
----------------------------
revision 1.8
date: 2001/03/27 17:10:25;  author: bryce;  state: Exp;  lines: +37 -26
- for now, define EBP, EIP, ESP, SP in terms of BX_CPU[dbg_cpu]
- now continue command can run several processors at once because
  it guards on ICOUNT.
- stop a continue command if stop_reason is not NO_REASON
----------------------------
revision 1.7
date: 2001/03/26 17:24:17;  author: bryce;  state: Exp;  lines: +219 -169
- added init code to create BX_MEM[0] and BX_CPU[0..(BX_SMP_PROCESSORS-1)]
- there's sort of a blur between BX_NUM_SIMULATORS and BX_SMP_PROCESSORS.
  I'm using features associated BX_NUM_SIMULATORS for my SMP debug code,
  and maybe I'll get around to making the cosimulation features work again,
  if I can figure out what they were used for.
- implemented stepN and continue commands for multiprocessors.  It's
  basically running one processor for a small number of cycles, then
  running the next.  I'll have to work on synchronizing instructions
  one I have multiple processors actually running.
----------------------------
revision 1.6
date: 2001/03/26 16:53:11;  author: bryce;  state: Exp;  lines: +105 -100
- eliminate bx_dbg_callback, and call methods directly onto the BX_CPU and
  BX_MEM arrays.  The callback used C function pointers, which could not
  call C++ methods and get the this pointer right.  For now, the BX_CPU
  and BX_MEM indexes are mostly hardcoded to 0.
----------------------------
revision 1.5
date: 2001/03/22 15:51:39;  author: bryce;  state: Exp;  lines: +107 -47
- added optional range to several commands: disassemble, ldt, gdt, idt, tss.
- cleaned up descriptor outputs so that they fit on one line.
----------------------------
revision 1.4
date: 2001/03/21 00:26:52;  author: bryce;  state: Exp;  lines: +130 -4
- working on adding info gdt/idt/ldt/tss commands
----------------------------
revision 1.3
date: 2001/03/19 18:17:01;  author: bryce;  state: Exp;  lines: +1 -1
- use #if rather than #ifdef
----------------------------
revision 1.2
date: 2001/03/19 17:43:40;  author: bryce;  state: Exp;  lines: +65 -7
- added GNU readline library support in debugger to get editing and
  command history
- added more verbose control regs command which prints meaning of each bit
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/debug.h,v
Working file: debug/debug.h
head: 1.8
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.8
	portability-testing1: 1.8
	REL-smpbochs-03-30-2000: 1.6
	ported-to-dec-osf1-gcc: 1.6
	local-APIC-timers-tick: 1.6
	smp-linux-boots: 1.6
	added-ioapic: 1.6
	all-processors-boot: 1.6
	working-on-smp-03-26am: 1.6
	cpu-and-mem-are-arrays: 1.5
	before-using-SMF=0: 1.4
	working-on-smp-03-21pm: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 8;	selected revisions: 8
description:
----------------------------
revision 1.8
date: 2001/04/03 05:13:25;  author: bryce;  state: Exp;  lines: +6 -7
- attempted to make range with 64-bit signed types
----------------------------
revision 1.7
date: 2001/04/02 21:46:54;  author: bryce;  state: Exp;  lines: +1 -0
- include osdep.h even when compiling the parser .c files
----------------------------
revision 1.6
date: 2001/03/26 17:26:08;  author: bryce;  state: Exp;  lines: +2 -3
- added a stop reason: STOP_CPU_HALTED.  This occurs if a simulated
  processor goes into the halt condition.  Instead of advancing the
  simulation time with BX_TICK1 until an interrupt arrives, the cpu loop
  now returns STOP_CPU_HALTED so that I can call cpu_loop on other
  processors.
----------------------------
revision 1.5
date: 2001/03/26 16:54:10;  author: bryce;  state: Exp;  lines: +1 -0
- added dbg_cpu, which will be sort of the "default" CPU number from
  the user's point of view.  For example if you say "dump_cpu" it will
  assume you want to dump CPU#dbg_cpu instead of all of them.
----------------------------
revision 1.4
date: 2001/03/22 15:51:39;  author: bryce;  state: Exp;  lines: +12 -5
- added optional range to several commands: disassemble, ldt, gdt, idt, tss.
- cleaned up descriptor outputs so that they fit on one line.
----------------------------
revision 1.3
date: 2001/03/21 00:26:52;  author: bryce;  state: Exp;  lines: +4 -0
- working on adding info gdt/idt/ldt/tss commands
----------------------------
revision 1.2
date: 2001/03/19 17:44:12;  author: bryce;  state: Exp;  lines: +4 -0
- added prototypes for new commands
- make bx_dbg_callback extern so I can use it in linux.cc
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/lexer.c,v
Working file: debug/lexer.c
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 03:53:03;  author: bryce;  state: Exp;  lines: +345 -298
- distribute lexer.c, parser.c, and parser.h again, since everybody has
  a different version of them all.  Then only someone who wants to
  edit parser.y or lexer.l will have to have the right version of
  yacc and flex installed.
----------------------------
revision 1.2
date: 2001/03/19 17:46:11;  author: bryce;  state: dead;  lines: +1 -1
- remove from CVS because it's a generated file
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/lexer.l,v
Working file: debug/lexer.l
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.4
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.3
	before-using-SMF=0: 1.3
	working-on-smp-03-21pm: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/04/02 21:29:00;  author: bryce;  state: Exp;  lines: +1 -1
- for systems that don't have strtoull, I included one.  Unfortunately
  the only command that uses long long string conversion loses the
  64-bit value before it gets used.  I can't explain it yet.
----------------------------
revision 1.3
date: 2001/03/21 00:26:52;  author: bryce;  state: Exp;  lines: +5 -0
- working on adding info gdt/idt/ldt/tss commands
----------------------------
revision 1.2
date: 2001/03/19 17:45:21;  author: bryce;  state: Exp;  lines: +5 -0
- allow "info r" or "info reg" instead of "info register"
- add "info cr" or "info cregs" command
- add "info linux" command
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/linux.cc,v
Working file: debug/linux.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 04:55:48;  author: bryce;  state: Exp;  lines: +1 -1
- forgot to initialize i counter
----------------------------
revision 1.2
date: 2001/03/31 00:34:45;  author: bryce;  state: Exp;  lines: +5 -3
- including asm/segment made it nonportable.
----------------------------
revision 1.1
date: 2001/03/19 17:52:04;  author: bryce;  state: Exp;
- linux specific debug commands
=============================================================================

RCS file: /home/cvsroot/bochs/debug/linux.h,v
Working file: debug/linux.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:52:04;  author: bryce;  state: Exp;
- linux specific debug commands
=============================================================================

RCS file: /home/cvsroot/bochs/debug/loader_misc.h,v
Working file: debug/loader_misc.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/make-syscalls-linux.pl,v
Working file: debug/make-syscalls-linux.pl
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:51:54;  author: bryce;  state: Exp;
- perl script to make a table of syscalls, and its output from linux 2.2.14
=============================================================================

RCS file: /home/cvsroot/bochs/debug/parser.c,v
Working file: debug/parser.c
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/04/03 03:56:26;  author: bryce;  state: Exp;  lines: +98 -98
- removed duplicate symbols
----------------------------
revision 1.3
date: 2001/04/03 03:53:03;  author: bryce;  state: Exp;  lines: +483 -377
- distribute lexer.c, parser.c, and parser.h again, since everybody has
  a different version of them all.  Then only someone who wants to
  edit parser.y or lexer.l will have to have the right version of
  yacc and flex installed.
----------------------------
revision 1.2
date: 2001/03/19 17:49:19;  author: bryce;  state: dead;  lines: +0 -0
- removed since these are generated files
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/parser.h,v
Working file: debug/parser.h
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 03:53:03;  author: bryce;  state: Exp;  lines: +80 -72
- distribute lexer.c, parser.c, and parser.h again, since everybody has
  a different version of them all.  Then only someone who wants to
  edit parser.y or lexer.l will have to have the right version of
  yacc and flex installed.
----------------------------
revision 1.2
date: 2001/03/19 17:49:19;  author: bryce;  state: dead;  lines: +0 -0
- removed since these are generated files
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/parser.y,v
Working file: debug/parser.y
head: 1.5
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.5
	portability-testing1: 1.5
	REL-smpbochs-03-30-2000: 1.4
	ported-to-dec-osf1-gcc: 1.4
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.4
	added-ioapic: 1.4
	all-processors-boot: 1.4
	working-on-smp-03-26am: 1.4
	cpu-and-mem-are-arrays: 1.4
	before-using-SMF=0: 1.4
	working-on-smp-03-21pm: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 5;	selected revisions: 5
description:
----------------------------
revision 1.5
date: 2001/04/03 03:55:56;  author: bryce;  state: Exp;  lines: +0 -2
- remove duplicates that caused trouble on some versions of yacc
----------------------------
revision 1.4
date: 2001/03/22 15:50:06;  author: bryce;  state: Exp;  lines: +38 -15
- added optional range option to idt, gdt, ldt, tss commands.  ranges use
  a new data structure called bx_num_range.
----------------------------
revision 1.3
date: 2001/03/21 00:26:52;  author: bryce;  state: Exp;  lines: +24 -0
- working on adding info gdt/idt/ldt/tss commands
----------------------------
revision 1.2
date: 2001/03/19 17:47:39;  author: bryce;  state: Exp;  lines: +19 -0
- add "info linux" and "info register" commands
- allow "disassemble NUM"
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/sim2.cc,v
Working file: debug/sim2.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/debug/syscalls-linux.h,v
Working file: debug/syscalls-linux.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:51:54;  author: bryce;  state: Exp;
- perl script to make a table of syscalls, and its output from linux 2.2.14
=============================================================================

RCS file: /home/cvsroot/bochs/disasm/.cvsignore,v
Working file: disasm/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/disasm/Makefile.in,v
Working file: disasm/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/disasm/dis_decode.cc,v
Working file: disasm/dis_decode.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:10:38;  author: bryce;  state: Exp;  lines: +0 -19
- removed "goto done" where it was unreachable
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/disasm/dis_groups.cc,v
Working file: disasm/dis_groups.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/disasm/disasm.h,v
Working file: disasm/disasm.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/00README,v
Working file: docs-html/00README
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/3rdparty.license.html,v
Working file: docs-html/3rdparty.license.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/DOS.html,v
Working file: docs-html/DOS.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/Linux.html,v
Working file: docs-html/Linux.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/Minix.html,v
Working file: docs-html/Minix.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/OldWindows95.html,v
Working file: docs-html/OldWindows95.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/Windows31.html,v
Working file: docs-html/Windows31.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/Windows95.html,v
Working file: docs-html/Windows95.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/changelog.html,v
Working file: docs-html/changelog.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/codingguidelines.html,v
Working file: docs-html/codingguidelines.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/configure.html,v
Working file: docs-html/configure.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/construction.html,v
Working file: docs-html/construction.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/cosimulation.html,v
Working file: docs-html/cosimulation.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/debugger.html,v
Working file: docs-html/debugger.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/developers.html,v
Working file: docs-html/developers.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/faq.html,v
Working file: docs-html/faq.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/features.html,v
Working file: docs-html/features.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/fpu.html,v
Working file: docs-html/fpu.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/guestNT.html,v
Working file: docs-html/guestNT.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/index.html,v
Working file: docs-html/index.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/install.html,v
Working file: docs-html/install.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/instrumentation.html,v
Working file: docs-html/instrumentation.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/mtools.html,v
Working file: docs-html/mtools.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/sound.html,v
Working file: docs-html/sound.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/undercon.gif,v
Working file: docs-html/undercon.gif
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:33:16;  author: bryce;  state: Exp;
- added with -kb option
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/whatisbochs.html,v
Working file: docs-html/whatisbochs.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/docs-html/win32.html,v
Working file: docs-html/win32.html
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/dynamic/.cvsignore,v
Working file: dynamic/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/dynamic/Makefile.in,v
Working file: dynamic/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/dynamic/README,v
Working file: dynamic/README
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/font/README,v
Working file: font/README
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/font/hercules.bdf,v
Working file: font/hercules.bdf
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/font/vga.bdf,v
Working file: font/vga.bdf
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/font/vga.bitmap.h,v
Working file: font/vga.bitmap.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/font/vga.pcf,v
Working file: font/vga.pcf
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:33:16;  author: bryce;  state: Exp;
- added with -kb option
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/.cvsignore,v
Working file: fpu/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/Makefile-C,v
Working file: fpu/Makefile-C
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/Makefile.in,v
Working file: fpu/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/PORTING,v
Working file: fpu/PORTING
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/README,v
Working file: fpu/README
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/control_w.h,v
Working file: fpu/control_w.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/div_Xsig.S,v
Working file: fpu/div_Xsig.S
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +12 -12
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/div_Xsig.c,v
Working file: fpu/div_Xsig.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/div_small.S,v
Working file: fpu/div_small.S
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/div_small.c,v
Working file: fpu/div_small.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/errors.c,v
Working file: fpu/errors.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +5 -5
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/exception.h,v
Working file: fpu/exception.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +3 -3
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu.cc,v
Working file: fpu/fpu.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/27 17:11:45;  author: bryce;  state: Exp;  lines: +10 -10
- fixed lots of bugs caused by BX_CPU_THIS_PTR.  Methods of BX_CPU_C should
  use local references (no this-> required) and non-methods should use
  fpu_cpu_ptr since it is set to the correct CPU before calling fpu code.
----------------------------
revision 1.2
date: 2001/03/26 16:54:38;  author: bryce;  state: Exp;  lines: +1 -0
- set BX_IN_CPU_METHOD=1 since this file defines methods of BX_CPU_C
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_arith.c,v
Working file: fpu/fpu_arith.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +12 -12
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_asm.h,v
Working file: fpu/fpu_asm.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_aux.c,v
Working file: fpu/fpu_aux.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_emu.h,v
Working file: fpu/fpu_emu.h
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 07:42:28;  author: bryce;  state: Exp;  lines: +5 -0
- on machines with 64-bit pointers, I was getting type errors when
  casting a pointer to a Bit32u.  Now I cast it to a bx_ptr_equiv_t
  which is an integer type chosen to be the same size as a pointer.
  Once it's in integer land, it doesn't get worried about the
  64 bit->32 bit precision change anymore.
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +8 -7
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_entry.c,v
Working file: fpu/fpu_entry.c
head: 1.5
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.5
	portability-testing1: 1.5
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 5;	selected revisions: 5
description:
----------------------------
revision 1.5
date: 2001/04/03 07:43:08;  author: bryce;  state: Exp;  lines: +2 -2
- the first arg of FPU_load_int32 is a (s32 *) but I was casting to
  a (u32 *) instead.
----------------------------
revision 1.4
date: 2001/04/03 05:41:25;  author: bryce;  state: Exp;  lines: +3 -0
- applied patch 402992 from sourceforge, except for the lines that
  include config.h in linux/*/*.h.
- if NO_BLANK_LABELS is defined, put some dummy code into
  fpu_entry.c
- in status_w.h, fpu_etc.c, do a "NO_PAREN_AROUND_BRACES" definition
  of setcc(cc).  I think I can do this better without two different macros.
- if NO_EMPTY_STRUCTS, then put a dummy entry into the empty struct
----------------------------
revision 1.3
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +18 -17
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +8 -8
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_etc.c,v
Working file: fpu/fpu_etc.c
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/04/03 07:40:50;  author: bryce;  state: Exp;  lines: +0 -12
- reverted to 1.2 because I solved the paren-around-braces problem
  in the header file in a much cleaner way.
----------------------------
revision 1.3
date: 2001/04/03 05:41:25;  author: bryce;  state: Exp;  lines: +12 -0
- applied patch 402992 from sourceforge, except for the lines that
  include config.h in linux/*/*.h.
- if NO_BLANK_LABELS is defined, put some dummy code into
  fpu_entry.c
- in status_w.h, fpu_etc.c, do a "NO_PAREN_AROUND_BRACES" definition
  of setcc(cc).  I think I can do this better without two different macros.
- if NO_EMPTY_STRUCTS, then put a dummy entry into the empty struct
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_proto.h,v
Working file: fpu/fpu_proto.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +2 -2
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_system.h,v
Working file: fpu/fpu_system.h
head: 1.5
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.5
	portability-testing1: 1.5
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 5;	selected revisions: 5
description:
----------------------------
revision 1.5
date: 2001/04/03 08:44:49;  author: bryce;  state: Exp;  lines: +1 -1
- renamed NO_EMPTY_STRUCTS to BX_NO_EMPTY_STRUCTS
----------------------------
revision 1.4
date: 2001/04/03 05:41:25;  author: bryce;  state: Exp;  lines: +3 -1
- applied patch 402992 from sourceforge, except for the lines that
  include config.h in linux/*/*.h.
- if NO_BLANK_LABELS is defined, put some dummy code into
  fpu_entry.c
- in status_w.h, fpu_etc.c, do a "NO_PAREN_AROUND_BRACES" definition
  of setcc(cc).  I think I can do this better without two different macros.
- if NO_EMPTY_STRUCTS, then put a dummy entry into the empty struct
----------------------------
revision 1.3
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +8 -6
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +2 -0
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_tags.c,v
Working file: fpu/fpu_tags.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/fpu_trig.c,v
Working file: fpu/fpu_trig.c
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +16 -16
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +3 -3
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/get_address.c,v
Working file: fpu/get_address.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +2 -2
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/load_store.c,v
Working file: fpu/load_store.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +3 -3
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/mul_Xsig.S,v
Working file: fpu/mul_Xsig.S
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/mul_Xsig.c,v
Working file: fpu/mul_Xsig.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/poly.h,v
Working file: fpu/poly.h
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 14:57:22;  author: bryce;  state: Exp;  lines: +4 -4
- changed from "extern inline" to "static inline" so that if the compiler
  does NOT inline the functions, you don't get duplicate symbols between
  the different .c files that included the header.
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +2 -2
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/poly_2xm1.c,v
Working file: fpu/poly_2xm1.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/poly_atan.c,v
Working file: fpu/poly_atan.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/poly_l2.c,v
Working file: fpu/poly_l2.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +2 -2
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/poly_sin.c,v
Working file: fpu/poly_sin.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +3 -3
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/poly_tan.c,v
Working file: fpu/poly_tan.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/polynom_Xsig.S,v
Working file: fpu/polynom_Xsig.S
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/polynom_Xsig.c,v
Working file: fpu/polynom_Xsig.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_add_sub.c,v
Working file: fpu/reg_add_sub.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +6 -5
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_compare.c,v
Working file: fpu/reg_compare.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +4 -4
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_constant.c,v
Working file: fpu/reg_constant.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +1 -1
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_constant.h,v
Working file: fpu/reg_constant.h
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +1 -1
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_convert.c,v
Working file: fpu/reg_convert.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_divide.c,v
Working file: fpu/reg_divide.c
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.2
date: 2001/04/02 18:26:19;  author: bryce;  state: Exp;  lines: +13 -12
- fixed bugs in which a pointer was cast to an int before going into a function.
  On some 64-bit machines (maybe all), int is only 32 bits, so the pointer is
  corrupted by being cast to int and then back to a pointer.  Instead, change
  these arguments to pointers.  Then when an int needs to be passed, use a
  macro REGNO2PTR(n) to cast the int to a pointer.  This should be safe for
  64-bit systems.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_ld_str.c,v
Working file: fpu/reg_ld_str.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +7 -7
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_mul.c,v
Working file: fpu/reg_mul.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_norm.S,v
Working file: fpu/reg_norm.S
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_norm.c,v
Working file: fpu/reg_norm.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_round.S,v
Working file: fpu/reg_round.S
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +14 -14
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_round.c,v
Working file: fpu/reg_round.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_add.S,v
Working file: fpu/reg_u_add.S
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +2 -2
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_add.c,v
Working file: fpu/reg_u_add.c
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 07:39:39;  author: bryce;  state: Exp;  lines: +1 -1
- someone complained that extent was not initialized, so I set it to 0.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_div.S,v
Working file: fpu/reg_u_div.S
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +12 -12
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_div.c,v
Working file: fpu/reg_u_div.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_mul.S,v
Working file: fpu/reg_u_mul.S
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +4 -4
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_mul.c,v
Working file: fpu/reg_u_mul.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_sub.S,v
Working file: fpu/reg_u_sub.S
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +4 -4
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/reg_u_sub.c,v
Working file: fpu/reg_u_sub.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/round_Xsig.S,v
Working file: fpu/round_Xsig.S
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/round_Xsig.c,v
Working file: fpu/round_Xsig.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/shr_Xsig.S,v
Working file: fpu/shr_Xsig.S
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/shr_Xsig.c,v
Working file: fpu/shr_Xsig.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:57;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/status_w.h,v
Working file: fpu/status_w.h
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/04/03 07:39:21;  author: bryce;  state: Exp;  lines: +2 -8
- replaced the NO_PAREN_AROUND_BRACES solution with a setcc which
  should be legal anywhere, using the do{...}while(0) construct.
----------------------------
revision 1.3
date: 2001/04/03 05:41:25;  author: bryce;  state: Exp;  lines: +6 -0
- applied patch 402992 from sourceforge, except for the lines that
  include config.h in linux/*/*.h.
- if NO_BLANK_LABELS is defined, put some dummy code into
  fpu_entry.c
- in status_w.h, fpu_etc.c, do a "NO_PAREN_AROUND_BRACES" definition
  of setcc(cc).  I think I can do this better without two different macros.
- if NO_EMPTY_STRUCTS, then put a dummy entry into the empty struct
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +3 -3
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/version.h,v
Working file: fpu/version.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/wmFPUemu_glue.cc,v
Working file: fpu/wmFPUemu_glue.cc
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/04/03 07:42:28;  author: bryce;  state: Exp;  lines: +9 -9
- on machines with 64-bit pointers, I was getting type errors when
  casting a pointer to a Bit32u.  Now I cast it to a bx_ptr_equiv_t
  which is an integer type chosen to be the same size as a pointer.
  Once it's in integer land, it doesn't get worried about the
  64 bit->32 bit precision change anymore.
----------------------------
revision 1.3
date: 2001/03/27 17:11:45;  author: bryce;  state: Exp;  lines: +9 -6
- fixed lots of bugs caused by BX_CPU_THIS_PTR.  Methods of BX_CPU_C should
  use local references (no this-> required) and non-methods should use
  fpu_cpu_ptr since it is set to the correct CPU before calling fpu code.
----------------------------
revision 1.2
date: 2001/03/26 16:56:21;  author: bryce;  state: Exp;  lines: +12 -10
- this code already had fpu_iptr, a pointer to the instruction that the
  FPU library is currently executing.  So it wasn't much of a stretch to
  add fpu_cpu_ptr, the CPU that the FPU library is working on.  The CPU
  pointer is needed so that FPU code can read and write registers on the
  correct processor.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/wm_shrx.S,v
Working file: fpu/wm_shrx.S
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/wm_shrx.c,v
Working file: fpu/wm_shrx.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/wm_sqrt.S,v
Working file: fpu/wm_sqrt.S
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:48;  author: bryce;  state: Exp;  lines: +7 -7
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/wm_sqrt.c,v
Working file: fpu/wm_sqrt.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/asm/desc.h,v
Working file: fpu/stubs/asm/desc.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:51;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/asm/math_emu.h,v
Working file: fpu/stubs/asm/math_emu.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/asm/sigcontext.h,v
Working file: fpu/stubs/asm/sigcontext.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/02 18:29:20;  author: bryce;  state: Exp;  lines: +4 -0
- commented out sigcontext struct definition, conflicted on occs
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/asm/types.h,v
Working file: fpu/stubs/asm/types.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/asm/uaccess.h,v
Working file: fpu/stubs/asm/uaccess.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/linux/kernel.h,v
Working file: fpu/stubs/linux/kernel.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:52;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/linux/linkage.h,v
Working file: fpu/stubs/linux/linkage.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:08:52;  author: bryce;  state: Exp;  lines: +1 -1
- some preprocessors don't allow junk after the #endif, and there
  were hundreds of instances of junk after the endif here.  Added
  comments around the junk.
- the __attribute__((packed)) stuff at the end of a struct definition
  is gcc-only.  Changed into a macro GCC_ATTRIBUTE(x) which can be
  defined away when the compiler doesn't understand __attribute__.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/linux/mm.h,v
Working file: fpu/stubs/linux/mm.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/linux/sched.h,v
Working file: fpu/stubs/linux/sched.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/linux/signal.h,v
Working file: fpu/stubs/linux/signal.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/linux/stddef.h,v
Working file: fpu/stubs/linux/stddef.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/fpu/stubs/linux/types.h,v
Working file: fpu/stubs/linux/types.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/.cvsignore,v
Working file: gui/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/gui/Makefile.in,v
Working file: gui/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/beos.cc,v
Working file: gui/beos.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/gui.cc,v
Working file: gui/gui.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/gui.h,v
Working file: gui/gui.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/icon_bochs.h,v
Working file: gui/icon_bochs.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/macintosh.cc,v
Working file: gui/macintosh.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/nogui.cc,v
Working file: gui/nogui.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/02 22:37:28;  author: bryce;  state: Exp;  lines: +1 -1
- this was obviously not tested, because it was missing a comma on an
  argument list!
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/win32.cc,v
Working file: gui/win32.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/x.cc,v
Working file: gui/x.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/bitmaps/floppya.h,v
Working file: gui/bitmaps/floppya.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/bitmaps/floppyb.h,v
Working file: gui/bitmaps/floppyb.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/bitmaps/mouse.h,v
Working file: gui/bitmaps/mouse.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/bitmaps/power.h,v
Working file: gui/bitmaps/power.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/bitmaps/reset.h,v
Working file: gui/bitmaps/reset.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/gui/bitmaps/snapshot.h,v
Working file: gui/bitmaps/snapshot.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/instrument/example0/Makefile.in,v
Working file: instrument/example0/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/instrument/example0/instrument.cc,v
Working file: instrument/example0/instrument.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/instrument/example0/instrument.h,v
Working file: instrument/example0/instrument.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/instrument/stubs/.cvsignore,v
Working file: instrument/stubs/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/instrument/stubs/Makefile.in,v
Working file: instrument/stubs/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/instrument/stubs/instrument.cc,v
Working file: instrument/stubs/instrument.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/instrument/stubs/instrument.h,v
Working file: instrument/stubs/instrument.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/.cvsignore,v
Working file: iodev/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/Makefile.in,v
Working file: iodev/Makefile.in
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/31 20:07:29;  author: bryce;  state: Exp;  lines: +2 -1
- added ioapic.o, only when --enable-apic is on
----------------------------
revision 1.2
date: 2001/03/29 00:36:13;  author: bryce;  state: Exp;  lines: +2 -1
- added I/O APIC
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/cdrom.cc,v
Working file: iodev/cdrom.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/cdrom.h,v
Working file: iodev/cdrom.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/cmos.cc,v
Working file: iodev/cmos.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/cmos.h,v
Working file: iodev/cmos.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/devices.cc,v
Working file: iodev/devices.cc
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.4
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/04/02 02:09:52;  author: bryce;  state: Exp;  lines: +7 -0
- in timer handler, call local_apic.periodic on each cpu
----------------------------
revision 1.3
date: 2001/03/29 00:36:13;  author: bryce;  state: Exp;  lines: +7 -0
- added I/O APIC
----------------------------
revision 1.2
date: 2001/03/26 16:56:56;  author: bryce;  state: Exp;  lines: +3 -2
- on initialization, give the bx_devices_c object a pointer to the memory
  space it should work in.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/dma.cc,v
Working file: iodev/dma.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/dma.h,v
Working file: iodev/dma.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/eth.cc,v
Working file: iodev/eth.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/eth.h,v
Working file: iodev/eth.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/eth_fbsd.cc,v
Working file: iodev/eth_fbsd.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/eth_null.cc,v
Working file: iodev/eth_null.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/floppy.cc,v
Working file: iodev/floppy.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/floppy.h,v
Working file: iodev/floppy.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/guest2host.cc,v
Working file: iodev/guest2host.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/guest2host.h,v
Working file: iodev/guest2host.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/harddrv.cc,v
Working file: iodev/harddrv.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 05:43:37;  author: bryce;  state: Exp;  lines: +15 -0
- applied patch 403004 from sourceforge
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/harddrv.h,v
Working file: iodev/harddrv.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/ioapic.cc,v
Working file: iodev/ioapic.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.2
	added-ioapic: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/31 02:34:15;  author: bryce;  state: Exp;  lines: +14 -7
- local apic code conditioned on bx_dbg.apic
- I/O apic code conditioned on bx_dbg.ioapic
----------------------------
revision 1.2
date: 2001/03/29 21:33:41;  author: bryce;  state: Exp;  lines: +11 -38
- I/O apic destination field is actually 8 bits wide.
- removed initialization hacks.  It should NOT be enabled at boot time.
- you MUST service the I/O APIC after writing a redirection table entry,
  since an interrupt can be waiting around in IRR.
- moved deliver into base class bx_generic_apic_c.
----------------------------
revision 1.1
date: 2001/03/29 00:43:22;  author: bryce;  state: Exp;
- added I/O APIC model, using bx_generic_apic_c as a base class.
- the I/O APIC interface is mostly implemented (though not necessarily
  correctly).  It has a redirection table, etc. although not all the
  delivery modes work.  I have given it an IRR (bitmask the gets set
  when an interrupt is triggered and cleared when it is sent off to the
  destination), though it's not obvious from the data sheet that it
  should have one.  To make it run the boot BIOS code, I thought
  (at the time) that it would only work if it remembered interrupts
  that happened before the mask was removed.  This may be wrong.
- HACK ALERT: I have initialized this guy so that it sends interrupts
  just like the PIC did: 0->8, 1->9, ..., 8->0x70, 9->0x71.  And the
  destination is initialized to the bootstrap processor, which is
  currently 2.  It's ugly.  The right solution I believe is to initialize
  as the hardware datasheet says (what a concept) and program rombios.c
  to use APIC controls instead of PIC controls.
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/ioapic.h,v
Working file: iodev/ioapic.h
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/29 21:33:41;  author: bryce;  state: Exp;  lines: +4 -2
- I/O apic destination field is actually 8 bits wide.
- removed initialization hacks.  It should NOT be enabled at boot time.
- you MUST service the I/O APIC after writing a redirection table entry,
  since an interrupt can be waiting around in IRR.
- moved deliver into base class bx_generic_apic_c.
----------------------------
revision 1.1
date: 2001/03/29 00:43:22;  author: bryce;  state: Exp;
- added I/O APIC model, using bx_generic_apic_c as a base class.
- the I/O APIC interface is mostly implemented (though not necessarily
  correctly).  It has a redirection table, etc. although not all the
  delivery modes work.  I have given it an IRR (bitmask the gets set
  when an interrupt is triggered and cleared when it is sent off to the
  destination), though it's not obvious from the data sheet that it
  should have one.  To make it run the boot BIOS code, I thought
  (at the time) that it would only work if it remembered interrupts
  that happened before the mask was removed.  This may be wrong.
- HACK ALERT: I have initialized this guy so that it sends interrupts
  just like the PIC did: 0->8, 1->9, ..., 8->0x70, 9->0x71.  And the
  destination is initialized to the bootstrap processor, which is
  currently 2.  It's ugly.  The right solution I believe is to initialize
  as the hardware datasheet says (what a concept) and program rombios.c
  to use APIC controls instead of PIC controls.
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/iodev.h,v
Working file: iodev/iodev.h
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/29 00:36:25;  author: bryce;  state: Exp;  lines: +5 -0
- added I/O APIC
----------------------------
revision 1.2
date: 2001/03/26 16:57:09;  author: bryce;  state: Exp;  lines: +2 -1
- on initialization, give the bx_devices_c object a pointer to the memory
  space it should work in.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/keyboard.cc,v
Working file: iodev/keyboard.cc
head: 1.5
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.5
	portability-testing1: 1.5
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 5;	selected revisions: 5
description:
----------------------------
revision 1.5
date: 2001/04/03 05:55:52;  author: bryce;  state: Exp;  lines: +14 -0
- applied patch 403027 from sourceforge, Greg Alexander.  This patch adds
  a "read data" command to the mouse.  Also he changed a mouse panic into
  a printf, as I had done in revision 1.2.
----------------------------
revision 1.4
date: 2001/04/03 05:53:22;  author: bryce;  state: Exp;  lines: +0 -14
- reverted patch 403018 from sourceforge so that I could do patch
  403027 (context diff, much safer!) instead.
----------------------------
revision 1.3
date: 2001/04/03 05:48:50;  author: bryce;  state: Exp;  lines: +14 -0
- applied patch 403018 from sourceforge
----------------------------
revision 1.2
date: 2001/03/19 17:40:54;  author: bryce;  state: Exp;  lines: +1 -1
- warn instead of panic on "write mouse outb".  This was causing my
  redhat 6.2 boot disk to fail.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/keyboard.h,v
Working file: iodev/keyboard.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/ne2k.cc,v
Working file: iodev/ne2k.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/ne2k.h,v
Working file: iodev/ne2k.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/parallel.cc,v
Working file: iodev/parallel.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/parallel.h,v
Working file: iodev/parallel.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/pci.cc,v
Working file: iodev/pci.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/03/26 16:59:08;  author: bryce;  state: Exp;  lines: +4 -4
- when possible, use internal references to the object's members, rather
  than going through the hardcoded bx_pci object.
- use devices->mem instead of BX_MEM, for same reason
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/pci.h,v
Working file: iodev/pci.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/pic.cc,v
Working file: iodev/pic.cc
head: 1.5
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.5
	portability-testing1: 1.5
	REL-smpbochs-03-30-2000: 1.5
	ported-to-dec-osf1-gcc: 1.5
	local-APIC-timers-tick: 1.5
	smp-linux-boots: 1.3
	added-ioapic: 1.2
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 5;	selected revisions: 5
description:
----------------------------
revision 1.5
date: 2001/03/31 01:32:36;  author: bryce;  state: Exp;  lines: +2 -2
- Don't use prev. revision!  I mistyped BX_APIC_SUPPORT and trashed
  interrupt delivery to the I/O APIC.  Fixed now.
----------------------------
revision 1.4
date: 2001/03/31 01:13:35;  author: bryce;  state: Exp;  lines: +4 -0
- add #ifs around ioapic-specific code
----------------------------
revision 1.3
date: 2001/03/29 20:53:25;  author: bryce;  state: Exp;  lines: +0 -30
- forward all trigger_irq and untrigger_irq method calls to the I/O APIC
  in addition to the PIC.  The APIC is disabled at startup, so it won't
  do any harm until some OS turns it on.  In any case, most of the iodev/*.cc
  devices were hard-coded to call pic->[un]trigger_irq so it was easier
  to wire up the new APIC there rather than change all the interrupt
  sources.
----------------------------
revision 1.2
date: 2001/03/29 00:38:06;  author: bryce;  state: Exp;  lines: +36 -0
- TEMPORARY HACK ALERT!
- for now, this PIC model forwards its commands to the APIC.  This allows
  the BIOS code to continue to use PIC-style interface while I work on
  the APIC model and get its interrupt forwarding to work.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/pic.h,v
Working file: iodev/pic.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/pit.cc,v
Working file: iodev/pit.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.3
	before-using-SMF=0: 1.3
	working-on-smp-03-21pm: 1.3
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/22 03:28:59;  author: bryce;  state: Exp;  lines: +1 -1
- allow mode 0 on timer 2.  Since the same code services all timers, I
  can't see any reason it would be restricted.
----------------------------
revision 1.2
date: 2001/03/19 17:39:51;  author: bryce;  state: Exp;  lines: +4 -3
- enabled debug line for pit again
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/pit.h,v
Working file: iodev/pit.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/sb16.cc,v
Working file: iodev/sb16.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/sb16.h,v
Working file: iodev/sb16.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/serial.cc,v
Working file: iodev/serial.cc
head: 1.2
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.2
	portability-testing1: 1.2
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 2;	selected revisions: 2
description:
----------------------------
revision 1.2
date: 2001/04/03 07:45:56;  author: bryce;  state: Exp;  lines: +1 -1
- chbuf was not initialized
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/serial.h,v
Working file: iodev/serial.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/soundlnx.cc,v
Working file: iodev/soundlnx.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/soundlnx.h,v
Working file: iodev/soundlnx.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/soundwin.cc,v
Working file: iodev/soundwin.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/soundwin.h,v
Working file: iodev/soundwin.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/unmapped.cc,v
Working file: iodev/unmapped.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/unmapped.h,v
Working file: iodev/unmapped.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/vga.cc,v
Working file: iodev/vga.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.2
	ported-to-dec-osf1-gcc: 1.2
	local-APIC-timers-tick: 1.2
	smp-linux-boots: 1.2
	added-ioapic: 1.2
	all-processors-boot: 1.2
	working-on-smp-03-26am: 1.2
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/04/03 05:27:01;  author: bryce;  state: Exp;  lines: +4 -1
- applied patch 402991 from sourceforge
----------------------------
revision 1.2
date: 2001/03/26 16:57:56;  author: bryce;  state: Exp;  lines: +2 -2
- use the devices->mem pointer to a BX_MEM_C structure, so that it points
  to the right memory space.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/iodev/vga.h,v
Working file: iodev/vga.h
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/memory/.cvsignore,v
Working file: memory/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/memory/Makefile.in,v
Working file: memory/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/memory/memory.cc,v
Working file: memory/memory.cc
head: 1.8
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.8
	portability-testing1: 1.8
	REL-smpbochs-03-30-2000: 1.8
	ported-to-dec-osf1-gcc: 1.8
	local-APIC-timers-tick: 1.8
	smp-linux-boots: 1.8
	added-ioapic: 1.7
	all-processors-boot: 1.6
	working-on-smp-03-26am: 1.5
	cpu-and-mem-are-arrays: 1.4
	before-using-SMF=0: 1.3
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 8;	selected revisions: 8
description:
----------------------------
revision 1.8
date: 2001/03/29 20:52:05;  author: bryce;  state: Exp;  lines: +0 -2
- removed debug info related to APIC memory-mapped I/O read
----------------------------
revision 1.7
date: 2001/03/29 00:35:53;  author: bryce;  state: Exp;  lines: +14 -24
- now both the the local APIC and I/O APIC are memory mapped.  I moved some
  decoding code into methods of the APIC base class to clean this up.
----------------------------
revision 1.6
date: 2001/03/27 17:12:24;  author: bryce;  state: Exp;  lines: +4 -6
- read_physical and write_physical have a BX_CPU pointer now
- apic is no longer hardcoded to 0
----------------------------
revision 1.5
date: 2001/03/26 17:26:26;  author: bryce;  state: Exp;  lines: +2 -2
- BX_CPU and BX_MEM are arrays of pointers now
----------------------------
revision 1.4
date: 2001/03/26 17:00:24;  author: bryce;  state: Exp;  lines: +42 -40
- use references to internal members, rather than BX_MEM
- for now, always use APIC on processor 0
----------------------------
revision 1.3
date: 2001/03/26 16:29:06;  author: bryce;  state: Exp;  lines: +1 -0
- after my apic read code, I allowed it to continue with the normal code
  and overwrite my apic result.  Added a return to prevent that.
----------------------------
revision 1.2
date: 2001/03/23 15:05:01;  author: bryce;  state: Exp;  lines: +35 -1
- added memory-mapped APIC, default address 0xfee00000
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/memory/memory.h,v
Working file: memory/memory.h
head: 1.4
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.4
	portability-testing1: 1.4
	REL-smpbochs-03-30-2000: 1.4
	ported-to-dec-osf1-gcc: 1.4
	local-APIC-timers-tick: 1.4
	smp-linux-boots: 1.4
	added-ioapic: 1.4
	all-processors-boot: 1.4
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.2
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 4;	selected revisions: 4
description:
----------------------------
revision 1.4
date: 2001/03/27 17:12:25;  author: bryce;  state: Exp;  lines: +2 -2
- read_physical and write_physical have a BX_CPU pointer now
- apic is no longer hardcoded to 0
----------------------------
revision 1.3
date: 2001/03/26 17:26:26;  author: bryce;  state: Exp;  lines: +3 -3
- BX_CPU and BX_MEM are arrays of pointers now
----------------------------
revision 1.2
date: 2001/03/26 17:00:57;  author: bryce;  state: Exp;  lines: +7 -4
- don't use SMF
- various hacks to get it to compile with BX_MEM as an array.
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/memory/misc_mem.cc,v
Working file: memory/misc_mem.cc
head: 1.3
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.3
	portability-testing1: 1.3
	REL-smpbochs-03-30-2000: 1.3
	ported-to-dec-osf1-gcc: 1.3
	local-APIC-timers-tick: 1.3
	smp-linux-boots: 1.3
	added-ioapic: 1.3
	all-processors-boot: 1.3
	working-on-smp-03-26am: 1.3
	cpu-and-mem-are-arrays: 1.3
	before-using-SMF=0: 1.2
	working-on-smp-03-21pm: 1.2
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 1.3
date: 2001/03/26 17:01:26;  author: bryce;  state: Exp;  lines: +17 -17
- in BX_MEM_C methods, use internal references to member data
----------------------------
revision 1.2
date: 2001/03/19 17:41:23;  author: bryce;  state: Exp;  lines: +2 -0
- add warning when debugger fetches memory out of range, instead of failing
  silently
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/.cvsignore,v
Working file: misc/.cvsignore
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 18:01:14;  author: bryce;  state: Exp;
- add .cvsignore
=============================================================================

RCS file: /home/cvsroot/bochs/misc/Makefile.in,v
Working file: misc/Makefile.in
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/fstab,v
Working file: misc/fstab
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/hello.cc,v
Working file: misc/hello.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/install_redhat50,v
Working file: misc/install_redhat50
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/lilo.conf,v
Working file: misc/lilo.conf
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/make_cmos_image.cc,v
Working file: misc/make_cmos_image.cc
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/network,v
Working file: misc/network
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/xmods,v
Working file: misc/xmods
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/sb16/sb16ctrl.c,v
Working file: misc/sb16/sb16ctrl.c
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/sb16/sb16ctrl.example,v
Working file: misc/sb16/sb16ctrl.example
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: kv
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/17 06:10:58;  author: bryce;  state: Exp;
- entered bochs version 2000-03-25
=============================================================================

RCS file: /home/cvsroot/bochs/misc/sb16/sb16ctrl.exe,v
Working file: misc/sb16/sb16ctrl.exe
head: 1.1
branch:
locks: strict
access list:
symbolic names:
	REL-smpbochs-04-03-2000: 1.1
	portability-testing1: 1.1
	REL-smpbochs-03-30-2000: 1.1
	ported-to-dec-osf1-gcc: 1.1
	local-APIC-timers-tick: 1.1
	smp-linux-boots: 1.1
	added-ioapic: 1.1
	all-processors-boot: 1.1
	working-on-smp-03-26am: 1.1
	cpu-and-mem-are-arrays: 1.1
	before-using-SMF=0: 1.1
	working-on-smp-03-21pm: 1.1
	original-03-25-2000: 1.1
keyword substitution: b
total revisions: 1;	selected revisions: 1
description:
----------------------------
revision 1.1
date: 2001/03/19 17:33:16;  author: bryce;  state: Exp;
- added with -kb option
=============================================================================

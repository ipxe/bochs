.\Document Author:  Timothy R. Butler   -   tbutler@uninetsolutions.com
.TH bochsrc 1 "The Bochs Project           bochsrc            2 Jun 2001"
.\"SKIP_SECTION"
.SH NAME
bochsrc \- Configuration file for Bochs.
.\"SKIP_SECTION"
.SH DESCRIPTION
.LP
Bochsrc   is  the   configuration   file  that specifies
where  Bochs should look for disk images,  how the Bochs
emulation layer  should  work,  etc.   The  syntax  used
for bochsrc  can also be used as command line  arguments
for Bochs. The .bochsrc  file should be placed either in
the current  directory  before running  Bochs or in your
home directory.
.\".\"DONT_SPLIT"
.SH OPTIONS

.TP
.I "ROMIMAGE:"
You need to load  a ROM BIOS into  F0000-FFFFF.
Most of the BIOS hooks have been wiped out and
replace them with real BIOS support. Normally,
you can use a precompiled BIOS in  the
.B bios/
directory,  named
.B BIOS-bochs-yymmdd.
Use the latest one in
there.

Example:
        romimage: file=bios/BIOS-bochs-970717

.TP
.I "MEGS:"
Set this to the default number of Megabytes of
memory you want to emulate.  You may also pass
the
.B '-megs xyz'
option to bochs.  The  default
is 32MB, most OS's won't need more than that.

Example:
        megs: 32

.TP
.I "VGAROMIMAGE:"
You  also  need to load a VGA  ROM  BIOS  into
C0000 . You can use this setting to accomplish
that.

Example:
        vgaromimage: bios/VGABIOS-elpin-2.40

.TP
.I "FLOPPYx:"
Point this to  the pathname of  a floppy image
file  or device. This should be of a  bootable
floppy (image/device)  if you're  booting from
'a' . You should replace  "x" in the name with
either  "A"  or  "B" to represent  the  floppy
drive you wish to configure.

You can set the initial status of the media to
'ejected' or 'inserted'.

Examples:

2.88M 3.5" Floppy:
        floppya: 2_88=path, status=ejected

1.44M 3.5" Floppy:
        floppya: 1_44=path, status=inserted

1.2M  5.25" Floppy:
        floppya: 1_2=path, status=ejected

720K  3.5" Floppy:
        floppya: 720k=path, status=inserted

.TP
.I "FLOPPYB:"
See FLOPPYA.

.TP
.I "DISKx:"
Point  this at the disk image you want to  use
as for a hard disk . If you use bximage(1)  to
create   the  image,  it  will  give  you  the
required  cyl,  head, and spt information. You
should replace "x" in the name with either "C"
or "D" to  represent  the hard disk drive  you
wish to configure.

.B NOTE:
You cannot use both diskd and cdromd together.

Examples:
   diskc: file=10M.i, cyl=306, heads=4, spt=17
 diskc: file=112M.i, cyl=900, heads=15, spt=17
 diskd: file=483.i, cyl=1024, heads=15, spt=63


.TP
.I "CDROMD:"
Point  this  to a pathname  of a  CD-ROM image
file  or  device.  Currently  only  drive  "D"
is supported for this setting.

.B NOTE:
You cannot use both diskd and cdromd together.


Examples:
        cdromd: dev=/dev/cdrom, status=inserted
        cdromd: dev=/dev/cdrom, status=ejected

.TP
.I "NEWHARDDRIVESUPPORT:"
This  setting enables  support for large  hard
disks,  better  CD  recognition,  and  various
other  useful  functions.  You  can set it  to
"enabled=0" (off)  or "enabled=0" (on).  It is
recommended  that  this  setting  is  left  on
unless you are having trouble with it.

Example:
        newharddrivesupport: enabled=1

.TP
.I "BOOT:"
This defines  your boot drive. You can  either
boot from 'a' or 'c'.

Example:
        boot: c

.TP
.I "LOG:"
Give the path of the log file you'd like Bochs
debug and misc. verbage to be written to .  If
you really don't want it, make it /dev/null.

Examples:
        log: ./bochs.out
        log: /dev/tty
        log: /dev/null

.TP
.I "PANIC:"
This  setting tells Bochs how to respond to  a
panic in the  emulation.   You can set this to
fatal  (terminate the session) , report (print
information to the  console),  or  ignore  (do
nothing).  If  you choose to continue  after a
panic, don't be surprised if you get strange
behavior or crashes.

Example:
        panic: action=fatal


.TP
.I "ERROR:"
This  setting tells Bochs how to respond to an
error in the  emulation.   You can set this to
fatal  (terminate the session) , report (print
information to the  console),  or  ignore  (do
nothing).  When this happens,  something  went
wrong, but it is probably safe to continue the
simulation.

Example:
        error: action=report

.TP
.I "INFO:"
This  setting  tells Bochs what to do when  an
event  occurs  that  generates   informational
messages .   You   can  set  this   to   fatal
( terminate  the  session ) ,  report  ( print
information to the  console),  or  ignore  (do
nothing). For  general  usage ,  the  "report"
option is probably a good choice.

Example:
        info: action=report

.TP
.I "DEBUG:"
This  setting  tells Bochs what to do when  an
event occurs  that generates messages intended
to assist in debugging.  You  can set this  to
fatal  (terminate the session),  report (print
information to the  console),  or  ignore  (do
nothing). You  should  generally  set  this to
ignore,  these  messages  are useful only when
debugging the code.

.B NOTE:
This  may  spit  out  thousands  of
messages per second.

Example:
        debug: action=ignore

.TP
.I "SB16:"
This  defines the SB16 sound emulation. It can
have several of the  following properties. All
properties are in this format:
         sb16: property=value


.B PROPERTIES FOR sb16:

midi:

The  filename is where the midi data is  sent.
This can  be  a device  or just a file if  you
want to record the midi data.

midimode:

 0 = No data should be output.
 1 = output to device (system dependent - midi
 denotes the device driver).
 2 = SMF file output, including headers .
 3 = Output  the midi  data stream to the file
 (no  midi headers  and  no delta  times, just
 command and data bytes).

wave:

This  is the device/file where wave  output is
stored.

wavemode:

 0 = no data
 1 = output to device (system dependent - wave
 denotes the device driver).
 2 = VOC file output, including headers.
 3 = Output the raw wave stream to the file.

log:

The file to write the sb16 emulator messages to.

loglevel:

 0 = No log.
 1 = Only midi program and bank changes.
 2 = Severe errors.
 3 = All errors.
 4 = All errors plus all port accesses.
 5 = All  errors and port  accesses plus a lot
 of extra information.

dmatimer:

Microseconds per second for a DMA cycle.  Make
it smaller to fix non-continous sound.  750000
is  usually  a  good  value .   This  needs  a
reasonably  correct   setting  for  IPS   (see
below).


Example:
        sb16: midimode=1, midi=/dev/midi00,
        wavemode=1, wave=/dev/dsp, loglevel=2,
        log=sb16.log, dmatimer=600000

.B NOTE:
The  example is  wrapped onto three  lines for
formatting  reasons, but  it should all be  on
one line in the actual bochsrc file.

.TP
.I "VGA_UPDATE_INTERVAL:"
Video memory is scanned for updates and screen
updated  every so many virtual  seconds.   The
default  is  300000,   about  3Hz .   This  is
generally plenty.  Keep in mind that you  must
tweak  the 'ips:' directive to be as close  to
the number of emulated instructions-per-second
your  workstation  can  do,  for  this  to  be
accurate.

Examples:
        vga_update_interval: 250000


.TP
.I "KEYBOARD_SERIAL_DELAY:"
Approximate time in microseconds that it takes
one  character  to   be  transfered  from  the
keyboard to controller over the serial path.

Examples:
        keyboard_serial_delay: 200

.TP
.I "FLOPPY_COMMAND_DELAY:"
Time in microseconds to wait before completing
some  floppy  commands  such  as read,  write,
seek,  etc.,   which  normally  have  a  delay
associated.  This was  previous  hardwired  to
50,000.

Examples:
        floppy_command_delay: 50000

.TP
.I "IPS:"
Emulated Instructions Per Second.  This is the
number of IPS that bochs is capable of running
on your  machine.  You  can  recompile  Bochs,
using  instructions  included in  config.h (in
the source code),  to find  your workstation's
capability.

IPS is  used to calibrate many  time-dependent
events  within  the  bochs  simulation .   For
example, changing IPS affects the frequency of
VGA updates, the duration of time before a key
starts to autorepeat,  and the measurement  of
BogoMips and other benchmarks.

Example Specifications*:
        Machine                           Mips
---------------------------------------------------
650Mhz Athlon K-7 with Linux 2.4.x    2 to 2.5
400Mhz Pentium II with Linux 2.0.x    1 to 1.8
166Mhz 64bit Sparc with Solaris 2.x       0.75
200Mhz Pentium with Linux 2.x              0.5
 *  Mips  are  dependant on  OS  and  compiler
configuration  in addition  to processor clock
speed.

Example:
        ips: 1000000


.TP
.I "MOUSE:"
This option prevents Bochs from creating mouse
"events"  unless  a  mouse  is  enabled .  The
hardware emulation  itself is not disabled  by
this. You  can  turn the mouse on  by  setting
enabled to  1,  or  turn  it  off  by  setting
enabled to 0. Unless  you  have  a  particular
reason  for enabling  the  mouse  by  default,
it is recommended that you leave it off.

Examples:
        mouse: enabled=1
        mouse: enabled=0

.TP
.I "PRIVATE_COLORMAP:"
Requests that the GUI create and use it's  own
non-shared colormap.  This  colormap  will  be
used when in the bochs window. If not enabled,
a shared  colormap  scheme  may be used.  Once
again, enabled=1  turns on this feature  and 0
turns it off.

Examples:
        private_colormap: enabled=1

.\"SKIP_SECTION"
.SH LICENSE
This program  is distributed  under the terms of the  GNU
Lesser General Public License as published  by  the  Free
Software  Foundation.  See  the  COPYING file located  in
/usr/local/bochs/@VERSION@/ for details on the license and
the lack of warrantee.
.\"SKIP_SECTION"
.SH AVAILABILITY
The latest version of this program can be found at:
        http://bochs.sourceforge.net/getcurrent.html
.\"SKIP_SECTION"
.SH SEE ALSO
bochs(1), bochs-dlx(1), bximage(1)
.PP
.nf
The Bochs IA-32 Emulator site on the World Wide Web:
        http://bochs.sourceforge.net
.fi
.\"SKIP_SECTION"
.SH AUTHORS
The   Bochs  emulator  was   created   by  Kevin   Lawton
(kevin@mandrakesoft.com),  and  is  currently  maintained
by the  members of  the  Bochs x86 Emulator Project . You
can see a current roster of members at:
            http://bochs.sourceforge.net/getinvolved.html
.\"SKIP_SECTION"
.SH BUGS
Please  report all  bugs to the bug tracker  on  our  web
site. Just go to http://bochs.sourceforge.net , and click
"Bug Reports" on the sidebar under "Features."
.PP
Provide a detailed description of the bug, the version of
the program you are running, the operating system you are
running the program on  and  the  operating   system  you
are running in the emulator.



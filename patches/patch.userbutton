----------------------------------------------------------------------
Patch name: patch.userbutton
Author: Volker Ruppert
Date:   August 6th 2002

Detailed description:
  This patch adds a headerbar button that can send keyboard shortcuts to the
  guest OS. The shortcut can be defined in the bochsrc or in the config
  interface. It is possible to change it at runtime.

  These shortcuts are currently recognized:
  ctrlaltdel, ctrlaltesc, ctrlaltf1, alttab

  Here is the list of changes:
  
  * userbutton.h and userbutton.xpm added in gui/bitmaps
  * config options for the userbutton shortcut added
  * initialize the new button in the gui.cc
  * the new userbutton handler generates keypresses and relaeses depending on
    the shortcut keyword
  * the gui stops adding buttons to the headerbar if not enough space is left.
    This can happen when the screen width is 320 pixels (done for X11 only).
  * TODO: build a dialog box for the wxWindows gui

  The changes are present in CVS now.

Patch was created with:
  diff -u
Apply patch to what version:
  cvs checked out on DATE
Instructions:
  To patch, go to main bochs directory.
  Type "patch -p0 < THIS_PATCH_FILE".
----------------------------------------------------------------------
diff -urN ../bochs/.bochsrc ./.bochsrc
--- ../bochs/.bochsrc	Fri Aug  2 07:41:04 2002
+++ ./.bochsrc	Thu Aug  8 00:14:01 2002
@@ -447,6 +447,17 @@
 #keyboard_type: mf
 
 #=======================================================================
+# USER_SHORTCUT:
+# This defines the keyboard shortcut to be sent when you press the "user"
+# button in the headerbar. These shortcuts are currently recognized:
+# ctrlaltdel, ctrlaltesc, ctrlaltf1, alttab
+#
+# Example:
+#   user_shortcut: keys=ctrlaltdel
+#=======================================================================
+#user_shortcut: keys=ctrlaltdel
+
+#=======================================================================
 # other stuff
 #=======================================================================
 # magic_break
diff -urN ../bochs/bochs.h ./bochs.h
--- ../bochs/bochs.h	Thu Aug  1 09:34:58 2002
+++ ./bochs.h	Thu Aug  8 00:14:01 2002
@@ -660,6 +660,7 @@
   bx_load32bitOSImage_t load32bitOSImage;
   bx_log_options    log;
   bx_keyboard_options keyboard;
+  bx_param_string_c *Ouser_shortcut;
   } bx_options_t;
 
 extern bx_options_t bx_options;
diff -urN ../bochs/gui/bitmaps/userbutton.h ./gui/bitmaps/userbutton.h
--- ../bochs/gui/bitmaps/userbutton.h	Thu Jan  1 01:00:00 1970
+++ ./gui/bitmaps/userbutton.h	Thu Aug  8 00:14:02 2002
@@ -0,0 +1,19 @@
+/////////////////////////////////////////////////////////////////////////
+// $Id: patch.userbutton,v 1.4 2002/08/09 07:41:43 vruppert Exp $
+/////////////////////////////////////////////////////////////////////////
+#define BX_USER_BMAP_X 32
+#define BX_USER_BMAP_Y 32
+
+static const unsigned char bx_user_bmap[BX_USER_BMAP_X*BX_USER_BMAP_Y/8] = {
+  0x00, 0x00, 0x00, 0x00, 0x84, 0x78, 0x9e, 0x07, 0x84, 0x04, 0x82, 0x08, 
+  0x84, 0x04, 0x82, 0x08, 0x84, 0x38, 0x9e, 0x07, 0x84, 0x40, 0x82, 0x01, 
+  0x84, 0x40, 0x82, 0x06, 0x78, 0x3c, 0x9e, 0x08, 0x00, 0x00, 0x00, 0x00, 
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x1c, 
+  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x80, 0x00, 
+  0x00, 0x00, 0x80, 0x00, 0xfe, 0xff, 0xff, 0x3f, 0x02, 0x00, 0x00, 0x20, 
+  0xaa, 0xaa, 0x2a, 0x2a, 0x02, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x20, 
+  0xaa, 0xaa, 0xaa, 0x2a, 0x52, 0x55, 0x11, 0x25, 0xaa, 0xaa, 0xaa, 0x2a, 
+  0x52, 0x55, 0x01, 0x25, 0xaa, 0xaa, 0x82, 0x2a, 0x52, 0x55, 0x11, 0x25, 
+  0xaa, 0xbf, 0xaa, 0x2a, 0x02, 0x00, 0x00, 0x20, 0xfe, 0xff, 0xff, 0x3f, 
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+  };
diff -urN ../bochs/gui/bitmaps/userbutton.xpm ./gui/bitmaps/userbutton.xpm
--- ../bochs/gui/bitmaps/userbutton.xpm	Thu Jan  1 01:00:00 1970
+++ ./gui/bitmaps/userbutton.xpm	Thu Aug  8 00:22:23 2002
@@ -0,0 +1,40 @@
+/* XPM */
+static char *userbutton_xpm[] = {
+/* columns rows colors chars-per-pixel */
+"32 32 2 1",
+"  c black",
+". c white",
+/* pixels */
+"................................",
+".. .... ...    ..    ..    .....",
+".. .... .. ...... ..... ... ....",
+".. .... .. ...... ..... ... ....",
+".. .... ...   ...    ..    .....",
+".. .... ...... .. .....  .......",
+".. .... ...... .. ..... .  .....",
+"...    ...    ...    .. ... ....",
+"................................",
+"................................",
+"............................. ..",
+"..........................   ...",
+"......................... ......",
+"........................ .......",
+"....................... ........",
+"....................... ........",
+".                             ..",
+". ........................... ..",
+". . . . . . . . . . . ... . . ..",
+". ........................... ..",
+". ........................... ..",
+". . . . . . . . . . . . . . . ..",
+". .. . . . . . . ... ... . .. ..",
+". . . . . . . . . . . . . . . ..",
+". .. . . . . . . ....... . .. ..",
+". . . . . . . . . ..... . . . ..",
+". .. . . . . . . ... ... . .. ..",
+". . . .       . . . . . . . . ..",
+". ........................... ..",
+".                             ..",
+"................................",
+"................................"
+};
diff -urN ../bochs/gui/control.cc ./gui/control.cc
--- ../bochs/gui/control.cc	Wed Aug  7 09:24:32 2002
+++ ./gui/control.cc	Thu Aug  8 00:14:02 2002
@@ -368,11 +368,12 @@
 "7. VGA Update Interval: %d\n"
 "8. Mouse: %s\n"
 "9. Keyboard paste delay: %d\n"
-"10. Instruction tracing: off (doesn't exist yet)\n"
-"11. Continue simulation\n"
-"12. Quit now\n"
+"10. Userbutton shortcut: %s\n"
+"11. Instruction tracing: off (doesn't exist yet)\n"
+"12. Continue simulation\n"
+"13. Quit now\n"
 "\n"
-"Please choose one:  [11] ";
+"Please choose one:  [12] ";
 
 char *menu_prompt_list[BX_CPANEL_N_MENUS] = {
   ask_about_control_panel,
@@ -421,7 +422,8 @@
       /* ips->get (), */
       SIM->get_param_num (BXP_VGA_UPDATE_INTERVAL)->get (), 
       SIM->get_param_num (BXP_MOUSE_ENABLED)->get () ? "enabled" : "disabled",
-      SIM->get_param_num (BXP_KBD_PASTE_DELAY)->get ());
+      SIM->get_param_num (BXP_KBD_PASTE_DELAY)->get (),
+      SIM->get_param_string (BXP_USER_SHORTCUT)->getptr ());
 }
 
 int do_menu (bx_id id) {
@@ -511,7 +513,7 @@
      bx_floppy_options floppyop;
      bx_cdrom_options cdromop;
      build_runtime_options_prompt (runtime_menu_prompt, prompt, 1024);
-     if (ask_uint (prompt, 1, 12, 11, &choice, 10) < 0) return -1;
+     if (ask_uint (prompt, 1, 13, 12, &choice, 10) < 0) return -1;
      switch (choice) {
        case 1: 
          SIM->get_floppy_options (0, &floppyop);
@@ -534,9 +536,10 @@
        case 7: askparam (BXP_VGA_UPDATE_INTERVAL); break;
        case 8: askparam (BXP_MOUSE_ENABLED); break;
        case 9: askparam (BXP_KBD_PASTE_DELAY); break;
-       case 10: NOT_IMPLEMENTED (choice); break;
-       case 11: fprintf (stderr, "Continuing simulation\n"); return 0;
-       case 12:
+       case 10: askparam (BXP_USER_SHORTCUT); break;
+       case 11: NOT_IMPLEMENTED (choice); break;
+       case 12: fprintf (stderr, "Continuing simulation\n"); return 0;
+       case 13:
 	 fprintf (stderr, "You chose quit on the control panel.\n");
 	 SIM->quit_sim (1);
 	 return -1;
diff -urN ../bochs/gui/gui.cc ./gui/gui.cc
--- ../bochs/gui/gui.cc	Sun Aug  4 10:42:34 2002
+++ ./gui/gui.cc	Thu Aug  8 00:14:02 2002
@@ -37,6 +37,7 @@
 #include "gui/bitmaps/paste.h"
 #include "gui/bitmaps/configbutton.h"
 #include "gui/bitmaps/cdromd.h"
+#include "gui/bitmaps/userbutton.h"
 #if BX_WITH_MACOS
 #  include <Disks.h>
 #endif
@@ -82,6 +83,7 @@
   BX_GUI_THIS copy_bmap_id = create_bitmap(bx_copy_bmap, BX_COPY_BMAP_X, BX_COPY_BMAP_Y);
   BX_GUI_THIS paste_bmap_id = create_bitmap(bx_paste_bmap, BX_PASTE_BMAP_X, BX_PASTE_BMAP_Y);
   BX_GUI_THIS config_bmap_id = create_bitmap(bx_config_bmap, BX_CONFIG_BMAP_X, BX_CONFIG_BMAP_Y);
+  BX_GUI_THIS user_bmap_id = create_bitmap(bx_user_bmap, BX_USER_BMAP_X, BX_USER_BMAP_Y);
 
 
   // Add the initial bitmaps to the headerbar, and enable callback routine, for use
@@ -145,6 +147,9 @@
   // Copy button
   BX_GUI_THIS copy_hbar_id = headerbar_bitmap(BX_GUI_THIS copy_bmap_id,
                           BX_GRAVITY_RIGHT, copy_handler);
+  // User button
+  BX_GUI_THIS user_hbar_id = headerbar_bitmap(BX_GUI_THIS user_bmap_id,
+                          BX_GRAVITY_RIGHT, userbutton_handler);
 
   show_headerbar();
 }
@@ -389,6 +394,53 @@
   int old = bx_options.Omouse_enabled->get ();
   BX_DEBUG (("toggle mouse_enabled, now %d", !old));
   bx_options.Omouse_enabled->set (!old);
+}
+
+  void
+bx_gui_c::userbutton_handler(void)
+{
+  unsigned shortcut[4];
+  char *user_shortcut;
+  int i, len;
+
+  len = 0;
+  user_shortcut = bx_options.Ouser_shortcut->getptr();
+  i = 0;
+  if (user_shortcut[0] && (strcmp(user_shortcut, "none"))) {
+    if (!strcmp(user_shortcut, "ctrlaltdel")) {
+      shortcut[0] = BX_KEY_CTRL_L;
+      shortcut[1] = BX_KEY_ALT_L;
+      shortcut[2] = BX_KEY_DELETE;
+      len = 3;
+      }
+    else if (!strcmp(user_shortcut, "ctrlaltesc")) {
+      shortcut[0] = BX_KEY_CTRL_L;
+      shortcut[1] = BX_KEY_ALT_L;
+      shortcut[2] = BX_KEY_ESC;
+      len = 3;
+      }
+    else if (!strcmp(user_shortcut, "ctrlaltf1")) {
+      shortcut[0] = BX_KEY_CTRL_L;
+      shortcut[1] = BX_KEY_ALT_L;
+      shortcut[2] = BX_KEY_F1;
+      len = 3;
+      }
+    else if (!strcmp(user_shortcut, "alttab")) {
+      shortcut[0] = BX_KEY_ALT_L;
+      shortcut[1] = BX_KEY_TAB;
+      len = 2;
+      }
+    else {
+      BX_ERROR(("Unknown shortcut %s ignored", user_shortcut));
+      }
+    while (i < len) {
+      bx_devices.keyboard->gen_scancode(shortcut[i++]);
+    }
+    i--;
+    while (i >= 0) {
+      bx_devices.keyboard->gen_scancode(shortcut[i--] | BX_KEY_RELEASED);
+    }
+  }
 }
 
   void
diff -urN ../bochs/gui/gui.h ./gui/gui.h
--- ../bochs/gui/gui.h	Sat Apr 20 09:19:35 2002
+++ ./gui/gui.h	Thu Aug  8 00:14:02 2002
@@ -83,6 +83,7 @@
   static void snapshot_handler(void);
   static void config_handler(void);
   static void toggle_mouse_enable(void);
+  static void userbutton_handler(void);
   static Bit32s make_text_snapshot (char **snapshot, Bit32u *length);
 
   Boolean floppyA_status;
@@ -98,11 +99,12 @@
   unsigned snapshot_bmap_id, snapshot_hbar_id;
   unsigned config_bmap_id, config_hbar_id;
   unsigned mouse_bmap_id, nomouse_bmap_id, mouse_hbar_id;
+  unsigned user_bmap_id, user_hbar_id;
   };
 
 
 #define BX_MAX_PIXMAPS 16
-#define BX_MAX_HEADERBAR_ENTRIES 10
+#define BX_MAX_HEADERBAR_ENTRIES 11
 #define BX_HEADER_BAR_Y 32
 
 // align pixmaps towards left or right side of header bar
diff -urN ../bochs/gui/siminterface.h ./gui/siminterface.h
--- ../bochs/gui/siminterface.h	Sun Aug  4 10:42:34 2002
+++ ./gui/siminterface.h	Thu Aug  8 00:27:51 2002
@@ -158,6 +158,7 @@
   BXP_KEYBOARD_USEMAPPING,
   BXP_KEYBOARD_MAP,
   BXP_KEYBOARD,
+  BXP_USER_SHORTCUT,
   BXP_ASK_FOR_PATHNAME,   // for general file selection dialog
   BXP_THIS_IS_THE_LAST    // used to determine length of list
 } bx_id;
@@ -173,7 +174,8 @@
   BX_TOOLBAR_PASTE,
   BX_TOOLBAR_SNAPSHOT,
   BX_TOOLBAR_CONFIG,
-  BX_TOOLBAR_MOUSE_EN
+  BX_TOOLBAR_MOUSE_EN,
+  BX_TOOLBAR_USER
 } bx_toolbar_buttons;
 
 // Log level defines
diff -urN ../bochs/gui/wx.cc ./gui/wx.cc
--- ../bochs/gui/wx.cc	Sat Apr 20 09:19:35 2002
+++ ./gui/wx.cc	Thu Aug  8 09:31:24 2002
@@ -612,6 +612,7 @@
           case BX_TOOLBAR_SNAPSHOT: snapshot_handler (); break;
           case BX_TOOLBAR_CONFIG: config_handler (); break;
           case BX_TOOLBAR_MOUSE_EN: toggle_mouse_enable (); break;
+          case BX_TOOLBAR_USER: userbutton_handler (); break;
           default:
             wxLogDebug ("unknown toolbar id %d", event_queue[i].u.toolbar.button);
         }
diff -urN ../bochs/gui/wxmain.cc ./gui/wxmain.cc
--- ../bochs/gui/wxmain.cc	Sat Jun  1 17:44:54 2002
+++ ./gui/wxmain.cc	Thu Aug  8 09:32:53 2002
@@ -55,6 +55,7 @@
 #include "bitmaps/snapshot.xpm"
 #include "bitmaps/mouse.xpm"
 #include "bitmaps/configbutton.xpm"
+#include "bitmaps/userbutton.xpm"
 
 // FIXME: ugly global variables that the bx_gui_c object in wx.cc can use
 // to access the MyFrame and the MyPanel.
@@ -96,7 +97,8 @@
   ID_Toolbar_Paste,
   ID_Toolbar_Snapshot,
   ID_Toolbar_Config,
-  ID_Toolbar_Mouse_en
+  ID_Toolbar_Mouse_en,
+  ID_Toolbar_User
 };
 
 //////////////////////////////////////////////////////////////////////
@@ -174,6 +176,7 @@
   EVT_TOOL(ID_Toolbar_Snapshot, MyFrame::OnToolbarClick)
   EVT_TOOL(ID_Toolbar_Config, MyFrame::OnToolbarClick)
   EVT_TOOL(ID_Toolbar_Mouse_en, MyFrame::OnToolbarClick)
+  EVT_TOOL(ID_Toolbar_User, MyFrame::OnToolbarClick)
 END_EVENT_TABLE()
 
 
@@ -253,6 +256,7 @@
   BX_ADD_TOOL(ID_Toolbar_Snapshot, snapshot_xpm, "Save screen snapshot");
   BX_ADD_TOOL(ID_Toolbar_Config, configbutton_xpm, "Runtime Configuration");
   BX_ADD_TOOL(ID_Toolbar_Mouse_en, mouse_xpm, "Mouse Enable/Disable");
+  BX_ADD_TOOL(ID_Toolbar_User, userbutton_xpm, "Keyboard shortcut");
 
   tb->Realize();
 
@@ -540,6 +544,7 @@
     case ID_Toolbar_Snapshot: which = BX_TOOLBAR_SNAPSHOT; break;
     case ID_Toolbar_Config: which = BX_TOOLBAR_CONFIG; break;
     case ID_Toolbar_Mouse_en: which = BX_TOOLBAR_MOUSE_EN; break;
+    case ID_Toolbar_User: which = BX_TOOLBAR_USER; break;
     default:
       wxLogError ("unknown toolbar id %d", id);
   }
diff -urN ../bochs/gui/x.cc ./gui/x.cc
--- ../bochs/gui/x.cc	Sat May 18 18:02:20 2002
+++ ./gui/x.cc	Thu Aug  8 00:14:02 2002
@@ -1245,15 +1245,23 @@
 bx_gui_c::show_headerbar(void)
 {
   unsigned xorigin;
+  int xleft, xright;
 
   // clear header bar area to white
   XFillRectangle(bx_x_display, win, gc_headerbar_inv, 0,0, dimension_x, bx_headerbar_y);
 
+  xleft = 0;
+  xright = dimension_x;
   for (unsigned i=0; i<bx_headerbar_entries; i++) {
-    if (bx_headerbar_entry[i].alignment == BX_GRAVITY_LEFT)
+    if (bx_headerbar_entry[i].alignment == BX_GRAVITY_LEFT) {
       xorigin = bx_headerbar_entry[i].xorigin;
-    else
+      xleft += bx_headerbar_entry[i].xdim;
+      }
+    else {
       xorigin = dimension_x - bx_headerbar_entry[i].xorigin;
+      xright = xorigin;
+      }
+    if (xright < xleft) break;
     XCopyPlane(bx_x_display, bx_headerbar_entry[i].bitmap, win, gc_headerbar,
       0,0, bx_headerbar_entry[i].xdim, bx_headerbar_entry[i].ydim,
               xorigin, 0, 1);
diff -urN ../bochs/main.cc ./main.cc
--- ../bochs/main.cc	Sun Aug  4 10:42:34 2002
+++ ./main.cc	Thu Aug  8 00:14:02 2002
@@ -1023,6 +1023,12 @@
   bx_options.Okeyboard_type->set_format ("Keyboard type: %s");
   bx_options.Okeyboard_type->set_ask_format ("Enter keyboard type: [%s] ");
 
+  // Userbutton shortcut
+  bx_options.Ouser_shortcut = new bx_param_string_c (BXP_USER_SHORTCUT,
+      "Userbutton shortcut",
+      "Userbutton shortcut",
+      "none", 16);
+
   bx_param_c *other_init_list[] = {
       bx_options.Okeyboard_serial_delay,
       bx_options.Okeyboard_paste_delay,
@@ -1035,6 +1041,7 @@
       bx_options.keyboard.OuseMapping,
       bx_options.keyboard.Okeymap,
       bx_options.Okeyboard_type,
+      bx_options.Ouser_shortcut,
       NULL
   };
   menu = new bx_list_c (BXP_MENU_MISC, "Configure Everything Else", "", other_init_list);
@@ -2357,7 +2364,15 @@
       else if (!strncmp(params[i], "map=", 4)) {
         bx_options.keyboard.Okeymap->set (strdup(&params[i][4]));
         }
+      }
     }
+  else if (!strcmp(params[0], "user_shortcut")) {
+    if (num_params != 2) {
+      BX_PANIC(("%s: user_shortcut directive: wrong # args.", context));
+      }
+    if(!strncmp(params[1], "keys=", 4)) {
+      bx_options.Ouser_shortcut->set (strdup(&params[1][5]));
+      }
   }
 
 

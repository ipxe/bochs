----------------------------------------------------------------------
From Roland Mainz.
Support Sun CDROM.

To patch, go to main bochs directory.
Type "patch -p1 < THIS_PATCH_FILE".
----------------------------------------------------------------------
*** bochs-clean-2000-03-25/iodev/cdrom.cc	Sat Mar 17 01:10:58 2001
--- sun-workshop/iodev/cdrom.cc	Wed Apr  4 11:13:54 2001
***************
*** 40,45 ****
--- 40,55 ----
  }
  #endif
  
+ #ifdef __sun
+ extern "C" {
+ #include <sys/types.h>
+ #include <sys/stat.h>
+ #include <sys/ioctl.h>
+ #include <sys/cdio.h>
+ #define BX_CD_FRAMESIZE CDROM_BLK_2048
+ }
+ #endif /* __sun */
+ 
  #ifdef __OpenBSD__
  // Here is a diff for cdrom.cc which adds support for OpenBSD.
  //
***************
*** 174,180 ****
       DeviceIoControl(hFile, IOCTL_CDROM_READ_TOC, NULL, 0, NULL, 0, &iBytesReturned, NULL);       */
  	 return true;
    }
! #elif __linux__
    {
    struct cdrom_tochdr tochdr;
    if (ioctl(fd, CDROMREADTOCHDR, &tochdr))
--- 184,190 ----
       DeviceIoControl(hFile, IOCTL_CDROM_READ_TOC, NULL, 0, NULL, 0, &iBytesReturned, NULL);       */
  	 return true;
    }
! #elif __linux__ || defined(__sun)
    {
    struct cdrom_tochdr tochdr;
    if (ioctl(fd, CDROMREADTOCHDR, &tochdr))
***************
*** 218,224 ****
--- 228,238 ----
    // Lead out track
    struct cdrom_tocentry tocentry;
    tocentry.cdte_format = (msf) ? CDROM_MSF : CDROM_LBA;
+ #ifdef CDROM_LEADOUT 
+   tocentry.cdte_track = CDROM_LEADOUT;
+ #else
    tocentry.cdte_track = 0xaa;
+ #endif
    if (ioctl(fd, CDROMREADTOCENTRY, &tocentry))
      bx_panic("cdrom: read_toc: READTOCENTRY lead-out failed.\n");
    buf[len++] = 0; // Reserved
***************
*** 340,347 ****
  {
    // Return CD-ROM capacity.  I believe you want to return
    // the number of bytes of capacity the actual media has.
  
! #ifdef __linux__
    {
    // I just looked through the Linux kernel source to see
    // what it does with the ATAPI capacity command, and reversed
--- 354,373 ----
  {
    // Return CD-ROM capacity.  I believe you want to return
    // the number of bytes of capacity the actual media has.
+ #ifdef __sun
+   {
+     struct stat buf = {0};
  
!     if (fd < 0) {
!       bx_panic("cdrom: capacity: file not open.\n");
!     } 
!     
!     if( fstat(fd, &buf) != 0 )
!       bx_panic("cdrom: capacity: stat() failed.\n");
!   
!     return(buf.st_size);
!   }  
! #elif __linux__
    {
    // I just looked through the Linux kernel source to see
    // what it does with the ATAPI capacity command, and reversed

----------------------------------------------------------------------
Patch name: patch-unallowed-lock-opcodes 
Author: Stanislav Shwartsman
Date: 28, March 2003

Detailed description:
 According to the Intel manuals:

  The  LOCK  prefix  can be prepended only to the following instructions
  and  only  to  those  forms  of the instructions where the destination
  operand  is  a  memory operand: ADD, ADC, AND, BTC, BTR, BTS, CMPXCHG,
  CMPXCH8B,  DEC,  INC,  NEG, NOT, OR, SBB, SUB, XOR, XADD, and XCHG. If
  the  LOCK prefix is used with one of these instructions and the source
  operand  is a memory operand, an undefined opcode exception (#UD) will
  be  generated. An undefined opcode exception will also be generated if
  the  LOCK  prefix  is used with any instruction not in the above list.

 Checking of the LOCK prefix done in fetchDecode state and not overloads
 Bochs's execution.
 

Patch was created with:
  cvs diff -u
Apply patch to what version:
  cvs checked out on Sun March 28 2003
Instructions:
  To patch, go to main bochs directory.
  Type "patch -p0 < THIS_PATCH_FILE".
----------------------------------------------------------------------
diff -u -r -N bochs-CVS/cpu/arith32.cc bochs-LOCK-PREFIX/cpu/arith32.cc
--- bochs-CVS/cpu/arith32.cc	2002-10-25 20:26:27.000000000 +0200
+++ bochs-LOCK-PREFIX/cpu/arith32.cc	2003-03-28 23:44:07.000000000 +0200
@@ -863,7 +863,7 @@
     }
 
 #else
-  BX_INFO(("CMPXCHG8B: not implemented yet"));
+  BX_INFO(("CMPXCHG8B: not implemented in CPU_LEVEL < 5"));
   UndefinedOpcode(i);
 #endif
 }
diff -u -r -N bochs-CVS/cpu/cpu.h bochs-LOCK-PREFIX/cpu/cpu.h
--- bochs-CVS/cpu/cpu.h	2003-03-17 02:40:58.000000000 +0200
+++ bochs-LOCK-PREFIX/cpu/cpu.h	2003-03-28 23:25:09.000000000 +0200
@@ -3210,6 +3210,7 @@
 #define BxAnother         0x0020 // bit  5
 #define BxSplitMod11b     0x0040 // bit  6
 #define BxPrefixSSE       0x0080 // bit  7
+#define BxLockable        0x0200 // bit  9
 #define BxRepeatable      0x0800 // bit 11 (pass through to metaInfo field)
 #define BxRepeatableZF    0x1000 // bit 12 (pass through to metaInfo field)
 #define BxGroupN          0x0100 // bits 8
diff -u -r -N bochs-CVS/cpu/fetchdecode.cc bochs-LOCK-PREFIX/cpu/fetchdecode.cc
--- bochs-CVS/cpu/fetchdecode.cc	2003-03-17 02:40:58.000000000 +0200
+++ bochs-LOCK-PREFIX/cpu/fetchdecode.cc	2003-03-29 00:52:11.000000000 +0200
@@ -49,7 +49,7 @@
 // is 6b imul_gvevib sign extended?  don't think
 //   I'm sign extending it properly in old decode/execute
 
-//check all the groups.  Make sure to add duplicates rather
+// check all the groups.  Make sure to add duplicates rather
 // than error.
 
 // mark instructions as changing control transfer, then
@@ -66,8 +66,22 @@
 
 // use 0F as a prefix too?
 
-
-
+/* *********** */
+// LOCK PREFIX //
+/* *********** */
+
+/* 
+ *  The  LOCK  prefix  can be prepended only to the following instructions
+ *  and  only  to  those  forms  of the instructions where the destination
+ *  operand  is  a  memory operand: ADD, ADC, AND, BTC, BTR, BTS, CMPXCHG,
+ *  CMPXCH8B,  DEC,  INC,  NEG, NOT, OR, SBB, SUB, XOR, XADD, and XCHG. If
+ *  the  LOCK prefix is used with one of these instructions and the source
+ *  operand  is a memory operand, an undefined opcode exception (#UD) will
+ *  be  generated. An undefined opcode exception will also be generated if
+ *  the  LOCK  prefix  is used with any instruction not in the above list.
+ *  The XCHG instruction always asserts the LOCK# signal regardless of the
+ *  presence or absence of the LOCK prefix.
+ */
 
 void BxResolveError(bxInstruction_c *);
 
@@ -160,13 +174,13 @@
 } BxOpcodeInfo_t;
 
 static BxOpcodeInfo_t opcodesADD_EwIw[2] = {
-  { 0,  { &BX_CPU_C::ADD_EEwIw } },
-  { 0,  { &BX_CPU_C::ADD_EGwIw } }
+  { BxLockable,  { &BX_CPU_C::ADD_EEwIw } },
+  { 0,           { &BX_CPU_C::ADD_EGwIw } }
   };
 
 static BxOpcodeInfo_t opcodesADD_EdId[2] = {
-  { 0,  { &BX_CPU_C::ADD_EEdId } },
-  { 0,  { &BX_CPU_C::ADD_EGdId } }
+  { BxLockable,  { &BX_CPU_C::ADD_EEdId } },
+  { 0,           { &BX_CPU_C::ADD_EGdId } }
   };
 
 static BxOpcodeInfo_t opcodesADD_GwEw[2] = {
@@ -1056,38 +1070,38 @@
 /* ************* */
 
 static BxOpcodeInfo_t BxOpcodeInfoG1EbIb[8] = {
-  /* 0 */  { BxImmediate_Ib,  &BX_CPU_C::ADD_EbIb },
-  /* 1 */  { BxImmediate_Ib,  &BX_CPU_C::OR_EbIb },
-  /* 2 */  { BxImmediate_Ib,  &BX_CPU_C::ADC_EbIb },
-  /* 3 */  { BxImmediate_Ib,  &BX_CPU_C::SBB_EbIb },
-  /* 4 */  { BxImmediate_Ib,  &BX_CPU_C::AND_EbIb },
-  /* 5 */  { BxImmediate_Ib,  &BX_CPU_C::SUB_EbIb },
-  /* 6 */  { BxImmediate_Ib,  &BX_CPU_C::XOR_EbIb },
-  /* 7 */  { BxImmediate_Ib,  &BX_CPU_C::CMP_EbIb }
+  /* 0 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::ADD_EbIb },
+  /* 1 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::OR_EbIb },
+  /* 2 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::ADC_EbIb },
+  /* 3 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::SBB_EbIb },
+  /* 4 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::AND_EbIb },
+  /* 5 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::SUB_EbIb },
+  /* 6 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::XOR_EbIb },
+  /* 7 */  { BxImmediate_Ib,              &BX_CPU_C::CMP_EbIb }
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG1Ew[8] = {
   // attributes defined in main area
   /* 0 */  { BxSplitMod11b, NULL, opcodesADD_EwIw },
-  /* 1 */  { 0, &BX_CPU_C::OR_EwIw },
-  /* 2 */  { 0, &BX_CPU_C::ADC_EwIw },
-  /* 3 */  { 0, &BX_CPU_C::SBB_EwIw },
-  /* 4 */  { 0, &BX_CPU_C::AND_EwIw },
-  /* 5 */  { 0, &BX_CPU_C::SUB_EwIw },
-  /* 6 */  { 0, &BX_CPU_C::XOR_EwIw },
-  /* 7 */  { 0, &BX_CPU_C::CMP_EwIw }
+  /* 1 */  { BxLockable, &BX_CPU_C::OR_EwIw },
+  /* 2 */  { BxLockable, &BX_CPU_C::ADC_EwIw },
+  /* 3 */  { BxLockable, &BX_CPU_C::SBB_EwIw },
+  /* 4 */  { BxLockable, &BX_CPU_C::AND_EwIw },
+  /* 5 */  { BxLockable, &BX_CPU_C::SUB_EwIw },
+  /* 6 */  { BxLockable, &BX_CPU_C::XOR_EwIw },
+  /* 7 */  { 0,          &BX_CPU_C::CMP_EwIw }
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG1Ed[8] = {
   // attributes defined in main area
   /* 0 */  { BxSplitMod11b, NULL, opcodesADD_EdId },
-  /* 1 */  { 0, &BX_CPU_C::OR_EdId },
-  /* 2 */  { 0, &BX_CPU_C::ADC_EdId },
-  /* 3 */  { 0, &BX_CPU_C::SBB_EdId },
-  /* 4 */  { 0, &BX_CPU_C::AND_EdId },
-  /* 5 */  { 0, &BX_CPU_C::SUB_EdId },
-  /* 6 */  { 0, &BX_CPU_C::XOR_EdId },
-  /* 7 */  { 0, &BX_CPU_C::CMP_EdId }
+  /* 1 */  { BxLockable, &BX_CPU_C::OR_EdId },
+  /* 2 */  { BxLockable, &BX_CPU_C::ADC_EdId },
+  /* 3 */  { BxLockable, &BX_CPU_C::SBB_EdId },
+  /* 4 */  { BxLockable, &BX_CPU_C::AND_EdId },
+  /* 5 */  { BxLockable, &BX_CPU_C::SUB_EdId },
+  /* 6 */  { BxLockable, &BX_CPU_C::XOR_EdId },
+  /* 7 */  { 0,          &BX_CPU_C::CMP_EdId }
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG2Eb[8] = {
@@ -1127,41 +1141,41 @@
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG3Eb[8] = {
-  /* 0 */  { BxImmediate_Ib,  &BX_CPU_C::TEST_EbIb },
-  /* 1 */  { BxImmediate_Ib,  &BX_CPU_C::TEST_EbIb },
-  /* 2 */  { 0,             &BX_CPU_C::NOT_Eb },
-  /* 3 */  { 0,             &BX_CPU_C::NEG_Eb },
-  /* 4 */  { 0,             &BX_CPU_C::MUL_ALEb },
-  /* 5 */  { 0,             &BX_CPU_C::IMUL_ALEb },
-  /* 6 */  { 0,             &BX_CPU_C::DIV_ALEb },
-  /* 7 */  { 0,             &BX_CPU_C::IDIV_ALEb }
+  /* 0 */  { BxImmediate_Ib, &BX_CPU_C::TEST_EbIb },
+  /* 1 */  { BxImmediate_Ib, &BX_CPU_C::TEST_EbIb },
+  /* 2 */  { BxLockable,     &BX_CPU_C::NOT_Eb },
+  /* 3 */  { BxLockable,     &BX_CPU_C::NEG_Eb },
+  /* 4 */  { 0,              &BX_CPU_C::MUL_ALEb },
+  /* 5 */  { 0,              &BX_CPU_C::IMUL_ALEb },
+  /* 6 */  { 0,              &BX_CPU_C::DIV_ALEb },
+  /* 7 */  { 0,              &BX_CPU_C::IDIV_ALEb }
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG3Ew[8] = {
-  /* 0 */  { BxImmediate_Iw,  &BX_CPU_C::TEST_EwIw },
-  /* 1 */  { BxImmediate_Iw,  &BX_CPU_C::TEST_EwIw },
-  /* 2 */  { 0,             &BX_CPU_C::NOT_Ew },
-  /* 3 */  { 0,             &BX_CPU_C::NEG_Ew },
-  /* 4 */  { 0,             &BX_CPU_C::MUL_AXEw },
-  /* 5 */  { 0,             &BX_CPU_C::IMUL_AXEw },
-  /* 6 */  { 0,             &BX_CPU_C::DIV_AXEw },
-  /* 7 */  { 0,             &BX_CPU_C::IDIV_AXEw }
+  /* 0 */  { BxImmediate_Iw, &BX_CPU_C::TEST_EwIw },
+  /* 1 */  { BxImmediate_Iw, &BX_CPU_C::TEST_EwIw },
+  /* 2 */  { BxLockable,     &BX_CPU_C::NOT_Ew },
+  /* 3 */  { BxLockable,     &BX_CPU_C::NEG_Ew },
+  /* 4 */  { 0,              &BX_CPU_C::MUL_AXEw },
+  /* 5 */  { 0,              &BX_CPU_C::IMUL_AXEw },
+  /* 6 */  { 0,              &BX_CPU_C::DIV_AXEw },
+  /* 7 */  { 0,              &BX_CPU_C::IDIV_AXEw }
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG3Ed[8] = {
-  /* 0 */  { BxImmediate_Iv,  &BX_CPU_C::TEST_EdId },
-  /* 1 */  { BxImmediate_Iv,  &BX_CPU_C::TEST_EdId },
-  /* 2 */  { 0,             &BX_CPU_C::NOT_Ed },
-  /* 3 */  { 0,             &BX_CPU_C::NEG_Ed },
-  /* 4 */  { 0,             &BX_CPU_C::MUL_EAXEd },
-  /* 5 */  { 0,             &BX_CPU_C::IMUL_EAXEd },
-  /* 6 */  { 0,             &BX_CPU_C::DIV_EAXEd },
-  /* 7 */  { 0,             &BX_CPU_C::IDIV_EAXEd }
+  /* 0 */  { BxImmediate_Iv, &BX_CPU_C::TEST_EdId },
+  /* 1 */  { BxImmediate_Iv, &BX_CPU_C::TEST_EdId },
+  /* 2 */  { BxLockable,     &BX_CPU_C::NOT_Ed },
+  /* 3 */  { BxLockable,     &BX_CPU_C::NEG_Ed },
+  /* 4 */  { 0,              &BX_CPU_C::MUL_EAXEd },
+  /* 5 */  { 0,              &BX_CPU_C::IMUL_EAXEd },
+  /* 6 */  { 0,              &BX_CPU_C::DIV_EAXEd },
+  /* 7 */  { 0,              &BX_CPU_C::IDIV_EAXEd }
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG4[8] = {
-  /* 0 */  { 0, &BX_CPU_C::INC_Eb },
-  /* 1 */  { 0, &BX_CPU_C::DEC_Eb },
+  /* 0 */  { BxLockable, &BX_CPU_C::INC_Eb },
+  /* 1 */  { BxLockable, &BX_CPU_C::DEC_Eb },
   /* 2 */  { 0, &BX_CPU_C::BxError },
   /* 3 */  { 0, &BX_CPU_C::BxError },
   /* 4 */  { 0, &BX_CPU_C::BxError },
@@ -1172,8 +1186,8 @@
 
 static BxOpcodeInfo_t BxOpcodeInfoG5w[8] = {
   // attributes defined in main area
-  /* 0 */  { 0, &BX_CPU_C::INC_Ew },
-  /* 1 */  { 0, &BX_CPU_C::DEC_Ew },
+  /* 0 */  { BxLockable, &BX_CPU_C::INC_Ew },
+  /* 1 */  { BxLockable, &BX_CPU_C::DEC_Ew },
   /* 2 */  { 0, &BX_CPU_C::CALL_Ew },
   /* 3 */  { 0, &BX_CPU_C::CALL16_Ep },
   /* 4 */  { 0, &BX_CPU_C::JMP_Ew },
@@ -1184,8 +1198,8 @@
 
 static BxOpcodeInfo_t BxOpcodeInfoG5d[8] = {
   // attributes defined in main area
-  /* 0 */  { 0, &BX_CPU_C::INC_Ed },
-  /* 1 */  { 0, &BX_CPU_C::DEC_Ed },
+  /* 0 */  { BxLockable, &BX_CPU_C::INC_Ed },
+  /* 1 */  { BxLockable, &BX_CPU_C::DEC_Ed },
   /* 2 */  { 0, &BX_CPU_C::CALL_Ed },
   /* 3 */  { 0, &BX_CPU_C::CALL32_Ep },
   /* 4 */  { 0, &BX_CPU_C::JMP_Ed },
@@ -1223,15 +1237,15 @@
   /* 1 */  { 0, &BX_CPU_C::BxError },
   /* 2 */  { 0, &BX_CPU_C::BxError },
   /* 3 */  { 0, &BX_CPU_C::BxError },
-  /* 4 */  { BxImmediate_Ib,  &BX_CPU_C::BT_EvIb },
-  /* 5 */  { BxImmediate_Ib,  &BX_CPU_C::BTS_EvIb },
-  /* 6 */  { BxImmediate_Ib,  &BX_CPU_C::BTR_EvIb },
-  /* 7 */  { BxImmediate_Ib,  &BX_CPU_C::BTC_EvIb }
+  /* 4 */  { BxImmediate_Ib,              &BX_CPU_C::BT_EvIb },
+  /* 5 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::BTS_EvIb },
+  /* 6 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::BTR_EvIb },
+  /* 7 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::BTC_EvIb }
   }; 
 
 static BxOpcodeInfo_t BxOpcodeInfoG9[8] = {
   /* 0 */  { 0, &BX_CPU_C::BxError },
-  /* 1 */  { 0, &BX_CPU_C::CMPXCHG8B },
+  /* 1 */  { BxLockable, &BX_CPU_C::CMPXCHG8B },
   /* 2 */  { 0, &BX_CPU_C::BxError },
   /* 3 */  { 0, &BX_CPU_C::BxError },
   /* 4 */  { 0, &BX_CPU_C::BxError },
@@ -1303,69 +1317,69 @@
 
 static BxOpcodeInfo_t BxOpcodeInfo[512*2] = {
   // 512 entries for 16bit mode
-  /* 00 */  { BxAnother,  &BX_CPU_C::ADD_EbGb },
-  /* 01 */  { BxAnother,  &BX_CPU_C::ADD_EwGw },
-  /* 02 */  { BxAnother,  &BX_CPU_C::ADD_GbEb },
+  /* 00 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EbGb },
+  /* 01 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EwGw },
+  /* 02 */  { BxAnother, &BX_CPU_C::ADD_GbEb },
   /* 03 */  { BxAnother | BxSplitMod11b, NULL, opcodesADD_GwEw },
-  /* 04 */  { BxImmediate_Ib,  &BX_CPU_C::ADD_ALIb },
-  /* 05 */  { BxImmediate_Iv,  &BX_CPU_C::ADD_AXIw },
+  /* 04 */  { BxImmediate_Ib, &BX_CPU_C::ADD_ALIb },
+  /* 05 */  { BxImmediate_Iv, &BX_CPU_C::ADD_AXIw },
   /* 06 */  { 0, &BX_CPU_C::PUSH_ES },
   /* 07 */  { 0, &BX_CPU_C::POP_ES },
-  /* 08 */  { BxAnother,  &BX_CPU_C::OR_EbGb },
-  /* 09 */  { BxAnother,  &BX_CPU_C::OR_EwGw },
-  /* 0A */  { BxAnother,  &BX_CPU_C::OR_GbEb },
-  /* 0B */  { BxAnother,  &BX_CPU_C::OR_GwEw },
-  /* 0C */  { BxImmediate_Ib,  &BX_CPU_C::OR_ALIb },
-  /* 0D */  { BxImmediate_Iv,  &BX_CPU_C::OR_AXIw },
+  /* 08 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EbGb },
+  /* 09 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EwGw },
+  /* 0A */  { BxAnother, &BX_CPU_C::OR_GbEb },
+  /* 0B */  { BxAnother, &BX_CPU_C::OR_GwEw },
+  /* 0C */  { BxImmediate_Ib, &BX_CPU_C::OR_ALIb },
+  /* 0D */  { BxImmediate_Iv, &BX_CPU_C::OR_AXIw },
   /* 0E */  { 0, &BX_CPU_C::PUSH_CS },
-  /* 0F */  { BxAnother,  &BX_CPU_C::BxError }, // 2-byte escape
-  /* 10 */  { BxAnother,  &BX_CPU_C::ADC_EbGb },
-  /* 11 */  { BxAnother,  &BX_CPU_C::ADC_EwGw },
-  /* 12 */  { BxAnother,  &BX_CPU_C::ADC_GbEb },
-  /* 13 */  { BxAnother,  &BX_CPU_C::ADC_GwEw },
-  /* 14 */  { BxImmediate_Ib,  &BX_CPU_C::ADC_ALIb },
-  /* 15 */  { BxImmediate_Iv,  &BX_CPU_C::ADC_AXIw },
+  /* 0F */  { BxAnother, &BX_CPU_C::BxError }, // 2-byte escape
+  /* 10 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EbGb },
+  /* 11 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EwGw },
+  /* 12 */  { BxAnother, &BX_CPU_C::ADC_GbEb },
+  /* 13 */  { BxAnother, &BX_CPU_C::ADC_GwEw },
+  /* 14 */  { BxImmediate_Ib, &BX_CPU_C::ADC_ALIb },
+  /* 15 */  { BxImmediate_Iv, &BX_CPU_C::ADC_AXIw },
   /* 16 */  { 0, &BX_CPU_C::PUSH_SS },
   /* 17 */  { 0, &BX_CPU_C::POP_SS },
-  /* 18 */  { BxAnother,  &BX_CPU_C::SBB_EbGb },
-  /* 19 */  { BxAnother,  &BX_CPU_C::SBB_EwGw },
-  /* 1A */  { BxAnother,  &BX_CPU_C::SBB_GbEb },
-  /* 1B */  { BxAnother,  &BX_CPU_C::SBB_GwEw },
-  /* 1C */  { BxImmediate_Ib,  &BX_CPU_C::SBB_ALIb },
-  /* 1D */  { BxImmediate_Iv,  &BX_CPU_C::SBB_AXIw },
+  /* 18 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EbGb },
+  /* 19 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EwGw },
+  /* 1A */  { BxAnother, &BX_CPU_C::SBB_GbEb },
+  /* 1B */  { BxAnother, &BX_CPU_C::SBB_GwEw },
+  /* 1C */  { BxImmediate_Ib, &BX_CPU_C::SBB_ALIb },
+  /* 1D */  { BxImmediate_Iv, &BX_CPU_C::SBB_AXIw },
   /* 1E */  { 0, &BX_CPU_C::PUSH_DS },
   /* 1F */  { 0, &BX_CPU_C::POP_DS },
-  /* 20 */  { BxAnother,  &BX_CPU_C::AND_EbGb },
-  /* 21 */  { BxAnother,  &BX_CPU_C::AND_EwGw },
-  /* 22 */  { BxAnother,  &BX_CPU_C::AND_GbEb },
-  /* 23 */  { BxAnother,  &BX_CPU_C::AND_GwEw },
-  /* 24 */  { BxImmediate_Ib,  &BX_CPU_C::AND_ALIb },
-  /* 25 */  { BxImmediate_Iv,  &BX_CPU_C::AND_AXIw },
-  /* 26 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // ES:
+  /* 20 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EbGb },
+  /* 21 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EwGw },
+  /* 22 */  { BxAnother, &BX_CPU_C::AND_GbEb },
+  /* 23 */  { BxAnother, &BX_CPU_C::AND_GwEw },
+  /* 24 */  { BxImmediate_Ib, &BX_CPU_C::AND_ALIb },
+  /* 25 */  { BxImmediate_Iv, &BX_CPU_C::AND_AXIw },
+  /* 26 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // ES:
   /* 27 */  { 0, &BX_CPU_C::DAA },
-  /* 28 */  { BxAnother,  &BX_CPU_C::SUB_EbGb },
-  /* 29 */  { BxAnother,  &BX_CPU_C::SUB_EwGw },
-  /* 2A */  { BxAnother,  &BX_CPU_C::SUB_GbEb },
-  /* 2B */  { BxAnother,  &BX_CPU_C::SUB_GwEw },
-  /* 2C */  { BxImmediate_Ib,  &BX_CPU_C::SUB_ALIb },
-  /* 2D */  { BxImmediate_Iv,  &BX_CPU_C::SUB_AXIw },
-  /* 2E */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // CS:
+  /* 28 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EbGb },
+  /* 29 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EwGw },
+  /* 2A */  { BxAnother, &BX_CPU_C::SUB_GbEb },
+  /* 2B */  { BxAnother, &BX_CPU_C::SUB_GwEw },
+  /* 2C */  { BxImmediate_Ib, &BX_CPU_C::SUB_ALIb },
+  /* 2D */  { BxImmediate_Iv, &BX_CPU_C::SUB_AXIw },
+  /* 2E */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // CS:
   /* 2F */  { 0, &BX_CPU_C::DAS },
-  /* 30 */  { BxAnother,  &BX_CPU_C::XOR_EbGb },
-  /* 31 */  { BxAnother,  &BX_CPU_C::XOR_EwGw },
-  /* 32 */  { BxAnother,  &BX_CPU_C::XOR_GbEb },
-  /* 33 */  { BxAnother,  &BX_CPU_C::XOR_GwEw },
-  /* 34 */  { BxImmediate_Ib,  &BX_CPU_C::XOR_ALIb },
-  /* 35 */  { BxImmediate_Iv,  &BX_CPU_C::XOR_AXIw },
-  /* 36 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // SS:
+  /* 30 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EbGb },
+  /* 31 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EwGw },
+  /* 32 */  { BxAnother, &BX_CPU_C::XOR_GbEb },
+  /* 33 */  { BxAnother, &BX_CPU_C::XOR_GwEw },
+  /* 34 */  { BxImmediate_Ib, &BX_CPU_C::XOR_ALIb },
+  /* 35 */  { BxImmediate_Iv, &BX_CPU_C::XOR_AXIw },
+  /* 36 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // SS:
   /* 37 */  { 0, &BX_CPU_C::AAA },
-  /* 38 */  { BxAnother,  &BX_CPU_C::CMP_EbGb },
-  /* 39 */  { BxAnother,  &BX_CPU_C::CMP_EwGw },
-  /* 3A */  { BxAnother,  &BX_CPU_C::CMP_GbEb },
-  /* 3B */  { BxAnother,  &BX_CPU_C::CMP_GwEw },
-  /* 3C */  { BxImmediate_Ib,  &BX_CPU_C::CMP_ALIb },
-  /* 3D */  { BxImmediate_Iv,  &BX_CPU_C::CMP_AXIw },
-  /* 3E */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // DS:
+  /* 38 */  { BxAnother, &BX_CPU_C::CMP_EbGb },
+  /* 39 */  { BxAnother, &BX_CPU_C::CMP_EwGw },
+  /* 3A */  { BxAnother, &BX_CPU_C::CMP_GbEb },
+  /* 3B */  { BxAnother, &BX_CPU_C::CMP_GwEw },
+  /* 3C */  { BxImmediate_Ib, &BX_CPU_C::CMP_ALIb },
+  /* 3D */  { BxImmediate_Iv, &BX_CPU_C::CMP_AXIw },
+  /* 3E */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // DS:
   /* 3F */  { 0, &BX_CPU_C::AAS },
   /* 40 */  { 0, &BX_CPU_C::INC_RX },
   /* 41 */  { 0, &BX_CPU_C::INC_RX },
@@ -1401,52 +1415,52 @@
   /* 5F */  { 0, &BX_CPU_C::POP_RX },
   /* 60 */  { 0, &BX_CPU_C::PUSHAD16 },
   /* 61 */  { 0, &BX_CPU_C::POPAD16 },
-  /* 62 */  { BxAnother,  &BX_CPU_C::BOUND_GvMa },
-  /* 63 */  { BxAnother,  &BX_CPU_C::ARPL_EwGw },
-  /* 64 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // FS:
-  /* 65 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // GS:
-  /* 66 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // OS:
-  /* 67 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // AS:
-  /* 68 */  { BxImmediate_Iv,  &BX_CPU_C::PUSH_Iw },
-  /* 69 */  { BxAnother | BxImmediate_Iv,  &BX_CPU_C::IMUL_GwEwIw },
-  /* 6A */  { BxImmediate_Ib_SE,  &BX_CPU_C::PUSH_Iw },
-  /* 6B */  { BxAnother | BxImmediate_Ib_SE,  &BX_CPU_C::IMUL_GwEwIw },
-  /* 6C */  { BxRepeatable,  &BX_CPU_C::INSB_YbDX },
-  /* 6D */  { BxRepeatable,  &BX_CPU_C::INSW_YvDX },
-  /* 6E */  { BxRepeatable,  &BX_CPU_C::OUTSB_DXXb },
-  /* 6F */  { BxRepeatable,  &BX_CPU_C::OUTSW_DXXv },
-  /* 70 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 71 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 72 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 73 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 74 */  { BxImmediate_BrOff8,  &BX_CPU_C::JZ_Jw },
-  /* 75 */  { BxImmediate_BrOff8,  &BX_CPU_C::JNZ_Jw },
-  /* 76 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 77 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 78 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 79 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 7A */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 7B */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 7C */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 7D */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 7E */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
-  /* 7F */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jw },
+  /* 62 */  { BxAnother, &BX_CPU_C::BOUND_GvMa },
+  /* 63 */  { BxAnother, &BX_CPU_C::ARPL_EwGw },
+  /* 64 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // FS:
+  /* 65 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // GS:
+  /* 66 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // OS:
+  /* 67 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // AS:
+  /* 68 */  { BxImmediate_Iv, &BX_CPU_C::PUSH_Iw },
+  /* 69 */  { BxAnother | BxImmediate_Iv, &BX_CPU_C::IMUL_GwEwIw },
+  /* 6A */  { BxImmediate_Ib_SE, &BX_CPU_C::PUSH_Iw },
+  /* 6B */  { BxAnother | BxImmediate_Ib_SE, &BX_CPU_C::IMUL_GwEwIw },
+  /* 6C */  { BxRepeatable, &BX_CPU_C::INSB_YbDX },
+  /* 6D */  { BxRepeatable, &BX_CPU_C::INSW_YvDX },
+  /* 6E */  { BxRepeatable, &BX_CPU_C::OUTSB_DXXb },
+  /* 6F */  { BxRepeatable, &BX_CPU_C::OUTSW_DXXv },
+  /* 70 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 71 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 72 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 73 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 74 */  { BxImmediate_BrOff8, &BX_CPU_C::JZ_Jw },
+  /* 75 */  { BxImmediate_BrOff8, &BX_CPU_C::JNZ_Jw },
+  /* 76 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 77 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 78 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 79 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 7A */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 7B */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 7C */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 7D */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 7E */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
+  /* 7F */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jw },
   /* 80 */  { BxAnother | BxGroup1, NULL, BxOpcodeInfoG1EbIb },
   /* 81 */  { BxAnother | BxGroup1 | BxImmediate_Iv, NULL, BxOpcodeInfoG1Ew },
   /* 82 */  { BxAnother | BxGroup1, NULL, BxOpcodeInfoG1EbIb },
   /* 83 */  { BxAnother | BxGroup1 | BxImmediate_Ib_SE, NULL, BxOpcodeInfoG1Ew },
-  /* 84 */  { BxAnother,  &BX_CPU_C::TEST_EbGb },
-  /* 85 */  { BxAnother,  &BX_CPU_C::TEST_EwGw },
-  /* 86 */  { BxAnother,  &BX_CPU_C::XCHG_EbGb },
-  /* 87 */  { BxAnother,  &BX_CPU_C::XCHG_EwGw },
+  /* 84 */  { BxAnother, &BX_CPU_C::TEST_EbGb },
+  /* 85 */  { BxAnother, &BX_CPU_C::TEST_EwGw },
+  /* 86 */  { BxAnother, &BX_CPU_C::XCHG_EbGb },
+  /* 87 */  { BxAnother, &BX_CPU_C::XCHG_EwGw },
   /* 88 */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_EbGb },
   /* 89 */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_EwGw },
   /* 8A */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_GbEb },
   /* 8B */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_GwEw },
-  /* 8C */  { BxAnother,  &BX_CPU_C::MOV_EwSw },
-  /* 8D */  { BxAnother,  &BX_CPU_C::LEA_GwM },
-  /* 8E */  { BxAnother,  &BX_CPU_C::MOV_SwEw },
-  /* 8F */  { BxAnother,  &BX_CPU_C::POP_Ew },
+  /* 8C */  { BxAnother, &BX_CPU_C::MOV_EwSw },
+  /* 8D */  { BxAnother, &BX_CPU_C::LEA_GwM },
+  /* 8E */  { BxAnother, &BX_CPU_C::MOV_SwEw },
+  /* 8F */  { BxAnother, &BX_CPU_C::POP_Ew },
   /* 90 */  { 0, &BX_CPU_C::NOP },
   /* 91 */  { 0, &BX_CPU_C::XCHG_RXAX },
   /* 92 */  { 0, &BX_CPU_C::XCHG_RXAX },
@@ -1457,96 +1471,96 @@
   /* 97 */  { 0, &BX_CPU_C::XCHG_RXAX },
   /* 98 */  { 0, &BX_CPU_C::CBW },
   /* 99 */  { 0, &BX_CPU_C::CWD },
-  /* 9A */  { BxImmediate_IvIw,  &BX_CPU_C::CALL16_Ap },
+  /* 9A */  { BxImmediate_IvIw, &BX_CPU_C::CALL16_Ap },
   /* 9B */  { 0, &BX_CPU_C::FWAIT },
   /* 9C */  { 0, &BX_CPU_C::PUSHF_Fv },
   /* 9D */  { 0, &BX_CPU_C::POPF_Fv },
   /* 9E */  { 0, &BX_CPU_C::SAHF },
   /* 9F */  { 0, &BX_CPU_C::LAHF },
-  /* A0 */  { BxImmediate_O,  &BX_CPU_C::MOV_ALOb },
-  /* A1 */  { BxImmediate_O,  &BX_CPU_C::MOV_AXOw },
-  /* A2 */  { BxImmediate_O,  &BX_CPU_C::MOV_ObAL },
-  /* A3 */  { BxImmediate_O,  &BX_CPU_C::MOV_OwAX },
-  /* A4 */  { BxRepeatable,  &BX_CPU_C::MOVSB_XbYb },
-  /* A5 */  { BxRepeatable,  &BX_CPU_C::MOVSW_XvYv },
-  /* A6 */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::CMPSB_XbYb },
-  /* A7 */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::CMPSW_XvYv },
-  /* A8 */  { BxImmediate_Ib,  &BX_CPU_C::TEST_ALIb },
-  /* A9 */  { BxImmediate_Iv,  &BX_CPU_C::TEST_AXIw },
-  /* AA */  { BxRepeatable,  &BX_CPU_C::STOSB_YbAL },
-  /* AB */  { BxRepeatable,  &BX_CPU_C::STOSW_YveAX },
-  /* AC */  { BxRepeatable,  &BX_CPU_C::LODSB_ALXb },
-  /* AD */  { BxRepeatable,  &BX_CPU_C::LODSW_eAXXv },
-  /* AE */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::SCASB_ALXb },
-  /* AF */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::SCASW_eAXXv },
-  /* B0 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B1 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B2 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B3 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B4 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B5 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B6 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B7 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B8 */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
-  /* B9 */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
-  /* BA */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
-  /* BB */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
-  /* BC */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
-  /* BD */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
-  /* BE */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
-  /* BF */  { BxImmediate_Iv,  &BX_CPU_C::MOV_RXIw },
+  /* A0 */  { BxImmediate_O, &BX_CPU_C::MOV_ALOb },
+  /* A1 */  { BxImmediate_O, &BX_CPU_C::MOV_AXOw },
+  /* A2 */  { BxImmediate_O, &BX_CPU_C::MOV_ObAL },
+  /* A3 */  { BxImmediate_O, &BX_CPU_C::MOV_OwAX },
+  /* A4 */  { BxRepeatable, &BX_CPU_C::MOVSB_XbYb },
+  /* A5 */  { BxRepeatable, &BX_CPU_C::MOVSW_XvYv },
+  /* A6 */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::CMPSB_XbYb },
+  /* A7 */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::CMPSW_XvYv },
+  /* A8 */  { BxImmediate_Ib, &BX_CPU_C::TEST_ALIb },
+  /* A9 */  { BxImmediate_Iv, &BX_CPU_C::TEST_AXIw },
+  /* AA */  { BxRepeatable, &BX_CPU_C::STOSB_YbAL },
+  /* AB */  { BxRepeatable, &BX_CPU_C::STOSW_YveAX },
+  /* AC */  { BxRepeatable, &BX_CPU_C::LODSB_ALXb },
+  /* AD */  { BxRepeatable, &BX_CPU_C::LODSW_eAXXv },
+  /* AE */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::SCASB_ALXb },
+  /* AF */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::SCASW_eAXXv },
+  /* B0 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B1 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B2 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B3 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B4 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B5 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B6 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B7 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B8 */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
+  /* B9 */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
+  /* BA */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
+  /* BB */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
+  /* BC */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
+  /* BD */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
+  /* BE */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
+  /* BF */  { BxImmediate_Iv, &BX_CPU_C::MOV_RXIw },
   /* C0 */  { BxAnother | BxGroup2 | BxImmediate_Ib, NULL, BxOpcodeInfoG2Eb },
   /* C1 */  { BxAnother | BxGroup2 | BxImmediate_Ib, NULL, BxOpcodeInfoG2Ew },
-  /* C2 */  { BxImmediate_Iw,  &BX_CPU_C::RETnear16_Iw },
+  /* C2 */  { BxImmediate_Iw, &BX_CPU_C::RETnear16_Iw },
   /* C3 */  { 0,               &BX_CPU_C::RETnear16 },
-  /* C4 */  { BxAnother,  &BX_CPU_C::LES_GvMp },
-  /* C5 */  { BxAnother,  &BX_CPU_C::LDS_GvMp },
-  /* C6 */  { BxAnother | BxImmediate_Ib,  &BX_CPU_C::MOV_EbIb },
-  /* C7 */  { BxAnother | BxImmediate_Iv,  &BX_CPU_C::MOV_EwIw },
-  /* C8 */  { BxImmediate_IwIb,  &BX_CPU_C::ENTER_IwIb },
+  /* C4 */  { BxAnother, &BX_CPU_C::LES_GvMp },
+  /* C5 */  { BxAnother, &BX_CPU_C::LDS_GvMp },
+  /* C6 */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::MOV_EbIb },
+  /* C7 */  { BxAnother | BxImmediate_Iv, &BX_CPU_C::MOV_EwIw },
+  /* C8 */  { BxImmediate_IwIb, &BX_CPU_C::ENTER_IwIb },
   /* C9 */  { 0, &BX_CPU_C::LEAVE },
-  /* CA */  { BxImmediate_Iw,  &BX_CPU_C::RETfar16_Iw },
+  /* CA */  { BxImmediate_Iw, &BX_CPU_C::RETfar16_Iw },
   /* CB */  { 0, &BX_CPU_C::RETfar16 },
   /* CC */  { 0, &BX_CPU_C::INT3 },
-  /* CD */  { BxImmediate_Ib,  &BX_CPU_C::INT_Ib },
+  /* CD */  { BxImmediate_Ib, &BX_CPU_C::INT_Ib },
   /* CE */  { 0, &BX_CPU_C::INTO },
   /* CF */  { 0, &BX_CPU_C::IRET16 },
   /* D0 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Eb },
   /* D1 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Ew },
   /* D2 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Eb },
   /* D3 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Ew },
-  /* D4 */  { BxImmediate_Ib,  &BX_CPU_C::AAM },
-  /* D5 */  { BxImmediate_Ib,  &BX_CPU_C::AAD },
+  /* D4 */  { BxImmediate_Ib, &BX_CPU_C::AAM },
+  /* D5 */  { BxImmediate_Ib, &BX_CPU_C::AAD },
   /* D6 */  { 0, &BX_CPU_C::SALC },
   /* D7 */  { 0, &BX_CPU_C::XLAT },
-  /* D8 */  { BxAnother,  &BX_CPU_C::ESC0 },
-  /* D9 */  { BxAnother,  &BX_CPU_C::ESC1 },
-  /* DA */  { BxAnother,  &BX_CPU_C::ESC2 },
-  /* DB */  { BxAnother,  &BX_CPU_C::ESC3 },
-  /* DC */  { BxAnother,  &BX_CPU_C::ESC4 },
-  /* DD */  { BxAnother,  &BX_CPU_C::ESC5 },
-  /* DE */  { BxAnother,  &BX_CPU_C::ESC6 },
-  /* DF */  { BxAnother,  &BX_CPU_C::ESC7 },
-  /* E0 */  { BxImmediate_BrOff8,  &BX_CPU_C::LOOPNE_Jb },
-  /* E1 */  { BxImmediate_BrOff8,  &BX_CPU_C::LOOPE_Jb },
-  /* E2 */  { BxImmediate_BrOff8,  &BX_CPU_C::LOOP_Jb },
-  /* E3 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCXZ_Jb },
-  /* E4 */  { BxImmediate_Ib,  &BX_CPU_C::IN_ALIb },
-  /* E5 */  { BxImmediate_Ib,  &BX_CPU_C::IN_eAXIb },
-  /* E6 */  { BxImmediate_Ib,  &BX_CPU_C::OUT_IbAL },
-  /* E7 */  { BxImmediate_Ib,  &BX_CPU_C::OUT_IbeAX },
-  /* E8 */  { BxImmediate_BrOff16,  &BX_CPU_C::CALL_Aw },
-  /* E9 */  { BxImmediate_BrOff16,  &BX_CPU_C::JMP_Jw },
-  /* EA */  { BxImmediate_IvIw,  &BX_CPU_C::JMP_Ap },
-  /* EB */  { BxImmediate_BrOff8,  &BX_CPU_C::JMP_Jw },
+  /* D8 */  { BxAnother, &BX_CPU_C::ESC0 },
+  /* D9 */  { BxAnother, &BX_CPU_C::ESC1 },
+  /* DA */  { BxAnother, &BX_CPU_C::ESC2 },
+  /* DB */  { BxAnother, &BX_CPU_C::ESC3 },
+  /* DC */  { BxAnother, &BX_CPU_C::ESC4 },
+  /* DD */  { BxAnother, &BX_CPU_C::ESC5 },
+  /* DE */  { BxAnother, &BX_CPU_C::ESC6 },
+  /* DF */  { BxAnother, &BX_CPU_C::ESC7 },
+  /* E0 */  { BxImmediate_BrOff8, &BX_CPU_C::LOOPNE_Jb },
+  /* E1 */  { BxImmediate_BrOff8, &BX_CPU_C::LOOPE_Jb },
+  /* E2 */  { BxImmediate_BrOff8, &BX_CPU_C::LOOP_Jb },
+  /* E3 */  { BxImmediate_BrOff8, &BX_CPU_C::JCXZ_Jb },
+  /* E4 */  { BxImmediate_Ib, &BX_CPU_C::IN_ALIb },
+  /* E5 */  { BxImmediate_Ib, &BX_CPU_C::IN_eAXIb },
+  /* E6 */  { BxImmediate_Ib, &BX_CPU_C::OUT_IbAL },
+  /* E7 */  { BxImmediate_Ib, &BX_CPU_C::OUT_IbeAX },
+  /* E8 */  { BxImmediate_BrOff16, &BX_CPU_C::CALL_Aw },
+  /* E9 */  { BxImmediate_BrOff16, &BX_CPU_C::JMP_Jw },
+  /* EA */  { BxImmediate_IvIw, &BX_CPU_C::JMP_Ap },
+  /* EB */  { BxImmediate_BrOff8, &BX_CPU_C::JMP_Jw },
   /* EC */  { 0, &BX_CPU_C::IN_ALDX },
   /* ED */  { 0, &BX_CPU_C::IN_eAXDX },
   /* EE */  { 0, &BX_CPU_C::OUT_DXAL },
   /* EF */  { 0, &BX_CPU_C::OUT_DXeAX },
-  /* F0 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // LOCK
+  /* F0 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // LOCK
   /* F1 */  { 0, &BX_CPU_C::INT1 },
-  /* F2 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // REPNE/REPNZ
-  /* F3 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // REP, REPE/REPZ
+  /* F2 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // REPNE/REPNZ
+  /* F3 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // REP, REPE/REPZ
   /* F4 */  { 0, &BX_CPU_C::HLT },
   /* F5 */  { 0, &BX_CPU_C::CMC },
   /* F6 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfoG3Eb },
@@ -1562,8 +1576,8 @@
 
   /* 0F 00 */  { BxAnother | BxGroup6, NULL, BxOpcodeInfoG6 },
   /* 0F 01 */  { BxAnother | BxGroup7, NULL, BxOpcodeInfoG7 },
-  /* 0F 02 */  { BxAnother,  &BX_CPU_C::LAR_GvEw },
-  /* 0F 03 */  { BxAnother,  &BX_CPU_C::LSL_GvEw },
+  /* 0F 02 */  { BxAnother, &BX_CPU_C::LAR_GvEw },
+  /* 0F 03 */  { BxAnother, &BX_CPU_C::LSL_GvEw },
   /* 0F 04 */  { 0, &BX_CPU_C::BxError },
 #if BX_SUPPORT_X86_64
   /* 0F 05 */  { 0, &BX_CPU_C::SYSCALL },
@@ -1600,13 +1614,13 @@
   /* 0F 1D */  { 0, &BX_CPU_C::BxError },
   /* 0F 1E */  { 0, &BX_CPU_C::BxError },
   /* 0F 1F */  { 0, &BX_CPU_C::BxError },
-  /* 0F 20 */  { BxAnother,  &BX_CPU_C::MOV_RdCd },
-  /* 0F 21 */  { BxAnother,  &BX_CPU_C::MOV_RdDd },
-  /* 0F 22 */  { BxAnother,  &BX_CPU_C::MOV_CdRd },
-  /* 0F 23 */  { BxAnother,  &BX_CPU_C::MOV_DdRd },
-  /* 0F 24 */  { BxAnother,  &BX_CPU_C::MOV_RdTd },
+  /* 0F 20 */  { BxAnother, &BX_CPU_C::MOV_RdCd },
+  /* 0F 21 */  { BxAnother, &BX_CPU_C::MOV_RdDd },
+  /* 0F 22 */  { BxAnother, &BX_CPU_C::MOV_CdRd },
+  /* 0F 23 */  { BxAnother, &BX_CPU_C::MOV_DdRd },
+  /* 0F 24 */  { BxAnother, &BX_CPU_C::MOV_RdTd },
   /* 0F 25 */  { 0, &BX_CPU_C::BxError },
-  /* 0F 26 */  { BxAnother,  &BX_CPU_C::MOV_TdRd },
+  /* 0F 26 */  { BxAnother, &BX_CPU_C::MOV_TdRd },
   /* 0F 27 */  { 0, &BX_CPU_C::BxError },
   /* 0F 28 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f28 },
   /* 0F 29 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f29 },
@@ -1621,11 +1635,11 @@
   /* 0F 32 */  { 0, &BX_CPU_C::RDMSR },
   /* 0F 33 */  { 0, &BX_CPU_C::BxError },
 #if BX_SUPPORT_SEP
-  /* 0F 34 */  { 0,  &BX_CPU_C::SYSENTER },
-  /* 0F 35 */  { 0,  &BX_CPU_C::SYSEXIT },
+  /* 0F 34 */  { 0, &BX_CPU_C::SYSENTER },
+  /* 0F 35 */  { 0, &BX_CPU_C::SYSEXIT },
 #else
-  /* 0F 34 */  { 0,  &BX_CPU_C::BxError },
-  /* 0F 35 */  { 0,  &BX_CPU_C::BxError },
+  /* 0F 34 */  { 0, &BX_CPU_C::BxError },
+  /* 0F 35 */  { 0, &BX_CPU_C::BxError },
 #endif
   /* 0F 36 */  { 0, &BX_CPU_C::BxError },
   /* 0F 37 */  { 0, &BX_CPU_C::BxError },
@@ -1637,22 +1651,22 @@
   /* 0F 3D */  { 0, &BX_CPU_C::BxError },
   /* 0F 3E */  { 0, &BX_CPU_C::BxError },
   /* 0F 3F */  { 0, &BX_CPU_C::BxError },
-  /* 0F 40 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 41 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 42 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 43 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 44 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 45 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 46 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 47 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 48 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 49 */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 4A */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 4B */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 4C */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 4D */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 4E */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
-  /* 0F 4F */  { BxAnother,  &BX_CPU_C::CMOV_GwEw },
+  /* 0F 40 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 41 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 42 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 43 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 44 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 45 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 46 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 47 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 48 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 49 */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 4A */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 4B */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 4C */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 4D */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 4E */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
+  /* 0F 4F */  { BxAnother, &BX_CPU_C::CMOV_GwEw },
   /* 0F 50 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f50 },
   /* 0F 51 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f51 },
   /* 0F 52 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f52 },
@@ -1701,72 +1715,72 @@
   /* 0F 7D */  { 0, &BX_CPU_C::BxError },
   /* 0F 7E */  { BxAnother | BxPrefixSSE, NULL,  BxOpcodeGroupSSE_0f7e }, 
   /* 0F 7F */  { BxAnother | BxPrefixSSE, NULL,  BxOpcodeGroupSSE_0f7f }, 
-  /* 0F 80 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 81 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 82 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 83 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 84 */  { BxImmediate_BrOff16,  &BX_CPU_C::JZ_Jw },
-  /* 0F 85 */  { BxImmediate_BrOff16,  &BX_CPU_C::JNZ_Jw },
-  /* 0F 86 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 87 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 88 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 89 */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 8A */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 8B */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 8C */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 8D */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 8E */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 8F */  { BxImmediate_BrOff16,  &BX_CPU_C::JCC_Jw },
-  /* 0F 90 */  { BxAnother,  &BX_CPU_C::SETO_Eb },
-  /* 0F 91 */  { BxAnother,  &BX_CPU_C::SETNO_Eb },
-  /* 0F 92 */  { BxAnother,  &BX_CPU_C::SETB_Eb },
-  /* 0F 93 */  { BxAnother,  &BX_CPU_C::SETNB_Eb },
-  /* 0F 94 */  { BxAnother,  &BX_CPU_C::SETZ_Eb },
-  /* 0F 95 */  { BxAnother,  &BX_CPU_C::SETNZ_Eb },
-  /* 0F 96 */  { BxAnother,  &BX_CPU_C::SETBE_Eb },
-  /* 0F 97 */  { BxAnother,  &BX_CPU_C::SETNBE_Eb },
-  /* 0F 98 */  { BxAnother,  &BX_CPU_C::SETS_Eb },
-  /* 0F 99 */  { BxAnother,  &BX_CPU_C::SETNS_Eb },
-  /* 0F 9A */  { BxAnother,  &BX_CPU_C::SETP_Eb },
-  /* 0F 9B */  { BxAnother,  &BX_CPU_C::SETNP_Eb },
-  /* 0F 9C */  { BxAnother,  &BX_CPU_C::SETL_Eb },
-  /* 0F 9D */  { BxAnother,  &BX_CPU_C::SETNL_Eb },
-  /* 0F 9E */  { BxAnother,  &BX_CPU_C::SETLE_Eb },
-  /* 0F 9F */  { BxAnother,  &BX_CPU_C::SETNLE_Eb },
+  /* 0F 80 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 81 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 82 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 83 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 84 */  { BxImmediate_BrOff16, &BX_CPU_C::JZ_Jw },
+  /* 0F 85 */  { BxImmediate_BrOff16, &BX_CPU_C::JNZ_Jw },
+  /* 0F 86 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 87 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 88 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 89 */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 8A */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 8B */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 8C */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 8D */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 8E */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 8F */  { BxImmediate_BrOff16, &BX_CPU_C::JCC_Jw },
+  /* 0F 90 */  { BxAnother, &BX_CPU_C::SETO_Eb },
+  /* 0F 91 */  { BxAnother, &BX_CPU_C::SETNO_Eb },
+  /* 0F 92 */  { BxAnother, &BX_CPU_C::SETB_Eb },
+  /* 0F 93 */  { BxAnother, &BX_CPU_C::SETNB_Eb },
+  /* 0F 94 */  { BxAnother, &BX_CPU_C::SETZ_Eb },
+  /* 0F 95 */  { BxAnother, &BX_CPU_C::SETNZ_Eb },
+  /* 0F 96 */  { BxAnother, &BX_CPU_C::SETBE_Eb },
+  /* 0F 97 */  { BxAnother, &BX_CPU_C::SETNBE_Eb },
+  /* 0F 98 */  { BxAnother, &BX_CPU_C::SETS_Eb },
+  /* 0F 99 */  { BxAnother, &BX_CPU_C::SETNS_Eb },
+  /* 0F 9A */  { BxAnother, &BX_CPU_C::SETP_Eb },
+  /* 0F 9B */  { BxAnother, &BX_CPU_C::SETNP_Eb },
+  /* 0F 9C */  { BxAnother, &BX_CPU_C::SETL_Eb },
+  /* 0F 9D */  { BxAnother, &BX_CPU_C::SETNL_Eb },
+  /* 0F 9E */  { BxAnother, &BX_CPU_C::SETLE_Eb },
+  /* 0F 9F */  { BxAnother, &BX_CPU_C::SETNLE_Eb },
   /* 0F A0 */  { 0, &BX_CPU_C::PUSH_FS },
   /* 0F A1 */  { 0, &BX_CPU_C::POP_FS },
   /* 0F A2 */  { 0, &BX_CPU_C::CPUID },
-  /* 0F A3 */  { BxAnother,  &BX_CPU_C::BT_EvGv },
-  /* 0F A4 */  { BxAnother | BxImmediate_Ib,  &BX_CPU_C::SHLD_EwGw },
-  /* 0F A5 */  { BxAnother,                   &BX_CPU_C::SHLD_EwGw },
+  /* 0F A3 */  { BxAnother, &BX_CPU_C::BT_EvGv },
+  /* 0F A4 */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHLD_EwGw },
+  /* 0F A5 */  { BxAnother,                  &BX_CPU_C::SHLD_EwGw },
   /* 0F A6 */  { 0, &BX_CPU_C::CMPXCHG_XBTS },
   /* 0F A7 */  { 0, &BX_CPU_C::CMPXCHG_IBTS },
   /* 0F A8 */  { 0, &BX_CPU_C::PUSH_GS },
   /* 0F A9 */  { 0, &BX_CPU_C::POP_GS },
   /* 0F AA */  { 0, &BX_CPU_C::RSM },
-  /* 0F AB */  { BxAnother,  &BX_CPU_C::BTS_EvGv },
-  /* 0F AC */  { BxAnother | BxImmediate_Ib,  &BX_CPU_C::SHRD_EwGw },
-  /* 0F AD */  { BxAnother,                   &BX_CPU_C::SHRD_EwGw },
+  /* 0F AB */  { BxAnother | BxLockable, &BX_CPU_C::BTS_EvGv },
+  /* 0F AC */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHRD_EwGw },
+  /* 0F AD */  { BxAnother,                  &BX_CPU_C::SHRD_EwGw },
   /* 0F AE */  { BxAnother | BxGroup15, NULL, BxOpcodeInfoG15 },
-  /* 0F AF */  { BxAnother,  &BX_CPU_C::IMUL_GwEw },
-  /* 0F B0 */  { BxAnother,  &BX_CPU_C::CMPXCHG_EbGb },
-  /* 0F B1 */  { BxAnother,  &BX_CPU_C::CMPXCHG_EwGw },
-  /* 0F B2 */  { BxAnother,  &BX_CPU_C::LSS_GvMp },
-  /* 0F B3 */  { BxAnother,  &BX_CPU_C::BTR_EvGv },
-  /* 0F B4 */  { BxAnother,  &BX_CPU_C::LFS_GvMp },
-  /* 0F B5 */  { BxAnother,  &BX_CPU_C::LGS_GvMp },
-  /* 0F B6 */  { BxAnother,  &BX_CPU_C::MOVZX_GwEb },
-  /* 0F B7 */  { BxAnother,  &BX_CPU_C::MOVZX_GwEw },
+  /* 0F AF */  { BxAnother, &BX_CPU_C::IMUL_GwEw },
+  /* 0F B0 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EbGb },
+  /* 0F B1 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EwGw },
+  /* 0F B2 */  { BxAnother, &BX_CPU_C::LSS_GvMp },
+  /* 0F B3 */  { BxAnother | BxLockable, &BX_CPU_C::BTR_EvGv },
+  /* 0F B4 */  { BxAnother, &BX_CPU_C::LFS_GvMp },
+  /* 0F B5 */  { BxAnother, &BX_CPU_C::LGS_GvMp },
+  /* 0F B6 */  { BxAnother, &BX_CPU_C::MOVZX_GwEb },
+  /* 0F B7 */  { BxAnother, &BX_CPU_C::MOVZX_GwEw },
   /* 0F B8 */  { 0, &BX_CPU_C::BxError },
   /* 0F B9 */  { 0, &BX_CPU_C::BxError },
   /* 0F BA */  { BxAnother | BxGroup8, NULL, BxOpcodeInfoG8EvIb },
-  /* 0F BB */  { BxAnother,  &BX_CPU_C::BTC_EvGv },
-  /* 0F BC */  { BxAnother,  &BX_CPU_C::BSF_GvEv },
-  /* 0F BD */  { BxAnother,  &BX_CPU_C::BSR_GvEv },
-  /* 0F BE */  { BxAnother,  &BX_CPU_C::MOVSX_GwEb },
-  /* 0F BF */  { BxAnother,  &BX_CPU_C::MOVSX_GwEw },
-  /* 0F C0 */  { BxAnother,  &BX_CPU_C::XADD_EbGb },
-  /* 0F C1 */  { BxAnother,  &BX_CPU_C::XADD_EwGw },
+  /* 0F BB */  { BxAnother | BxLockable, &BX_CPU_C::BTC_EvGv },
+  /* 0F BC */  { BxAnother, &BX_CPU_C::BSF_GvEv },
+  /* 0F BD */  { BxAnother, &BX_CPU_C::BSR_GvEv },
+  /* 0F BE */  { BxAnother, &BX_CPU_C::MOVSX_GwEb },
+  /* 0F BF */  { BxAnother, &BX_CPU_C::MOVSX_GwEw },
+  /* 0F C0 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EbGb },
+  /* 0F C1 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EwGw },
   /* 0F C2 */  { BxAnother | BxImmediate_Ib | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc2 },
   /* 0F C3 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc3 },
   /* 0F C4 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc4 },
@@ -1831,69 +1845,69 @@
   /* 0F FF */  { 0, &BX_CPU_C::BxError },
 
   // 512 entries for 32bit mod
-  /* 00 */  { BxAnother,  &BX_CPU_C::ADD_EbGb },
-  /* 01 */  { BxAnother,  &BX_CPU_C::ADD_EdGd },
-  /* 02 */  { BxAnother,  &BX_CPU_C::ADD_GbEb },
+  /* 00 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EbGb },
+  /* 01 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EdGd },
+  /* 02 */  { BxAnother, &BX_CPU_C::ADD_GbEb },
   /* 03 */  { BxAnother | BxSplitMod11b, NULL, opcodesADD_GdEd },
-  /* 04 */  { BxImmediate_Ib,  &BX_CPU_C::ADD_ALIb },
-  /* 05 */  { BxImmediate_Iv,  &BX_CPU_C::ADD_EAXId },
+  /* 04 */  { BxImmediate_Ib, &BX_CPU_C::ADD_ALIb },
+  /* 05 */  { BxImmediate_Iv, &BX_CPU_C::ADD_EAXId },
   /* 06 */  { 0, &BX_CPU_C::PUSH_ES },
   /* 07 */  { 0, &BX_CPU_C::POP_ES },
-  /* 08 */  { BxAnother,  &BX_CPU_C::OR_EbGb },
-  /* 09 */  { BxAnother,  &BX_CPU_C::OR_EdGd },
-  /* 0A */  { BxAnother,  &BX_CPU_C::OR_GbEb },
-  /* 0B */  { BxAnother,  &BX_CPU_C::OR_GdEd },
-  /* 0C */  { BxImmediate_Ib,  &BX_CPU_C::OR_ALIb },
-  /* 0D */  { BxImmediate_Iv,  &BX_CPU_C::OR_EAXId },
+  /* 08 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EbGb },
+  /* 09 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EdGd },
+  /* 0A */  { BxAnother, &BX_CPU_C::OR_GbEb },
+  /* 0B */  { BxAnother, &BX_CPU_C::OR_GdEd },
+  /* 0C */  { BxImmediate_Ib, &BX_CPU_C::OR_ALIb },
+  /* 0D */  { BxImmediate_Iv, &BX_CPU_C::OR_EAXId },
   /* 0E */  { 0, &BX_CPU_C::PUSH_CS },
-  /* 0F */  { BxAnother,  &BX_CPU_C::BxError }, // 2-byte escape
-  /* 10 */  { BxAnother,  &BX_CPU_C::ADC_EbGb },
-  /* 11 */  { BxAnother,  &BX_CPU_C::ADC_EdGd },
-  /* 12 */  { BxAnother,  &BX_CPU_C::ADC_GbEb },
-  /* 13 */  { BxAnother,  &BX_CPU_C::ADC_GdEd },
-  /* 14 */  { BxImmediate_Ib,  &BX_CPU_C::ADC_ALIb },
-  /* 15 */  { BxImmediate_Iv,  &BX_CPU_C::ADC_EAXId },
+  /* 0F */  { BxAnother, &BX_CPU_C::BxError }, // 2-byte escape
+  /* 10 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EbGb },
+  /* 11 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EdGd },
+  /* 12 */  { BxAnother, &BX_CPU_C::ADC_GbEb },
+  /* 13 */  { BxAnother, &BX_CPU_C::ADC_GdEd },
+  /* 14 */  { BxImmediate_Ib, &BX_CPU_C::ADC_ALIb },
+  /* 15 */  { BxImmediate_Iv, &BX_CPU_C::ADC_EAXId },
   /* 16 */  { 0, &BX_CPU_C::PUSH_SS },
   /* 17 */  { 0, &BX_CPU_C::POP_SS },
-  /* 18 */  { BxAnother,  &BX_CPU_C::SBB_EbGb },
-  /* 19 */  { BxAnother,  &BX_CPU_C::SBB_EdGd },
-  /* 1A */  { BxAnother,  &BX_CPU_C::SBB_GbEb },
-  /* 1B */  { BxAnother,  &BX_CPU_C::SBB_GdEd },
-  /* 1C */  { BxImmediate_Ib,  &BX_CPU_C::SBB_ALIb },
-  /* 1D */  { BxImmediate_Iv,  &BX_CPU_C::SBB_EAXId },
+  /* 18 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EbGb },
+  /* 19 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EdGd },
+  /* 1A */  { BxAnother, &BX_CPU_C::SBB_GbEb },
+  /* 1B */  { BxAnother, &BX_CPU_C::SBB_GdEd },
+  /* 1C */  { BxImmediate_Ib, &BX_CPU_C::SBB_ALIb },
+  /* 1D */  { BxImmediate_Iv, &BX_CPU_C::SBB_EAXId },
   /* 1E */  { 0, &BX_CPU_C::PUSH_DS },
   /* 1F */  { 0, &BX_CPU_C::POP_DS },
-  /* 20 */  { BxAnother,  &BX_CPU_C::AND_EbGb },
-  /* 21 */  { BxAnother,  &BX_CPU_C::AND_EdGd },
-  /* 22 */  { BxAnother,  &BX_CPU_C::AND_GbEb },
-  /* 23 */  { BxAnother,  &BX_CPU_C::AND_GdEd },
-  /* 24 */  { BxImmediate_Ib,  &BX_CPU_C::AND_ALIb },
-  /* 25 */  { BxImmediate_Iv,  &BX_CPU_C::AND_EAXId },
-  /* 26 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // ES:
+  /* 20 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EbGb },
+  /* 21 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EdGd },
+  /* 22 */  { BxAnother, &BX_CPU_C::AND_GbEb },
+  /* 23 */  { BxAnother, &BX_CPU_C::AND_GdEd },
+  /* 24 */  { BxImmediate_Ib, &BX_CPU_C::AND_ALIb },
+  /* 25 */  { BxImmediate_Iv, &BX_CPU_C::AND_EAXId },
+  /* 26 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // ES:
   /* 27 */  { 0, &BX_CPU_C::DAA },
-  /* 28 */  { BxAnother,  &BX_CPU_C::SUB_EbGb },
-  /* 29 */  { BxAnother,  &BX_CPU_C::SUB_EdGd },
-  /* 2A */  { BxAnother,  &BX_CPU_C::SUB_GbEb },
-  /* 2B */  { BxAnother,  &BX_CPU_C::SUB_GdEd },
-  /* 2C */  { BxImmediate_Ib,  &BX_CPU_C::SUB_ALIb },
-  /* 2D */  { BxImmediate_Iv,  &BX_CPU_C::SUB_EAXId },
-  /* 2E */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // CS:
+  /* 28 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EbGb },
+  /* 29 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EdGd },
+  /* 2A */  { BxAnother, &BX_CPU_C::SUB_GbEb },
+  /* 2B */  { BxAnother, &BX_CPU_C::SUB_GdEd },
+  /* 2C */  { BxImmediate_Ib, &BX_CPU_C::SUB_ALIb },
+  /* 2D */  { BxImmediate_Iv, &BX_CPU_C::SUB_EAXId },
+  /* 2E */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // CS:
   /* 2F */  { 0, &BX_CPU_C::DAS },
-  /* 30 */  { BxAnother,  &BX_CPU_C::XOR_EbGb },
-  /* 31 */  { BxAnother,  &BX_CPU_C::XOR_EdGd },
-  /* 32 */  { BxAnother,  &BX_CPU_C::XOR_GbEb },
-  /* 33 */  { BxAnother,  &BX_CPU_C::XOR_GdEd },
-  /* 34 */  { BxImmediate_Ib,  &BX_CPU_C::XOR_ALIb },
-  /* 35 */  { BxImmediate_Iv,  &BX_CPU_C::XOR_EAXId },
-  /* 36 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // SS:
+  /* 30 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EbGb },
+  /* 31 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EdGd },
+  /* 32 */  { BxAnother, &BX_CPU_C::XOR_GbEb },
+  /* 33 */  { BxAnother, &BX_CPU_C::XOR_GdEd },
+  /* 34 */  { BxImmediate_Ib, &BX_CPU_C::XOR_ALIb },
+  /* 35 */  { BxImmediate_Iv, &BX_CPU_C::XOR_EAXId },
+  /* 36 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // SS:
   /* 37 */  { 0, &BX_CPU_C::AAA },
-  /* 38 */  { BxAnother,  &BX_CPU_C::CMP_EbGb },
-  /* 39 */  { BxAnother,  &BX_CPU_C::CMP_EdGd },
-  /* 3A */  { BxAnother,  &BX_CPU_C::CMP_GbEb },
-  /* 3B */  { BxAnother,  &BX_CPU_C::CMP_GdEd },
-  /* 3C */  { BxImmediate_Ib,  &BX_CPU_C::CMP_ALIb },
-  /* 3D */  { BxImmediate_Iv,  &BX_CPU_C::CMP_EAXId },
-  /* 3E */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // DS:
+  /* 38 */  { BxAnother, &BX_CPU_C::CMP_EbGb },
+  /* 39 */  { BxAnother, &BX_CPU_C::CMP_EdGd },
+  /* 3A */  { BxAnother, &BX_CPU_C::CMP_GbEb },
+  /* 3B */  { BxAnother, &BX_CPU_C::CMP_GdEd },
+  /* 3C */  { BxImmediate_Ib, &BX_CPU_C::CMP_ALIb },
+  /* 3D */  { BxImmediate_Iv, &BX_CPU_C::CMP_EAXId },
+  /* 3E */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // DS:
   /* 3F */  { 0, &BX_CPU_C::AAS },
   /* 40 */  { 0, &BX_CPU_C::INC_ERX },
   /* 41 */  { 0, &BX_CPU_C::INC_ERX },
@@ -1929,52 +1943,52 @@
   /* 5F */  { 0, &BX_CPU_C::POP_ERX },
   /* 60 */  { 0, &BX_CPU_C::PUSHAD32 },
   /* 61 */  { 0, &BX_CPU_C::POPAD32 },
-  /* 62 */  { BxAnother,  &BX_CPU_C::BOUND_GvMa },
-  /* 63 */  { BxAnother,  &BX_CPU_C::ARPL_EwGw },
-  /* 64 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // FS:
-  /* 65 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // GS:
-  /* 66 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // OS:
-  /* 67 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // AS:
-  /* 68 */  { BxImmediate_Iv,  &BX_CPU_C::PUSH_Id },
-  /* 69 */  { BxAnother | BxImmediate_Iv,  &BX_CPU_C::IMUL_GdEdId },
-  /* 6A */  { BxImmediate_Ib_SE,  &BX_CPU_C::PUSH_Id },
-  /* 6B */  { BxAnother | BxImmediate_Ib_SE,  &BX_CPU_C::IMUL_GdEdId },
-  /* 6C */  { BxRepeatable,  &BX_CPU_C::INSB_YbDX },
-  /* 6D */  { BxRepeatable,  &BX_CPU_C::INSW_YvDX },
-  /* 6E */  { BxRepeatable,  &BX_CPU_C::OUTSB_DXXb },
-  /* 6F */  { BxRepeatable,  &BX_CPU_C::OUTSW_DXXv },
-  /* 70 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 71 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 72 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 73 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 74 */  { BxImmediate_BrOff8,  &BX_CPU_C::JZ_Jd },
-  /* 75 */  { BxImmediate_BrOff8,  &BX_CPU_C::JNZ_Jd },
-  /* 76 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 77 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 78 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 79 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 7A */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 7B */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 7C */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 7D */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 7E */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
-  /* 7F */  { BxImmediate_BrOff8,  &BX_CPU_C::JCC_Jd },
+  /* 62 */  { BxAnother, &BX_CPU_C::BOUND_GvMa },
+  /* 63 */  { BxAnother, &BX_CPU_C::ARPL_EwGw },
+  /* 64 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // FS:
+  /* 65 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // GS:
+  /* 66 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // OS:
+  /* 67 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // AS:
+  /* 68 */  { BxImmediate_Iv, &BX_CPU_C::PUSH_Id },
+  /* 69 */  { BxAnother | BxImmediate_Iv, &BX_CPU_C::IMUL_GdEdId },
+  /* 6A */  { BxImmediate_Ib_SE, &BX_CPU_C::PUSH_Id },
+  /* 6B */  { BxAnother | BxImmediate_Ib_SE, &BX_CPU_C::IMUL_GdEdId },
+  /* 6C */  { BxRepeatable, &BX_CPU_C::INSB_YbDX },
+  /* 6D */  { BxRepeatable, &BX_CPU_C::INSW_YvDX },
+  /* 6E */  { BxRepeatable, &BX_CPU_C::OUTSB_DXXb },
+  /* 6F */  { BxRepeatable, &BX_CPU_C::OUTSW_DXXv },
+  /* 70 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 71 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 72 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 73 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 74 */  { BxImmediate_BrOff8, &BX_CPU_C::JZ_Jd },
+  /* 75 */  { BxImmediate_BrOff8, &BX_CPU_C::JNZ_Jd },
+  /* 76 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 77 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 78 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 79 */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 7A */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 7B */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 7C */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 7D */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 7E */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
+  /* 7F */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jd },
   /* 80 */  { BxAnother | BxGroup1, NULL, BxOpcodeInfoG1EbIb },
   /* 81 */  { BxAnother | BxGroup1 | BxImmediate_Iv, NULL, BxOpcodeInfoG1Ed },
   /* 82 */  { BxAnother | BxGroup1, NULL, BxOpcodeInfoG1EbIb },
   /* 83 */  { BxAnother | BxGroup1 | BxImmediate_Ib_SE, NULL, BxOpcodeInfoG1Ed },
-  /* 84 */  { BxAnother,  &BX_CPU_C::TEST_EbGb },
-  /* 85 */  { BxAnother,  &BX_CPU_C::TEST_EdGd },
-  /* 86 */  { BxAnother,  &BX_CPU_C::XCHG_EbGb },
-  /* 87 */  { BxAnother,  &BX_CPU_C::XCHG_EdGd },
+  /* 84 */  { BxAnother, &BX_CPU_C::TEST_EbGb },
+  /* 85 */  { BxAnother, &BX_CPU_C::TEST_EdGd },
+  /* 86 */  { BxAnother, &BX_CPU_C::XCHG_EbGb },
+  /* 87 */  { BxAnother, &BX_CPU_C::XCHG_EdGd },
   /* 88 */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_EbGb },
   /* 89 */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_EdGd },
   /* 8A */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_GbEb },
   /* 8B */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_GdEd },
-  /* 8C */  { BxAnother,  &BX_CPU_C::MOV_EwSw },
-  /* 8D */  { BxAnother,  &BX_CPU_C::LEA_GdM },
-  /* 8E */  { BxAnother,  &BX_CPU_C::MOV_SwEw },
-  /* 8F */  { BxAnother,  &BX_CPU_C::POP_Ed },
+  /* 8C */  { BxAnother, &BX_CPU_C::MOV_EwSw },
+  /* 8D */  { BxAnother, &BX_CPU_C::LEA_GdM },
+  /* 8E */  { BxAnother, &BX_CPU_C::MOV_SwEw },
+  /* 8F */  { BxAnother, &BX_CPU_C::POP_Ed },
   /* 90 */  { 0, &BX_CPU_C::NOP },
   /* 91 */  { 0, &BX_CPU_C::XCHG_ERXEAX },
   /* 92 */  { 0, &BX_CPU_C::XCHG_ERXEAX },
@@ -1985,96 +1999,96 @@
   /* 97 */  { 0, &BX_CPU_C::XCHG_ERXEAX },
   /* 98 */  { 0, &BX_CPU_C::CWDE },
   /* 99 */  { 0, &BX_CPU_C::CDQ },
-  /* 9A */  { BxImmediate_IvIw,  &BX_CPU_C::CALL32_Ap },
+  /* 9A */  { BxImmediate_IvIw, &BX_CPU_C::CALL32_Ap },
   /* 9B */  { 0, &BX_CPU_C::FWAIT },
   /* 9C */  { 0, &BX_CPU_C::PUSHF_Fv },
   /* 9D */  { 0, &BX_CPU_C::POPF_Fv },
   /* 9E */  { 0, &BX_CPU_C::SAHF },
   /* 9F */  { 0, &BX_CPU_C::LAHF },
-  /* A0 */  { BxImmediate_O,  &BX_CPU_C::MOV_ALOb },
-  /* A1 */  { BxImmediate_O,  &BX_CPU_C::MOV_EAXOd },
-  /* A2 */  { BxImmediate_O,  &BX_CPU_C::MOV_ObAL },
-  /* A3 */  { BxImmediate_O,  &BX_CPU_C::MOV_OdEAX },
-  /* A4 */  { BxRepeatable,  &BX_CPU_C::MOVSB_XbYb },
-  /* A5 */  { BxRepeatable,  &BX_CPU_C::MOVSW_XvYv },
-  /* A6 */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::CMPSB_XbYb },
-  /* A7 */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::CMPSW_XvYv },
-  /* A8 */  { BxImmediate_Ib,  &BX_CPU_C::TEST_ALIb },
-  /* A9 */  { BxImmediate_Iv,  &BX_CPU_C::TEST_EAXId },
-  /* AA */  { BxRepeatable,  &BX_CPU_C::STOSB_YbAL },
-  /* AB */  { BxRepeatable,  &BX_CPU_C::STOSW_YveAX },
-  /* AC */  { BxRepeatable,  &BX_CPU_C::LODSB_ALXb },
-  /* AD */  { BxRepeatable,  &BX_CPU_C::LODSW_eAXXv },
-  /* AE */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::SCASB_ALXb },
-  /* AF */  { BxRepeatable | BxRepeatableZF,  &BX_CPU_C::SCASW_eAXXv },
-  /* B0 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B1 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B2 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B3 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RLIb },
-  /* B4 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B5 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B6 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B7 */  { BxImmediate_Ib,  &BX_CPU_C::MOV_RHIb },
-  /* B8 */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
-  /* B9 */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
-  /* BA */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
-  /* BB */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
-  /* BC */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
-  /* BD */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
-  /* BE */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
-  /* BF */  { BxImmediate_Iv,  &BX_CPU_C::MOV_ERXId },
+  /* A0 */  { BxImmediate_O, &BX_CPU_C::MOV_ALOb },
+  /* A1 */  { BxImmediate_O, &BX_CPU_C::MOV_EAXOd },
+  /* A2 */  { BxImmediate_O, &BX_CPU_C::MOV_ObAL },
+  /* A3 */  { BxImmediate_O, &BX_CPU_C::MOV_OdEAX },
+  /* A4 */  { BxRepeatable, &BX_CPU_C::MOVSB_XbYb },
+  /* A5 */  { BxRepeatable, &BX_CPU_C::MOVSW_XvYv },
+  /* A6 */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::CMPSB_XbYb },
+  /* A7 */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::CMPSW_XvYv },
+  /* A8 */  { BxImmediate_Ib, &BX_CPU_C::TEST_ALIb },
+  /* A9 */  { BxImmediate_Iv, &BX_CPU_C::TEST_EAXId },
+  /* AA */  { BxRepeatable, &BX_CPU_C::STOSB_YbAL },
+  /* AB */  { BxRepeatable, &BX_CPU_C::STOSW_YveAX },
+  /* AC */  { BxRepeatable, &BX_CPU_C::LODSB_ALXb },
+  /* AD */  { BxRepeatable, &BX_CPU_C::LODSW_eAXXv },
+  /* AE */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::SCASB_ALXb },
+  /* AF */  { BxRepeatable | BxRepeatableZF, &BX_CPU_C::SCASW_eAXXv },
+  /* B0 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B1 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B2 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B3 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RLIb },
+  /* B4 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B5 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B6 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B7 */  { BxImmediate_Ib, &BX_CPU_C::MOV_RHIb },
+  /* B8 */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
+  /* B9 */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
+  /* BA */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
+  /* BB */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
+  /* BC */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
+  /* BD */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
+  /* BE */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
+  /* BF */  { BxImmediate_Iv, &BX_CPU_C::MOV_ERXId },
   /* C0 */  { BxAnother | BxGroup2 | BxImmediate_Ib, NULL, BxOpcodeInfoG2Eb },
   /* C1 */  { BxAnother | BxGroup2 | BxImmediate_Ib, NULL, BxOpcodeInfoG2Ed },
-  /* C2 */  { BxImmediate_Iw,  &BX_CPU_C::RETnear32_Iw },
+  /* C2 */  { BxImmediate_Iw, &BX_CPU_C::RETnear32_Iw },
   /* C3 */  { 0,               &BX_CPU_C::RETnear32 },
-  /* C4 */  { BxAnother,  &BX_CPU_C::LES_GvMp },
-  /* C5 */  { BxAnother,  &BX_CPU_C::LDS_GvMp },
-  /* C6 */  { BxAnother | BxImmediate_Ib,  &BX_CPU_C::MOV_EbIb },
-  /* C7 */  { BxAnother | BxImmediate_Iv,  &BX_CPU_C::MOV_EdId },
-  /* C8 */  { BxImmediate_IwIb,  &BX_CPU_C::ENTER_IwIb },
+  /* C4 */  { BxAnother, &BX_CPU_C::LES_GvMp },
+  /* C5 */  { BxAnother, &BX_CPU_C::LDS_GvMp },
+  /* C6 */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::MOV_EbIb },
+  /* C7 */  { BxAnother | BxImmediate_Iv, &BX_CPU_C::MOV_EdId },
+  /* C8 */  { BxImmediate_IwIb, &BX_CPU_C::ENTER_IwIb },
   /* C9 */  { 0, &BX_CPU_C::LEAVE },
-  /* CA */  { BxImmediate_Iw,  &BX_CPU_C::RETfar32_Iw },
+  /* CA */  { BxImmediate_Iw, &BX_CPU_C::RETfar32_Iw },
   /* CB */  { 0, &BX_CPU_C::RETfar32 },
   /* CC */  { 0, &BX_CPU_C::INT3 },
-  /* CD */  { BxImmediate_Ib,  &BX_CPU_C::INT_Ib },
+  /* CD */  { BxImmediate_Ib, &BX_CPU_C::INT_Ib },
   /* CE */  { 0, &BX_CPU_C::INTO },
   /* CF */  { 0, &BX_CPU_C::IRET32 },
   /* D0 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Eb },
   /* D1 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Ed },
   /* D2 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Eb },
   /* D3 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfoG2Ed },
-  /* D4 */  { BxImmediate_Ib,  &BX_CPU_C::AAM },
-  /* D5 */  { BxImmediate_Ib,  &BX_CPU_C::AAD },
+  /* D4 */  { BxImmediate_Ib, &BX_CPU_C::AAM },
+  /* D5 */  { BxImmediate_Ib, &BX_CPU_C::AAD },
   /* D6 */  { 0, &BX_CPU_C::SALC },
   /* D7 */  { 0, &BX_CPU_C::XLAT },
-  /* D8 */  { BxAnother,  &BX_CPU_C::ESC0 },
-  /* D9 */  { BxAnother,  &BX_CPU_C::ESC1 },
-  /* DA */  { BxAnother,  &BX_CPU_C::ESC2 },
-  /* DB */  { BxAnother,  &BX_CPU_C::ESC3 },
-  /* DC */  { BxAnother,  &BX_CPU_C::ESC4 },
-  /* DD */  { BxAnother,  &BX_CPU_C::ESC5 },
-  /* DE */  { BxAnother,  &BX_CPU_C::ESC6 },
-  /* DF */  { BxAnother,  &BX_CPU_C::ESC7 },
-  /* E0 */  { BxImmediate_BrOff8,  &BX_CPU_C::LOOPNE_Jb },
-  /* E1 */  { BxImmediate_BrOff8,  &BX_CPU_C::LOOPE_Jb },
-  /* E2 */  { BxImmediate_BrOff8,  &BX_CPU_C::LOOP_Jb },
-  /* E3 */  { BxImmediate_BrOff8,  &BX_CPU_C::JCXZ_Jb },
-  /* E4 */  { BxImmediate_Ib,  &BX_CPU_C::IN_ALIb },
-  /* E5 */  { BxImmediate_Ib,  &BX_CPU_C::IN_eAXIb },
-  /* E6 */  { BxImmediate_Ib,  &BX_CPU_C::OUT_IbAL },
-  /* E7 */  { BxImmediate_Ib,  &BX_CPU_C::OUT_IbeAX },
-  /* E8 */  { BxImmediate_BrOff32,  &BX_CPU_C::CALL_Ad },
-  /* E9 */  { BxImmediate_BrOff32,  &BX_CPU_C::JMP_Jd },
-  /* EA */  { BxImmediate_IvIw,  &BX_CPU_C::JMP_Ap },
-  /* EB */  { BxImmediate_BrOff8,  &BX_CPU_C::JMP_Jd },
+  /* D8 */  { BxAnother, &BX_CPU_C::ESC0 },
+  /* D9 */  { BxAnother, &BX_CPU_C::ESC1 },
+  /* DA */  { BxAnother, &BX_CPU_C::ESC2 },
+  /* DB */  { BxAnother, &BX_CPU_C::ESC3 },
+  /* DC */  { BxAnother, &BX_CPU_C::ESC4 },
+  /* DD */  { BxAnother, &BX_CPU_C::ESC5 },
+  /* DE */  { BxAnother, &BX_CPU_C::ESC6 },
+  /* DF */  { BxAnother, &BX_CPU_C::ESC7 },
+  /* E0 */  { BxImmediate_BrOff8, &BX_CPU_C::LOOPNE_Jb },
+  /* E1 */  { BxImmediate_BrOff8, &BX_CPU_C::LOOPE_Jb },
+  /* E2 */  { BxImmediate_BrOff8, &BX_CPU_C::LOOP_Jb },
+  /* E3 */  { BxImmediate_BrOff8, &BX_CPU_C::JCXZ_Jb },
+  /* E4 */  { BxImmediate_Ib, &BX_CPU_C::IN_ALIb },
+  /* E5 */  { BxImmediate_Ib, &BX_CPU_C::IN_eAXIb },
+  /* E6 */  { BxImmediate_Ib, &BX_CPU_C::OUT_IbAL },
+  /* E7 */  { BxImmediate_Ib, &BX_CPU_C::OUT_IbeAX },
+  /* E8 */  { BxImmediate_BrOff32, &BX_CPU_C::CALL_Ad },
+  /* E9 */  { BxImmediate_BrOff32, &BX_CPU_C::JMP_Jd },
+  /* EA */  { BxImmediate_IvIw, &BX_CPU_C::JMP_Ap },
+  /* EB */  { BxImmediate_BrOff8, &BX_CPU_C::JMP_Jd },
   /* EC */  { 0, &BX_CPU_C::IN_ALDX },
   /* ED */  { 0, &BX_CPU_C::IN_eAXDX },
   /* EE */  { 0, &BX_CPU_C::OUT_DXAL },
   /* EF */  { 0, &BX_CPU_C::OUT_DXeAX },
-  /* F0 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // LOCK:
+  /* F0 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // LOCK:
   /* F1 */  { 0, &BX_CPU_C::INT1 },
-  /* F2 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // REPNE/REPNZ
-  /* F3 */  { BxPrefix | BxAnother,  &BX_CPU_C::BxError }, // REP,REPE/REPZ
+  /* F2 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // REPNE/REPNZ
+  /* F3 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // REP,REPE/REPZ
   /* F4 */  { 0, &BX_CPU_C::HLT },
   /* F5 */  { 0, &BX_CPU_C::CMC },
   /* F6 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfoG3Eb },
@@ -2090,8 +2104,8 @@
 
   /* 0F 00 */  { BxAnother | BxGroup6, NULL, BxOpcodeInfoG6 },
   /* 0F 01 */  { BxAnother | BxGroup7, NULL, BxOpcodeInfoG7 },
-  /* 0F 02 */  { BxAnother,  &BX_CPU_C::LAR_GvEw },
-  /* 0F 03 */  { BxAnother,  &BX_CPU_C::LSL_GvEw },
+  /* 0F 02 */  { BxAnother, &BX_CPU_C::LAR_GvEw },
+  /* 0F 03 */  { BxAnother, &BX_CPU_C::LSL_GvEw },
   /* 0F 04 */  { 0, &BX_CPU_C::BxError },
 #if BX_SUPPORT_X86_64
   /* 0F 05 */  { 0, &BX_CPU_C::SYSCALL },
@@ -2128,13 +2142,13 @@
   /* 0F 1D */  { 0, &BX_CPU_C::BxError },
   /* 0F 1E */  { 0, &BX_CPU_C::BxError },
   /* 0F 1F */  { 0, &BX_CPU_C::BxError },
-  /* 0F 20 */  { BxAnother,  &BX_CPU_C::MOV_RdCd },
-  /* 0F 21 */  { BxAnother,  &BX_CPU_C::MOV_RdDd },
-  /* 0F 22 */  { BxAnother,  &BX_CPU_C::MOV_CdRd },
-  /* 0F 23 */  { BxAnother,  &BX_CPU_C::MOV_DdRd },
-  /* 0F 24 */  { BxAnother,  &BX_CPU_C::MOV_RdTd },
+  /* 0F 20 */  { BxAnother, &BX_CPU_C::MOV_RdCd },
+  /* 0F 21 */  { BxAnother, &BX_CPU_C::MOV_RdDd },
+  /* 0F 22 */  { BxAnother, &BX_CPU_C::MOV_CdRd },
+  /* 0F 23 */  { BxAnother, &BX_CPU_C::MOV_DdRd },
+  /* 0F 24 */  { BxAnother, &BX_CPU_C::MOV_RdTd },
   /* 0F 25 */  { 0, &BX_CPU_C::BxError },
-  /* 0F 26 */  { BxAnother,  &BX_CPU_C::MOV_TdRd },
+  /* 0F 26 */  { BxAnother, &BX_CPU_C::MOV_TdRd },
   /* 0F 27 */  { 0, &BX_CPU_C::BxError },
   /* 0F 28 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f28 },
   /* 0F 29 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f29 },
@@ -2160,22 +2174,22 @@
   /* 0F 3D */  { 0, &BX_CPU_C::BxError },
   /* 0F 3E */  { 0, &BX_CPU_C::BxError },
   /* 0F 3F */  { 0, &BX_CPU_C::BxError },
-  /* 0F 40 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 41 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 42 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 43 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 44 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 45 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 46 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 47 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 48 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 49 */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 4A */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 4B */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 4C */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 4D */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 4E */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
-  /* 0F 4F */  { BxAnother,  &BX_CPU_C::CMOV_GdEd },
+  /* 0F 40 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 41 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 42 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 43 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 44 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 45 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 46 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 47 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 48 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 49 */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 4A */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 4B */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 4C */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 4D */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 4E */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
+  /* 0F 4F */  { BxAnother, &BX_CPU_C::CMOV_GdEd },
   /* 0F 50 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f50 },
   /* 0F 51 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f51 },
   /* 0F 52 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0f52 },
@@ -2224,72 +2238,72 @@
   /* 0F 7D */  { 0, &BX_CPU_C::BxError },
   /* 0F 7E */  { BxAnother | BxPrefixSSE, NULL,  BxOpcodeGroupSSE_0f7e }, 
   /* 0F 7F */  { BxAnother | BxPrefixSSE, NULL,  BxOpcodeGroupSSE_0f7f }, 
-  /* 0F 80 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 81 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 82 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 83 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 84 */  { BxImmediate_BrOff32,  &BX_CPU_C::JZ_Jd },
-  /* 0F 85 */  { BxImmediate_BrOff32,  &BX_CPU_C::JNZ_Jd },
-  /* 0F 86 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 87 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 88 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 89 */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 8A */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 8B */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 8C */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 8D */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 8E */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 8F */  { BxImmediate_BrOff32,  &BX_CPU_C::JCC_Jd },
-  /* 0F 90 */  { BxAnother,  &BX_CPU_C::SETO_Eb },
-  /* 0F 91 */  { BxAnother,  &BX_CPU_C::SETNO_Eb },
-  /* 0F 92 */  { BxAnother,  &BX_CPU_C::SETB_Eb },
-  /* 0F 93 */  { BxAnother,  &BX_CPU_C::SETNB_Eb },
-  /* 0F 94 */  { BxAnother,  &BX_CPU_C::SETZ_Eb },
-  /* 0F 95 */  { BxAnother,  &BX_CPU_C::SETNZ_Eb },
-  /* 0F 96 */  { BxAnother,  &BX_CPU_C::SETBE_Eb },
-  /* 0F 97 */  { BxAnother,  &BX_CPU_C::SETNBE_Eb },
-  /* 0F 98 */  { BxAnother,  &BX_CPU_C::SETS_Eb },
-  /* 0F 99 */  { BxAnother,  &BX_CPU_C::SETNS_Eb },
-  /* 0F 9A */  { BxAnother,  &BX_CPU_C::SETP_Eb },
-  /* 0F 9B */  { BxAnother,  &BX_CPU_C::SETNP_Eb },
-  /* 0F 9C */  { BxAnother,  &BX_CPU_C::SETL_Eb },
-  /* 0F 9D */  { BxAnother,  &BX_CPU_C::SETNL_Eb },
-  /* 0F 9E */  { BxAnother,  &BX_CPU_C::SETLE_Eb },
-  /* 0F 9F */  { BxAnother,  &BX_CPU_C::SETNLE_Eb },
+  /* 0F 80 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 81 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 82 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 83 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 84 */  { BxImmediate_BrOff32, &BX_CPU_C::JZ_Jd },
+  /* 0F 85 */  { BxImmediate_BrOff32, &BX_CPU_C::JNZ_Jd },
+  /* 0F 86 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 87 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 88 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 89 */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 8A */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 8B */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 8C */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 8D */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 8E */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 8F */  { BxImmediate_BrOff32, &BX_CPU_C::JCC_Jd },
+  /* 0F 90 */  { BxAnother, &BX_CPU_C::SETO_Eb },
+  /* 0F 91 */  { BxAnother, &BX_CPU_C::SETNO_Eb },
+  /* 0F 92 */  { BxAnother, &BX_CPU_C::SETB_Eb },
+  /* 0F 93 */  { BxAnother, &BX_CPU_C::SETNB_Eb },
+  /* 0F 94 */  { BxAnother, &BX_CPU_C::SETZ_Eb },
+  /* 0F 95 */  { BxAnother, &BX_CPU_C::SETNZ_Eb },
+  /* 0F 96 */  { BxAnother, &BX_CPU_C::SETBE_Eb },
+  /* 0F 97 */  { BxAnother, &BX_CPU_C::SETNBE_Eb },
+  /* 0F 98 */  { BxAnother, &BX_CPU_C::SETS_Eb },
+  /* 0F 99 */  { BxAnother, &BX_CPU_C::SETNS_Eb },
+  /* 0F 9A */  { BxAnother, &BX_CPU_C::SETP_Eb },
+  /* 0F 9B */  { BxAnother, &BX_CPU_C::SETNP_Eb },
+  /* 0F 9C */  { BxAnother, &BX_CPU_C::SETL_Eb },
+  /* 0F 9D */  { BxAnother, &BX_CPU_C::SETNL_Eb },
+  /* 0F 9E */  { BxAnother, &BX_CPU_C::SETLE_Eb },
+  /* 0F 9F */  { BxAnother, &BX_CPU_C::SETNLE_Eb },
   /* 0F A0 */  { 0, &BX_CPU_C::PUSH_FS },
   /* 0F A1 */  { 0, &BX_CPU_C::POP_FS },
   /* 0F A2 */  { 0, &BX_CPU_C::CPUID },
-  /* 0F A3 */  { BxAnother,  &BX_CPU_C::BT_EvGv },
-  /* 0F A4 */  { BxAnother | BxImmediate_Ib,  &BX_CPU_C::SHLD_EdGd },
-  /* 0F A5 */  { BxAnother,                 &BX_CPU_C::SHLD_EdGd },
+  /* 0F A3 */  { BxAnother, &BX_CPU_C::BT_EvGv },
+  /* 0F A4 */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHLD_EdGd },
+  /* 0F A5 */  { BxAnother,                  &BX_CPU_C::SHLD_EdGd },
   /* 0F A6 */  { 0, &BX_CPU_C::CMPXCHG_XBTS },
   /* 0F A7 */  { 0, &BX_CPU_C::CMPXCHG_IBTS },
   /* 0F A8 */  { 0, &BX_CPU_C::PUSH_GS },
   /* 0F A9 */  { 0, &BX_CPU_C::POP_GS },
   /* 0F AA */  { 0, &BX_CPU_C::RSM },
-  /* 0F AB */  { BxAnother,  &BX_CPU_C::BTS_EvGv },
-  /* 0F AC */  { BxAnother | BxImmediate_Ib,  &BX_CPU_C::SHRD_EdGd },
-  /* 0F AD */  { BxAnother,                   &BX_CPU_C::SHRD_EdGd },
+  /* 0F AB */  { BxAnother | BxLockable, &BX_CPU_C::BTS_EvGv },
+  /* 0F AC */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHRD_EdGd },
+  /* 0F AD */  { BxAnother,                  &BX_CPU_C::SHRD_EdGd },
   /* 0F AE */  { BxAnother | BxGroup15, NULL, BxOpcodeInfoG15 },
-  /* 0F AF */  { BxAnother,  &BX_CPU_C::IMUL_GdEd },
-  /* 0F B0 */  { BxAnother,  &BX_CPU_C::CMPXCHG_EbGb },
-  /* 0F B1 */  { BxAnother,  &BX_CPU_C::CMPXCHG_EdGd },
-  /* 0F B2 */  { BxAnother,  &BX_CPU_C::LSS_GvMp },
-  /* 0F B3 */  { BxAnother,  &BX_CPU_C::BTR_EvGv },
-  /* 0F B4 */  { BxAnother,  &BX_CPU_C::LFS_GvMp },
-  /* 0F B5 */  { BxAnother,  &BX_CPU_C::LGS_GvMp },
-  /* 0F B6 */  { BxAnother,  &BX_CPU_C::MOVZX_GdEb },
-  /* 0F B7 */  { BxAnother,  &BX_CPU_C::MOVZX_GdEw },
+  /* 0F AF */  { BxAnother, &BX_CPU_C::IMUL_GdEd },
+  /* 0F B0 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EbGb },
+  /* 0F B1 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EdGd },
+  /* 0F B2 */  { BxAnother, &BX_CPU_C::LSS_GvMp },
+  /* 0F B3 */  { BxAnother | BxLockable, &BX_CPU_C::BTR_EvGv },
+  /* 0F B4 */  { BxAnother, &BX_CPU_C::LFS_GvMp },
+  /* 0F B5 */  { BxAnother, &BX_CPU_C::LGS_GvMp },
+  /* 0F B6 */  { BxAnother, &BX_CPU_C::MOVZX_GdEb },
+  /* 0F B7 */  { BxAnother, &BX_CPU_C::MOVZX_GdEw },
   /* 0F B8 */  { 0, &BX_CPU_C::BxError },
   /* 0F B9 */  { 0, &BX_CPU_C::BxError },
   /* 0F BA */  { BxAnother | BxGroup8, NULL, BxOpcodeInfoG8EvIb },
-  /* 0F BB */  { BxAnother,  &BX_CPU_C::BTC_EvGv },
-  /* 0F BC */  { BxAnother,  &BX_CPU_C::BSF_GvEv },
-  /* 0F BD */  { BxAnother,  &BX_CPU_C::BSR_GvEv },
-  /* 0F BE */  { BxAnother,  &BX_CPU_C::MOVSX_GdEb },
-  /* 0F BF */  { BxAnother,  &BX_CPU_C::MOVSX_GdEw },
-  /* 0F C0 */  { BxAnother,  &BX_CPU_C::XADD_EbGb },
-  /* 0F C1 */  { BxAnother,  &BX_CPU_C::XADD_EdGd },
+  /* 0F BB */  { BxAnother | BxLockable, &BX_CPU_C::BTC_EvGv },
+  /* 0F BC */  { BxAnother, &BX_CPU_C::BSF_GvEv },
+  /* 0F BD */  { BxAnother, &BX_CPU_C::BSR_GvEv },
+  /* 0F BE */  { BxAnother, &BX_CPU_C::MOVSX_GdEb },
+  /* 0F BF */  { BxAnother, &BX_CPU_C::MOVSX_GdEw },
+  /* 0F C0 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EbGb },
+  /* 0F C1 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EdGd },
   /* 0F C2 */  { BxAnother | BxImmediate_Ib | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc2 },
   /* 0F C3 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc3 },
   /* 0F C4 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc4 },
@@ -2363,7 +2377,7 @@
 {
   // remain must be at least 1
 
-  bx_bool is_32;
+  bx_bool is_32, lock=0;
   unsigned b1, b2, ilen=1, attr, os_32;
   unsigned imm_mode, offset;
   unsigned rm, mod, nnn;
@@ -2507,6 +2521,7 @@
 
         case 0xf0: // LOCK:
           BX_INSTR_PREFIX_LOCK(BX_CPU_ID);
+          lock = 1;
           if (ilen < remain) {
             ilen++;
             goto fetch_b1;
@@ -2540,10 +2555,19 @@
     instruction->modRMForm.modRMData |= (nnn<<8);
     instruction->modRMForm.modRMData |= rm;
 
+    if (lock) { // lock prefix
+      // lock prefix not allowed or destination operand is not memory
+      if ((mod == 0xc0) || !(attr & BxLockable)) {
+        BX_INFO(("LOCK prefix unallowed (op1=0x%x, nnn=%u)", b1, nnn));
+        UndefinedOpcode(instruction);
+      }
+    }
+
     if (mod == 0xc0) { // mod == 11b
       instruction->metaInfo |= (1<<22); // (modC0)
       goto modrm_done;
-      }
+    }
+
     if (instruction->as32L()) {
       // 32-bit addressing modes; note that mod==11b handled above
       if (rm != 4) { // no s-i-b byte
diff -u -r -N bochs-CVS/cpu/fetchdecode64.cc bochs-LOCK-PREFIX/cpu/fetchdecode64.cc
--- bochs-CVS/cpu/fetchdecode64.cc	2003-03-17 02:40:59.000000000 +0200
+++ bochs-LOCK-PREFIX/cpu/fetchdecode64.cc	2003-03-29 01:13:06.000000000 +0200
@@ -228,13 +228,13 @@
 } BxOpcodeInfo_t;
 
 static BxOpcodeInfo_t opcodesADD_EwIw[2] = {
-  { 0,  { &BX_CPU_C::ADD_EEwIw } },
-  { 0,  { &BX_CPU_C::ADD_EGwIw } }
+  { BxLockable,  { &BX_CPU_C::ADD_EEwIw } },
+  { 0,           { &BX_CPU_C::ADD_EGwIw } }
   };
 
 static BxOpcodeInfo_t opcodesADD_EdId[2] = {
-  { 0,  { &BX_CPU_C::ADD_EEdId } },
-  { 0,  { &BX_CPU_C::ADD_EGdId } }
+  { BxLockable,  { &BX_CPU_C::ADD_EEdId } },
+  { 0,           { &BX_CPU_C::ADD_EGdId } }
   };
 
 static BxOpcodeInfo_t opcodesADD_GwEw[2] = {
@@ -1122,50 +1122,50 @@
 /* ************* */
 
 static BxOpcodeInfo_t BxOpcodeInfo64G1EbIb[8] = {
-  /* 0 */  { BxImmediate_Ib, &BX_CPU_C::ADD_EbIb },
-  /* 1 */  { BxImmediate_Ib, &BX_CPU_C::OR_EbIb },
-  /* 2 */  { BxImmediate_Ib, &BX_CPU_C::ADC_EbIb },
-  /* 3 */  { BxImmediate_Ib, &BX_CPU_C::SBB_EbIb },
-  /* 4 */  { BxImmediate_Ib, &BX_CPU_C::AND_EbIb },
-  /* 5 */  { BxImmediate_Ib, &BX_CPU_C::SUB_EbIb },
-  /* 6 */  { BxImmediate_Ib, &BX_CPU_C::XOR_EbIb },
-  /* 7 */  { BxImmediate_Ib, &BX_CPU_C::CMP_EbIb }
+  /* 0 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::ADD_EbIb },
+  /* 1 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::OR_EbIb },
+  /* 2 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::ADC_EbIb },
+  /* 3 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::SBB_EbIb },
+  /* 4 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::AND_EbIb },
+  /* 5 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::SUB_EbIb },
+  /* 6 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::XOR_EbIb },
+  /* 7 */  { BxImmediate_Ib,              &BX_CPU_C::CMP_EbIb }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G1Ew[8] = {
   // attributes defined in main area
-  /* 0 */  { BxSplitMod11b,  NULL, opcodesADD_EwIw },
-  /* 1 */  { 0, &BX_CPU_C::OR_EwIw },
-  /* 2 */  { 0, &BX_CPU_C::ADC_EwIw },
-  /* 3 */  { 0, &BX_CPU_C::SBB_EwIw },
-  /* 4 */  { 0, &BX_CPU_C::AND_EwIw },
-  /* 5 */  { 0, &BX_CPU_C::SUB_EwIw },
-  /* 6 */  { 0, &BX_CPU_C::XOR_EwIw },
-  /* 7 */  { 0, &BX_CPU_C::CMP_EwIw }
+  /* 0 */  { BxSplitMod11b, NULL, opcodesADD_EwIw },
+  /* 1 */  { BxLockable, &BX_CPU_C::OR_EwIw },
+  /* 2 */  { BxLockable, &BX_CPU_C::ADC_EwIw },
+  /* 3 */  { BxLockable, &BX_CPU_C::SBB_EwIw },
+  /* 4 */  { BxLockable, &BX_CPU_C::AND_EwIw },
+  /* 5 */  { BxLockable, &BX_CPU_C::SUB_EwIw },
+  /* 6 */  { BxLockable, &BX_CPU_C::XOR_EwIw },
+  /* 7 */  { 0,          &BX_CPU_C::CMP_EwIw }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G1Ed[8] = {
   // attributes defined in main area
-  /* 0 */  { BxSplitMod11b,  NULL, opcodesADD_EdId },
-  /* 1 */  { 0, &BX_CPU_C::OR_EdId },
-  /* 2 */  { 0, &BX_CPU_C::ADC_EdId },
-  /* 3 */  { 0, &BX_CPU_C::SBB_EdId },
-  /* 4 */  { 0, &BX_CPU_C::AND_EdId },
-  /* 5 */  { 0, &BX_CPU_C::SUB_EdId },
-  /* 6 */  { 0, &BX_CPU_C::XOR_EdId },
-  /* 7 */  { 0, &BX_CPU_C::CMP_EdId }
+  /* 0 */  { BxSplitMod11b, NULL, opcodesADD_EdId },
+  /* 1 */  { BxLockable, &BX_CPU_C::OR_EdId },
+  /* 2 */  { BxLockable, &BX_CPU_C::ADC_EdId },
+  /* 3 */  { BxLockable, &BX_CPU_C::SBB_EdId },
+  /* 4 */  { BxLockable, &BX_CPU_C::AND_EdId },
+  /* 5 */  { BxLockable, &BX_CPU_C::SUB_EdId },
+  /* 6 */  { BxLockable, &BX_CPU_C::XOR_EdId },
+  /* 7 */  { 0,          &BX_CPU_C::CMP_EdId }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G1Eq[8] = {
   // attributes defined in main area
-  /* 0 */  { 0, &BX_CPU_C::ADD_EqId },
-  /* 1 */  { 0, &BX_CPU_C::OR_EqId },
-  /* 2 */  { 0, &BX_CPU_C::ADC_EqId },
-  /* 3 */  { 0, &BX_CPU_C::SBB_EqId },
-  /* 4 */  { 0, &BX_CPU_C::AND_EqId },
-  /* 5 */  { 0, &BX_CPU_C::SUB_EqId },
-  /* 6 */  { 0, &BX_CPU_C::XOR_EqId },
-  /* 7 */  { 0, &BX_CPU_C::CMP_EqId }
+  /* 0 */  { BxLockable, &BX_CPU_C::ADD_EqId },
+  /* 1 */  { BxLockable, &BX_CPU_C::OR_EqId },
+  /* 2 */  { BxLockable, &BX_CPU_C::ADC_EqId },
+  /* 3 */  { BxLockable, &BX_CPU_C::SBB_EqId },
+  /* 4 */  { BxLockable, &BX_CPU_C::AND_EqId },
+  /* 5 */  { BxLockable, &BX_CPU_C::SUB_EqId },
+  /* 6 */  { BxLockable, &BX_CPU_C::XOR_EqId },
+  /* 7 */  { 0,          &BX_CPU_C::CMP_EqId }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G2Eb[8] = {
@@ -1219,50 +1219,50 @@
 static BxOpcodeInfo_t BxOpcodeInfo64G3Eb[8] = {
   /* 0 */  { BxImmediate_Ib, &BX_CPU_C::TEST_EbIb },
   /* 1 */  { BxImmediate_Ib, &BX_CPU_C::TEST_EbIb },
-  /* 2 */  { 0,             &BX_CPU_C::NOT_Eb },
-  /* 3 */  { 0,             &BX_CPU_C::NEG_Eb },
-  /* 4 */  { 0,             &BX_CPU_C::MUL_ALEb },
-  /* 5 */  { 0,             &BX_CPU_C::IMUL_ALEb },
-  /* 6 */  { 0,             &BX_CPU_C::DIV_ALEb },
-  /* 7 */  { 0,             &BX_CPU_C::IDIV_ALEb }
+  /* 2 */  { BxLockable,     &BX_CPU_C::NOT_Eb },
+  /* 3 */  { BxLockable,     &BX_CPU_C::NEG_Eb },
+  /* 4 */  { 0,              &BX_CPU_C::MUL_ALEb },
+  /* 5 */  { 0,              &BX_CPU_C::IMUL_ALEb },
+  /* 6 */  { 0,              &BX_CPU_C::DIV_ALEb },
+  /* 7 */  { 0,              &BX_CPU_C::IDIV_ALEb }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G3Ew[8] = {
   /* 0 */  { BxImmediate_Iw, &BX_CPU_C::TEST_EwIw },
   /* 1 */  { BxImmediate_Iw, &BX_CPU_C::TEST_EwIw },
-  /* 2 */  { 0,             &BX_CPU_C::NOT_Ew },
-  /* 3 */  { 0,             &BX_CPU_C::NEG_Ew },
-  /* 4 */  { 0,             &BX_CPU_C::MUL_AXEw },
-  /* 5 */  { 0,             &BX_CPU_C::IMUL_AXEw },
-  /* 6 */  { 0,             &BX_CPU_C::DIV_AXEw },
-  /* 7 */  { 0,             &BX_CPU_C::IDIV_AXEw }
+  /* 2 */  { BxLockable,     &BX_CPU_C::NOT_Ew },
+  /* 3 */  { BxLockable,     &BX_CPU_C::NEG_Ew },
+  /* 4 */  { 0,              &BX_CPU_C::MUL_AXEw },
+  /* 5 */  { 0,              &BX_CPU_C::IMUL_AXEw },
+  /* 6 */  { 0,              &BX_CPU_C::DIV_AXEw },
+  /* 7 */  { 0,              &BX_CPU_C::IDIV_AXEw }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G3Ed[8] = {
   /* 0 */  { BxImmediate_Iv, &BX_CPU_C::TEST_EdId },
   /* 1 */  { BxImmediate_Iv, &BX_CPU_C::TEST_EdId },
-  /* 2 */  { 0,             &BX_CPU_C::NOT_Ed },
-  /* 3 */  { 0,             &BX_CPU_C::NEG_Ed },
-  /* 4 */  { 0,             &BX_CPU_C::MUL_EAXEd },
-  /* 5 */  { 0,             &BX_CPU_C::IMUL_EAXEd },
-  /* 6 */  { 0,             &BX_CPU_C::DIV_EAXEd },
-  /* 7 */  { 0,             &BX_CPU_C::IDIV_EAXEd }
+  /* 2 */  { BxLockable,     &BX_CPU_C::NOT_Ed },
+  /* 3 */  { BxLockable,     &BX_CPU_C::NEG_Ed },
+  /* 4 */  { 0,              &BX_CPU_C::MUL_EAXEd },
+  /* 5 */  { 0,              &BX_CPU_C::IMUL_EAXEd },
+  /* 6 */  { 0,              &BX_CPU_C::DIV_EAXEd },
+  /* 7 */  { 0,              &BX_CPU_C::IDIV_EAXEd }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G3Eq[8] = {
   /* 0 */  { BxImmediate_Iv, &BX_CPU_C::TEST_EqId },
   /* 1 */  { BxImmediate_Iv, &BX_CPU_C::TEST_EqId },
-  /* 2 */  { 0,             &BX_CPU_C::NOT_Eq },
-  /* 3 */  { 0,             &BX_CPU_C::NEG_Eq },
-  /* 4 */  { 0,             &BX_CPU_C::MUL_RAXEq },
-  /* 5 */  { 0,             &BX_CPU_C::IMUL_RAXEq },
-  /* 6 */  { 0,             &BX_CPU_C::DIV_RAXEq },
-  /* 7 */  { 0,             &BX_CPU_C::IDIV_RAXEq }
+  /* 2 */  { BxLockable,     &BX_CPU_C::NOT_Eq },
+  /* 3 */  { BxLockable,     &BX_CPU_C::NEG_Eq },
+  /* 4 */  { 0,              &BX_CPU_C::MUL_RAXEq },
+  /* 5 */  { 0,              &BX_CPU_C::IMUL_RAXEq },
+  /* 6 */  { 0,              &BX_CPU_C::DIV_RAXEq },
+  /* 7 */  { 0,              &BX_CPU_C::IDIV_RAXEq }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G4[8] = {
-  /* 0 */  { 0, &BX_CPU_C::INC_Eb },
-  /* 1 */  { 0, &BX_CPU_C::DEC_Eb },
+  /* 0 */  { BxLockable, &BX_CPU_C::INC_Eb },
+  /* 1 */  { BxLockable, &BX_CPU_C::DEC_Eb },
   /* 2 */  { 0, &BX_CPU_C::BxError },
   /* 3 */  { 0, &BX_CPU_C::BxError },
   /* 4 */  { 0, &BX_CPU_C::BxError },
@@ -1273,8 +1273,8 @@
 
 static BxOpcodeInfo_t BxOpcodeInfo64G5w[8] = {
   // attributes defined in main area
-  /* 0 */  { 0, &BX_CPU_C::INC_Ew },
-  /* 1 */  { 0, &BX_CPU_C::DEC_Ew },
+  /* 0 */  { BxLockable, &BX_CPU_C::INC_Ew },
+  /* 1 */  { BxLockable, &BX_CPU_C::DEC_Ew },
   /* 2 */  { 0, &BX_CPU_C::CALL_Ew },   // invalid??
   /* 3 */  { 0, &BX_CPU_C::CALL16_Ep }, // invalid??
   /* 4 */  { 0, &BX_CPU_C::JMP_Eq },    // invalid??
@@ -1285,8 +1285,8 @@
 
 static BxOpcodeInfo_t BxOpcodeInfo64G5d[8] = {
   // attributes defined in main area
-  /* 0 */  { 0, &BX_CPU_C::INC_Ed },
-  /* 1 */  { 0, &BX_CPU_C::DEC_Ed },
+  /* 0 */  { BxLockable, &BX_CPU_C::INC_Ed },
+  /* 1 */  { BxLockable, &BX_CPU_C::DEC_Ed },
   /* 2 */  { 0, &BX_CPU_C::CALL_Eq },
   /* 3 */  { 0, &BX_CPU_C::CALL32_Ep },
   /* 4 */  { 0, &BX_CPU_C::JMP_Eq },
@@ -1297,8 +1297,8 @@
 
 static BxOpcodeInfo_t BxOpcodeInfo64G5q[8] = {
   // attributes defined in main area
-  /* 0 */  { 0, &BX_CPU_C::INC_Eq },
-  /* 1 */  { 0, &BX_CPU_C::DEC_Eq },
+  /* 0 */  { BxLockable, &BX_CPU_C::INC_Eq },
+  /* 1 */  { BxLockable, &BX_CPU_C::DEC_Eq },
   /* 2 */  { 0, &BX_CPU_C::CALL_Eq },
   /* 3 */  { 0, &BX_CPU_C::CALL64_Ep },
   /* 4 */  { 0, &BX_CPU_C::JMP_Eq },
@@ -1336,15 +1336,15 @@
   /* 1 */  { 0, &BX_CPU_C::BxError },
   /* 2 */  { 0, &BX_CPU_C::BxError },
   /* 3 */  { 0, &BX_CPU_C::BxError },
-  /* 4 */  { BxImmediate_Ib, &BX_CPU_C::BT_EvIb },
-  /* 5 */  { BxImmediate_Ib, &BX_CPU_C::BTS_EvIb },
-  /* 6 */  { BxImmediate_Ib, &BX_CPU_C::BTR_EvIb },
-  /* 7 */  { BxImmediate_Ib, &BX_CPU_C::BTC_EvIb }
+  /* 4 */  { BxImmediate_Ib,              &BX_CPU_C::BT_EvIb },
+  /* 5 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::BTS_EvIb },
+  /* 6 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::BTR_EvIb },
+  /* 7 */  { BxImmediate_Ib | BxLockable, &BX_CPU_C::BTC_EvIb }
   };
 
 static BxOpcodeInfo_t BxOpcodeInfo64G9[8] = {
   /* 0 */  { 0, &BX_CPU_C::BxError },
-  /* 1 */  { 0, &BX_CPU_C::CMPXCHG8B },
+  /* 1 */  { BxLockable, &BX_CPU_C::CMPXCHG8B },
   /* 2 */  { 0, &BX_CPU_C::BxError },
   /* 3 */  { 0, &BX_CPU_C::BxError },
   /* 4 */  { 0, &BX_CPU_C::BxError },
@@ -1414,48 +1414,48 @@
 
 static BxOpcodeInfo_t BxOpcodeInfo64[512*3] = {
   // 512 entries for 16bit mode
-  /* 00 */  { BxAnother, &BX_CPU_C::ADD_EbGb },
-  /* 01 */  { BxAnother, &BX_CPU_C::ADD_EwGw },
+  /* 00 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EbGb },
+  /* 01 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EwGw },
   /* 02 */  { BxAnother, &BX_CPU_C::ADD_GbEb },
-  /* 03 */  { BxAnother | BxSplitMod11b,  NULL, opcodesADD_GwEw },
+  /* 03 */  { BxAnother | BxSplitMod11b, NULL, opcodesADD_GwEw },
   /* 04 */  { BxImmediate_Ib, &BX_CPU_C::ADD_ALIb },
   /* 05 */  { BxImmediate_Iv, &BX_CPU_C::ADD_AXIw },
   /* 06 */  { 0, &BX_CPU_C::BxError },
   /* 07 */  { 0, &BX_CPU_C::BxError },
-  /* 08 */  { BxAnother, &BX_CPU_C::OR_EbGb },
-  /* 09 */  { BxAnother, &BX_CPU_C::OR_EwGw },
+  /* 08 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EbGb },
+  /* 09 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EwGw },
   /* 0A */  { BxAnother, &BX_CPU_C::OR_GbEb },
   /* 0B */  { BxAnother, &BX_CPU_C::OR_GwEw },
   /* 0C */  { BxImmediate_Ib, &BX_CPU_C::OR_ALIb },
   /* 0D */  { BxImmediate_Iv, &BX_CPU_C::OR_AXIw },
   /* 0E */  { 0, &BX_CPU_C::BxError },
   /* 0F */  { BxAnother, &BX_CPU_C::BxError }, // 2-byte escape
-  /* 10 */  { BxAnother, &BX_CPU_C::ADC_EbGb },
-  /* 11 */  { BxAnother, &BX_CPU_C::ADC_EwGw },
+  /* 10 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EbGb },
+  /* 11 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EwGw },
   /* 12 */  { BxAnother, &BX_CPU_C::ADC_GbEb },
   /* 13 */  { BxAnother, &BX_CPU_C::ADC_GwEw },
   /* 14 */  { BxImmediate_Ib, &BX_CPU_C::ADC_ALIb },
   /* 15 */  { BxImmediate_Iv, &BX_CPU_C::ADC_AXIw },
   /* 16 */  { 0, &BX_CPU_C::BxError },
   /* 17 */  { 0, &BX_CPU_C::BxError },
-  /* 18 */  { BxAnother, &BX_CPU_C::SBB_EbGb },
-  /* 19 */  { BxAnother, &BX_CPU_C::SBB_EwGw },
+  /* 18 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EbGb },
+  /* 19 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EwGw },
   /* 1A */  { BxAnother, &BX_CPU_C::SBB_GbEb },
   /* 1B */  { BxAnother, &BX_CPU_C::SBB_GwEw },
   /* 1C */  { BxImmediate_Ib, &BX_CPU_C::SBB_ALIb },
   /* 1D */  { BxImmediate_Iv, &BX_CPU_C::SBB_AXIw },
   /* 1E */  { 0, &BX_CPU_C::BxError },
   /* 1F */  { 0, &BX_CPU_C::BxError },
-  /* 20 */  { BxAnother, &BX_CPU_C::AND_EbGb },
-  /* 21 */  { BxAnother, &BX_CPU_C::AND_EwGw },
+  /* 20 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EbGb },
+  /* 21 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EwGw },
   /* 22 */  { BxAnother, &BX_CPU_C::AND_GbEb },
   /* 23 */  { BxAnother, &BX_CPU_C::AND_GwEw },
   /* 24 */  { BxImmediate_Ib, &BX_CPU_C::AND_ALIb },
   /* 25 */  { BxImmediate_Iv, &BX_CPU_C::AND_AXIw },
   /* 26 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // ES:
   /* 27 */  { 0, &BX_CPU_C::BxError },
-  /* 28 */  { BxAnother, &BX_CPU_C::SUB_EbGb },
-  /* 29 */  { BxAnother, &BX_CPU_C::SUB_EwGw },
+  /* 28 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EbGb },
+  /* 29 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EwGw },
   /* 2A */  { BxAnother, &BX_CPU_C::SUB_GbEb },
   /* 2B */  { BxAnother, &BX_CPU_C::SUB_GwEw },
   /* 2C */  { BxImmediate_Ib, &BX_CPU_C::SUB_ALIb },
@@ -1625,10 +1625,10 @@
   /* CD */  { BxImmediate_Ib, &BX_CPU_C::INT_Ib },
   /* CE */  { 0, &BX_CPU_C::BxError },
   /* CF */  { 0, &BX_CPU_C::IRET16 },
-  /* D0 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eb },
-  /* D1 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Ew },
-  /* D2 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eb },
-  /* D3 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Ew },
+  /* D0 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eb },
+  /* D1 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Ew },
+  /* D2 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eb },
+  /* D3 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Ew },
   /* D4 */  { 0, &BX_CPU_C::BxError },
   /* D5 */  { 0, &BX_CPU_C::BxError },
   /* D6 */  { 0, &BX_CPU_C::BxError },
@@ -1663,19 +1663,19 @@
   /* F3 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // REP, REPE/REPZ
   /* F4 */  { 0, &BX_CPU_C::HLT },
   /* F5 */  { 0, &BX_CPU_C::CMC },
-  /* F6 */  { BxAnother | BxGroup3,  NULL, BxOpcodeInfo64G3Eb },
-  /* F7 */  { BxAnother | BxGroup3,  NULL, BxOpcodeInfo64G3Ew },
+  /* F6 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfo64G3Eb },
+  /* F7 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfo64G3Ew },
   /* F8 */  { 0, &BX_CPU_C::CLC },
   /* F9 */  { 0, &BX_CPU_C::STC },
   /* FA */  { 0, &BX_CPU_C::CLI },
   /* FB */  { 0, &BX_CPU_C::STI },
   /* FC */  { 0, &BX_CPU_C::CLD },
   /* FD */  { 0, &BX_CPU_C::STD },
-  /* FE */  { BxAnother | BxGroup4,  NULL, BxOpcodeInfo64G4 },
-  /* FF */  { BxAnother | BxGroup5,  NULL, BxOpcodeInfo64G5w },
+  /* FE */  { BxAnother | BxGroup4, NULL, BxOpcodeInfo64G4 },
+  /* FF */  { BxAnother | BxGroup5, NULL, BxOpcodeInfo64G5w },
 
-  /* 0F 00 */  { BxAnother | BxGroup6,  NULL, BxOpcodeInfo64G6 },
-  /* 0F 01 */  { BxAnother | BxGroup7,  NULL, BxOpcodeInfo64G7 },
+  /* 0F 00 */  { BxAnother | BxGroup6, NULL, BxOpcodeInfo64G6 },
+  /* 0F 01 */  { BxAnother | BxGroup7, NULL, BxOpcodeInfo64G7 },
   /* 0F 02 */  { BxAnother, &BX_CPU_C::LAR_GvEw },
   /* 0F 03 */  { BxAnother, &BX_CPU_C::LSL_GvEw },
   /* 0F 04 */  { 0, &BX_CPU_C::BxError },
@@ -1839,21 +1839,21 @@
   /* 0F A2 */  { 0, &BX_CPU_C::CPUID },
   /* 0F A3 */  { BxAnother, &BX_CPU_C::BT_EvGv },
   /* 0F A4 */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHLD_EwGw },
-  /* 0F A5 */  { BxAnother,                 &BX_CPU_C::SHLD_EwGw },
+  /* 0F A5 */  { BxAnother,                  &BX_CPU_C::SHLD_EwGw },
   /* 0F A6 */  { 0, &BX_CPU_C::CMPXCHG_XBTS },
   /* 0F A7 */  { 0, &BX_CPU_C::CMPXCHG_IBTS },
   /* 0F A8 */  { 0, &BX_CPU_C::PUSH_GS },
   /* 0F A9 */  { 0, &BX_CPU_C::POP_GS },
   /* 0F AA */  { 0, &BX_CPU_C::RSM },
-  /* 0F AB */  { BxAnother, &BX_CPU_C::BTS_EvGv },
+  /* 0F AB */  { BxAnother | BxLockable, &BX_CPU_C::BTS_EvGv },
   /* 0F AC */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHRD_EwGw },
-  /* 0F AD */  { BxAnother,                 &BX_CPU_C::SHRD_EwGw },
+  /* 0F AD */  { BxAnother,                  &BX_CPU_C::SHRD_EwGw },
   /* 0F AE */  { BxAnother | BxGroup15, NULL, BxOpcodeInfo64G15 },
   /* 0F AF */  { BxAnother, &BX_CPU_C::IMUL_GwEw },
-  /* 0F B0 */  { BxAnother, &BX_CPU_C::CMPXCHG_EbGb },
-  /* 0F B1 */  { BxAnother, &BX_CPU_C::CMPXCHG_EwGw },
+  /* 0F B0 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EbGb },
+  /* 0F B1 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EwGw },
   /* 0F B2 */  { BxAnother, &BX_CPU_C::LSS_GvMp },
-  /* 0F B3 */  { BxAnother, &BX_CPU_C::BTR_EvGv },
+  /* 0F B3 */  { BxAnother | BxLockable, &BX_CPU_C::BTR_EvGv },
   /* 0F B4 */  { BxAnother, &BX_CPU_C::LFS_GvMp },
   /* 0F B5 */  { BxAnother, &BX_CPU_C::LGS_GvMp },
   /* 0F B6 */  { BxAnother, &BX_CPU_C::MOVZX_GwEb },
@@ -1861,19 +1861,19 @@
   /* 0F B8 */  { 0, &BX_CPU_C::BxError },
   /* 0F B9 */  { 0, &BX_CPU_C::BxError },
   /* 0F BA */  { BxAnother | BxGroup8, NULL, BxOpcodeInfo64G8EvIb },
-  /* 0F BB */  { BxAnother, &BX_CPU_C::BTC_EvGv },
+  /* 0F BB */  { BxAnother | BxLockable, &BX_CPU_C::BTC_EvGv },
   /* 0F BC */  { BxAnother, &BX_CPU_C::BSF_GvEv },
   /* 0F BD */  { BxAnother, &BX_CPU_C::BSR_GvEv },
   /* 0F BE */  { BxAnother, &BX_CPU_C::MOVSX_GwEb },
   /* 0F BF */  { BxAnother, &BX_CPU_C::MOVSX_GwEw },
-  /* 0F C0 */  { BxAnother, &BX_CPU_C::XADD_EbGb },
-  /* 0F C1 */  { BxAnother, &BX_CPU_C::XADD_EwGw },
+  /* 0F C0 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EbGb },
+  /* 0F C1 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EwGw },
   /* 0F C2 */  { BxAnother | BxImmediate_Ib | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc2 },
   /* 0F C3 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc3 },
   /* 0F C4 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc4 },
   /* 0F C5 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc5 },
   /* 0F C6 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc6 },
-  /* 0F C7 */  { BxAnother | BxGroup9,  NULL, BxOpcodeInfo64G9 },
+  /* 0F C7 */  { BxAnother | BxGroup9, NULL, BxOpcodeInfo64G9 },
   /* 0F C8 */  { 0, &BX_CPU_C::BSWAP_EAX },
   /* 0F C9 */  { 0, &BX_CPU_C::BSWAP_ECX },
   /* 0F CA */  { 0, &BX_CPU_C::BSWAP_EDX },
@@ -1932,56 +1932,56 @@
   /* 0F FF */  { 0, &BX_CPU_C::BxError },
 
   // 512 entries for 32bit mod
-  /* 00 */  { BxAnother, &BX_CPU_C::ADD_EbGb },
-  /* 01 */  { BxAnother, &BX_CPU_C::ADD_EdGd },
+  /* 00 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EbGb },
+  /* 01 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EdGd },
   /* 02 */  { BxAnother, &BX_CPU_C::ADD_GbEb },
   /* 03 */  { BxAnother | BxSplitMod11b, NULL, opcodesADD_GdEd },
   /* 04 */  { BxImmediate_Ib, &BX_CPU_C::ADD_ALIb },
   /* 05 */  { BxImmediate_Iv, &BX_CPU_C::ADD_EAXId },
   /* 06 */  { 0, &BX_CPU_C::BxError },
   /* 07 */  { 0, &BX_CPU_C::BxError },
-  /* 08 */  { BxAnother, &BX_CPU_C::OR_EbGb },
-  /* 09 */  { BxAnother, &BX_CPU_C::OR_EdGd },
+  /* 08 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EbGb },
+  /* 09 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EdGd },
   /* 0A */  { BxAnother, &BX_CPU_C::OR_GbEb },
   /* 0B */  { BxAnother, &BX_CPU_C::OR_GdEd },
   /* 0C */  { BxImmediate_Ib, &BX_CPU_C::OR_ALIb },
   /* 0D */  { BxImmediate_Iv, &BX_CPU_C::OR_EAXId },
   /* 0E */  { 0, &BX_CPU_C::BxError },
   /* 0F */  { BxAnother, &BX_CPU_C::BxError }, // 2-byte escape
-  /* 10 */  { BxAnother, &BX_CPU_C::ADC_EbGb },
-  /* 11 */  { BxAnother, &BX_CPU_C::ADC_EdGd },
+  /* 10 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EbGb },
+  /* 11 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EdGd },
   /* 12 */  { BxAnother, &BX_CPU_C::ADC_GbEb },
   /* 13 */  { BxAnother, &BX_CPU_C::ADC_GdEd },
   /* 14 */  { BxImmediate_Ib, &BX_CPU_C::ADC_ALIb },
   /* 15 */  { BxImmediate_Iv, &BX_CPU_C::ADC_EAXId },
   /* 16 */  { 0, &BX_CPU_C::BxError },
   /* 17 */  { 0, &BX_CPU_C::BxError },
-  /* 18 */  { BxAnother, &BX_CPU_C::SBB_EbGb },
-  /* 19 */  { BxAnother, &BX_CPU_C::SBB_EdGd },
+  /* 18 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EbGb },
+  /* 19 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EdGd },
   /* 1A */  { BxAnother, &BX_CPU_C::SBB_GbEb },
   /* 1B */  { BxAnother, &BX_CPU_C::SBB_GdEd },
   /* 1C */  { BxImmediate_Ib, &BX_CPU_C::SBB_ALIb },
   /* 1D */  { BxImmediate_Iv, &BX_CPU_C::SBB_EAXId },
   /* 1E */  { 0, &BX_CPU_C::BxError },
   /* 1F */  { 0, &BX_CPU_C::BxError },
-  /* 20 */  { BxAnother, &BX_CPU_C::AND_EbGb },
-  /* 21 */  { BxAnother, &BX_CPU_C::AND_EdGd },
+  /* 20 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EbGb },
+  /* 21 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EdGd },
   /* 22 */  { BxAnother, &BX_CPU_C::AND_GbEb },
   /* 23 */  { BxAnother, &BX_CPU_C::AND_GdEd },
   /* 24 */  { BxImmediate_Ib, &BX_CPU_C::AND_ALIb },
   /* 25 */  { BxImmediate_Iv, &BX_CPU_C::AND_EAXId },
   /* 26 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // ES:
   /* 27 */  { 0, &BX_CPU_C::BxError },
-  /* 28 */  { BxAnother, &BX_CPU_C::SUB_EbGb },
-  /* 29 */  { BxAnother, &BX_CPU_C::SUB_EdGd },
+  /* 28 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EbGb },
+  /* 29 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EdGd },
   /* 2A */  { BxAnother, &BX_CPU_C::SUB_GbEb },
   /* 2B */  { BxAnother, &BX_CPU_C::SUB_GdEd },
   /* 2C */  { BxImmediate_Ib, &BX_CPU_C::SUB_ALIb },
   /* 2D */  { BxImmediate_Iv, &BX_CPU_C::SUB_EAXId },
   /* 2E */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // CS:
   /* 2F */  { 0, &BX_CPU_C::BxError },
-  /* 30 */  { BxAnother, &BX_CPU_C::XOR_EbGb },
-  /* 31 */  { BxAnother, &BX_CPU_C::XOR_EdGd },
+  /* 30 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EbGb },
+  /* 31 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EdGd },
   /* 32 */  { BxAnother, &BX_CPU_C::XOR_GbEb },
   /* 33 */  { BxAnother, &BX_CPU_C::XOR_GdEd },
   /* 34 */  { BxImmediate_Ib, &BX_CPU_C::XOR_ALIb },
@@ -2063,7 +2063,7 @@
   /* 7D */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jq },
   /* 7E */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jq },
   /* 7F */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jq },
-  /* 80 */  { BxAnother | BxGroup1,  NULL, BxOpcodeInfo64G1EbIb },
+  /* 80 */  { BxAnother | BxGroup1, NULL, BxOpcodeInfo64G1EbIb },
   /* 81 */  { BxAnother | BxGroup1 | BxImmediate_Iv, NULL, BxOpcodeInfo64G1Ed },
   /* 82 */  { 0, &BX_CPU_C::BxError },
   /* 83 */  { BxAnother | BxGroup1 | BxImmediate_Ib_SE, NULL, BxOpcodeInfo64G1Ed },
@@ -2143,10 +2143,10 @@
   /* CD */  { BxImmediate_Ib, &BX_CPU_C::INT_Ib },
   /* CE */  { 0, &BX_CPU_C::BxError },
   /* CF */  { 0, &BX_CPU_C::IRET32 },
-  /* D0 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eb },
-  /* D1 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Ed },
-  /* D2 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eb },
-  /* D3 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Ed },
+  /* D0 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eb },
+  /* D1 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Ed },
+  /* D2 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eb },
+  /* D3 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Ed },
   /* D4 */  { 0, &BX_CPU_C::BxError },
   /* D5 */  { 0, &BX_CPU_C::BxError },
   /* D6 */  { 0, &BX_CPU_C::BxError },
@@ -2181,19 +2181,19 @@
   /* F3 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // REP,REPE/REPZ
   /* F4 */  { 0, &BX_CPU_C::HLT },
   /* F5 */  { 0, &BX_CPU_C::CMC },
-  /* F6 */  { BxAnother | BxGroup3,  NULL, BxOpcodeInfo64G3Eb },
-  /* F7 */  { BxAnother | BxGroup3,  NULL, BxOpcodeInfo64G3Ed },
+  /* F6 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfo64G3Eb },
+  /* F7 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfo64G3Ed },
   /* F8 */  { 0, &BX_CPU_C::CLC },
   /* F9 */  { 0, &BX_CPU_C::STC },
   /* FA */  { 0, &BX_CPU_C::CLI },
   /* FB */  { 0, &BX_CPU_C::STI },
   /* FC */  { 0, &BX_CPU_C::CLD },
   /* FD */  { 0, &BX_CPU_C::STD },
-  /* FE */  { BxAnother | BxGroup4,  NULL, BxOpcodeInfo64G4 },
-  /* FF */  { BxAnother | BxGroup5,  NULL, BxOpcodeInfo64G5d },
+  /* FE */  { BxAnother | BxGroup4, NULL, BxOpcodeInfo64G4 },
+  /* FF */  { BxAnother | BxGroup5, NULL, BxOpcodeInfo64G5d },
 
-  /* 0F 00 */  { BxAnother | BxGroup6,  NULL, BxOpcodeInfo64G6 },
-  /* 0F 01 */  { BxAnother | BxGroup7,  NULL, BxOpcodeInfo64G7 },
+  /* 0F 00 */  { BxAnother | BxGroup6, NULL, BxOpcodeInfo64G6 },
+  /* 0F 01 */  { BxAnother | BxGroup7, NULL, BxOpcodeInfo64G7 },
   /* 0F 02 */  { BxAnother, &BX_CPU_C::LAR_GvEw },
   /* 0F 03 */  { BxAnother, &BX_CPU_C::LSL_GvEw },
   /* 0F 04 */  { 0, &BX_CPU_C::BxError },
@@ -2357,41 +2357,41 @@
   /* 0F A2 */  { 0, &BX_CPU_C::CPUID },
   /* 0F A3 */  { BxAnother, &BX_CPU_C::BT_EvGv },
   /* 0F A4 */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHLD_EdGd },
-  /* 0F A5 */  { BxAnother,                 &BX_CPU_C::SHLD_EdGd },
+  /* 0F A5 */  { BxAnother,                  &BX_CPU_C::SHLD_EdGd },
   /* 0F A6 */  { 0, &BX_CPU_C::CMPXCHG_XBTS },
   /* 0F A7 */  { 0, &BX_CPU_C::CMPXCHG_IBTS },
   /* 0F A8 */  { 0, &BX_CPU_C::PUSH64_GS },
   /* 0F A9 */  { 0, &BX_CPU_C::POP64_GS },
   /* 0F AA */  { 0, &BX_CPU_C::RSM },
-  /* 0F AB */  { BxAnother, &BX_CPU_C::BTS_EvGv },
+  /* 0F AB */  { BxAnother | BxLockable, &BX_CPU_C::BTS_EvGv },
   /* 0F AC */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHRD_EdGd },
-  /* 0F AD */  { BxAnother,                 &BX_CPU_C::SHRD_EdGd },
+  /* 0F AD */  { BxAnother,                  &BX_CPU_C::SHRD_EdGd },
   /* 0F AE */  { BxAnother | BxGroup15, NULL, BxOpcodeInfo64G15 },
   /* 0F AF */  { BxAnother, &BX_CPU_C::IMUL_GdEd },
-  /* 0F B0 */  { BxAnother, &BX_CPU_C::CMPXCHG_EbGb },
-  /* 0F B1 */  { BxAnother, &BX_CPU_C::CMPXCHG_EdGd },
+  /* 0F B0 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EbGb },
+  /* 0F B1 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EdGd },
   /* 0F B2 */  { BxAnother, &BX_CPU_C::LSS_GvMp },
-  /* 0F B3 */  { BxAnother, &BX_CPU_C::BTR_EvGv },
+  /* 0F B3 */  { BxAnother | BxLockable, &BX_CPU_C::BTR_EvGv },
   /* 0F B4 */  { BxAnother, &BX_CPU_C::LFS_GvMp },
   /* 0F B5 */  { BxAnother, &BX_CPU_C::LGS_GvMp },
   /* 0F B6 */  { BxAnother, &BX_CPU_C::MOVZX_GdEb },
   /* 0F B7 */  { BxAnother, &BX_CPU_C::MOVZX_GdEw },
   /* 0F B8 */  { 0, &BX_CPU_C::BxError },
   /* 0F B9 */  { 0, &BX_CPU_C::BxError },
-  /* 0F BA */  { BxAnother | BxGroup8,  NULL, BxOpcodeInfo64G8EvIb },
-  /* 0F BB */  { BxAnother, &BX_CPU_C::BTC_EvGv },
+  /* 0F BA */  { BxAnother | BxGroup8, NULL, BxOpcodeInfo64G8EvIb },
+  /* 0F BB */  { BxAnother | BxLockable, &BX_CPU_C::BTC_EvGv },
   /* 0F BC */  { BxAnother, &BX_CPU_C::BSF_GvEv },
   /* 0F BD */  { BxAnother, &BX_CPU_C::BSR_GvEv },
   /* 0F BE */  { BxAnother, &BX_CPU_C::MOVSX_GdEb },
   /* 0F BF */  { BxAnother, &BX_CPU_C::MOVSX_GdEw },
-  /* 0F C0 */  { BxAnother, &BX_CPU_C::XADD_EbGb },
-  /* 0F C1 */  { BxAnother, &BX_CPU_C::XADD_EdGd },
+  /* 0F C0 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EbGb },
+  /* 0F C1 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EdGd },
   /* 0F C2 */  { BxAnother | BxImmediate_Ib | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc2 },
   /* 0F C3 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc3 },
   /* 0F C4 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc4 },
   /* 0F C5 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc5 },
   /* 0F C6 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc6 },
-  /* 0F C7 */  { BxAnother | BxGroup9,  NULL, BxOpcodeInfo64G9 },
+  /* 0F C7 */  { BxAnother | BxGroup9, NULL, BxOpcodeInfo64G9 },
   /* 0F C8 */  { 0, &BX_CPU_C::BSWAP_EAX },
   /* 0F C9 */  { 0, &BX_CPU_C::BSWAP_ECX },
   /* 0F CA */  { 0, &BX_CPU_C::BSWAP_EDX },
@@ -2450,8 +2450,8 @@
   /* 0F FF */  { 0, &BX_CPU_C::BxError },
 
   // 512 entries for 64bit mod
-  /* 00 */  { BxAnother, &BX_CPU_C::ADD_EbGb },
-  /* 01 */  { BxAnother, &BX_CPU_C::ADD_EqGq },
+  /* 00 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EbGb },
+  /* 01 */  { BxAnother | BxLockable, &BX_CPU_C::ADD_EqGq },
   /* 02 */  { BxAnother, &BX_CPU_C::ADD_GbEb },
   /* 03 */  { BxAnother, &BX_CPU_C::ADD_GqEq },
   /* 04 */  { BxImmediate_Ib, &BX_CPU_C::ADD_ALIb },
@@ -2459,47 +2459,47 @@
   /* 06 */  { 0, &BX_CPU_C::BxError },
   /* 07 */  { 0, &BX_CPU_C::BxError },
   /* 08 */  { BxAnother, &BX_CPU_C::OR_EbGb },
-  /* 09 */  { BxAnother, &BX_CPU_C::OR_EqGq },
-  /* 0A */  { BxAnother, &BX_CPU_C::OR_GbEb },
+  /* 09 */  { BxAnother | BxLockable, &BX_CPU_C::OR_EqGq },
+  /* 0A */  { BxAnother | BxLockable, &BX_CPU_C::OR_GbEb },
   /* 0B */  { BxAnother, &BX_CPU_C::OR_GqEq },
   /* 0C */  { BxImmediate_Ib, &BX_CPU_C::OR_ALIb },
   /* 0D */  { BxImmediate_Iv, &BX_CPU_C::OR_RAXId },
   /* 0E */  { 0, &BX_CPU_C::BxError },
   /* 0F */  { BxAnother, &BX_CPU_C::BxError }, // 2-byte escape
-  /* 10 */  { BxAnother, &BX_CPU_C::ADC_EbGb },
-  /* 11 */  { BxAnother, &BX_CPU_C::ADC_EqGq },
+  /* 10 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EbGb },
+  /* 11 */  { BxAnother | BxLockable, &BX_CPU_C::ADC_EqGq },
   /* 12 */  { BxAnother, &BX_CPU_C::ADC_GbEb },
   /* 13 */  { BxAnother, &BX_CPU_C::ADC_GqEq },
   /* 14 */  { BxImmediate_Ib, &BX_CPU_C::ADC_ALIb },
   /* 15 */  { BxImmediate_Iv, &BX_CPU_C::ADC_RAXId },
   /* 16 */  { 0, &BX_CPU_C::BxError },
   /* 17 */  { 0, &BX_CPU_C::BxError },
-  /* 18 */  { BxAnother, &BX_CPU_C::SBB_EbGb },
-  /* 19 */  { BxAnother, &BX_CPU_C::SBB_EqGq },
+  /* 18 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EbGb },
+  /* 19 */  { BxAnother | BxLockable, &BX_CPU_C::SBB_EqGq },
   /* 1A */  { BxAnother, &BX_CPU_C::SBB_GbEb },
   /* 1B */  { BxAnother, &BX_CPU_C::SBB_GqEq },
   /* 1C */  { BxImmediate_Ib, &BX_CPU_C::SBB_ALIb },
   /* 1D */  { BxImmediate_Iv, &BX_CPU_C::SBB_RAXId },
   /* 1E */  { 0, &BX_CPU_C::BxError },
   /* 1F */  { 0, &BX_CPU_C::BxError },
-  /* 20 */  { BxAnother, &BX_CPU_C::AND_EbGb },
-  /* 21 */  { BxAnother, &BX_CPU_C::AND_EqGq },
+  /* 20 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EbGb },
+  /* 21 */  { BxAnother | BxLockable, &BX_CPU_C::AND_EqGq },
   /* 22 */  { BxAnother, &BX_CPU_C::AND_GbEb },
   /* 23 */  { BxAnother, &BX_CPU_C::AND_GqEq },
   /* 24 */  { BxImmediate_Ib, &BX_CPU_C::AND_ALIb },
   /* 25 */  { BxImmediate_Iv, &BX_CPU_C::AND_RAXId },
   /* 26 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // ES:
   /* 27 */  { 0, &BX_CPU_C::BxError },
-  /* 28 */  { BxAnother, &BX_CPU_C::SUB_EbGb },
-  /* 29 */  { BxAnother, &BX_CPU_C::SUB_EqGq },
+  /* 28 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EbGb },
+  /* 29 */  { BxAnother | BxLockable, &BX_CPU_C::SUB_EqGq },
   /* 2A */  { BxAnother, &BX_CPU_C::SUB_GbEb },
   /* 2B */  { BxAnother, &BX_CPU_C::SUB_GqEq },
   /* 2C */  { BxImmediate_Ib, &BX_CPU_C::SUB_ALIb },
   /* 2D */  { BxImmediate_Iv, &BX_CPU_C::SUB_RAXId },
   /* 2E */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // CS:
   /* 2F */  { 0, &BX_CPU_C::BxError },
-  /* 30 */  { BxAnother, &BX_CPU_C::XOR_EbGb },
-  /* 31 */  { BxAnother, &BX_CPU_C::XOR_EqGq },
+  /* 30 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EbGb },
+  /* 31 */  { BxAnother | BxLockable, &BX_CPU_C::XOR_EqGq },
   /* 32 */  { BxAnother, &BX_CPU_C::XOR_GbEb },
   /* 33 */  { BxAnother, &BX_CPU_C::XOR_GqEq },
   /* 34 */  { BxImmediate_Ib, &BX_CPU_C::XOR_ALIb },
@@ -2578,14 +2578,14 @@
   /* 7D */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jq },
   /* 7E */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jq },
   /* 7F */  { BxImmediate_BrOff8, &BX_CPU_C::JCC_Jq },
-  /* 80 */  { BxAnother | BxGroup1,  NULL, BxOpcodeInfo64G1EbIb },
+  /* 80 */  { BxAnother | BxGroup1, NULL, BxOpcodeInfo64G1EbIb },
   /* 81 */  { BxAnother | BxGroup1 | BxImmediate_Iv, NULL, BxOpcodeInfo64G1Eq },
   /* 82 */  { 0, &BX_CPU_C::BxError },
   /* 83 */  { BxAnother | BxGroup1 | BxImmediate_Ib_SE, NULL, BxOpcodeInfo64G1Eq },
   /* 84 */  { BxAnother, &BX_CPU_C::TEST_EbGb },
   /* 85 */  { BxAnother, &BX_CPU_C::TEST_EqGq },
-  /* 86 */  { BxAnother, &BX_CPU_C::XCHG_EbGb },
-  /* 87 */  { BxAnother, &BX_CPU_C::XCHG_EqGq },
+  /* 86 */  { BxAnother | BxLockable, &BX_CPU_C::XCHG_EbGb },
+  /* 87 */  { BxAnother | BxLockable, &BX_CPU_C::XCHG_EqGq },
   /* 88 */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_EbGb },
   /* 89 */  { BxAnother, &BX_CPU_C::MOV_EqGq },
   /* 8A */  { BxAnother | BxSplitMod11b, NULL, opcodesMOV_GbEb },
@@ -2658,10 +2658,10 @@
   /* CD */  { BxImmediate_Ib, &BX_CPU_C::INT_Ib },
   /* CE */  { 0, &BX_CPU_C::BxError },
   /* CF */  { 0, &BX_CPU_C::IRET64 },
-  /* D0 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eb },
-  /* D1 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eq },
-  /* D2 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eb },
-  /* D3 */  { BxAnother | BxGroup2,  NULL, BxOpcodeInfo64G2Eq },
+  /* D0 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eb },
+  /* D1 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eq },
+  /* D2 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eb },
+  /* D3 */  { BxAnother | BxGroup2, NULL, BxOpcodeInfo64G2Eq },
   /* D4 */  { 0, &BX_CPU_C::BxError },
   /* D5 */  { 0, &BX_CPU_C::BxError },
   /* D6 */  { 0, &BX_CPU_C::BxError },
@@ -2696,19 +2696,19 @@
   /* F3 */  { BxPrefix | BxAnother, &BX_CPU_C::BxError }, // REP,REPE/REPZ
   /* F4 */  { 0, &BX_CPU_C::HLT },
   /* F5 */  { 0, &BX_CPU_C::CMC },
-  /* F6 */  { BxAnother | BxGroup3,  NULL, BxOpcodeInfo64G3Eb },
-  /* F7 */  { BxAnother | BxGroup3,  NULL, BxOpcodeInfo64G3Eq },
+  /* F6 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfo64G3Eb },
+  /* F7 */  { BxAnother | BxGroup3, NULL, BxOpcodeInfo64G3Eq },
   /* F8 */  { 0, &BX_CPU_C::CLC },
   /* F9 */  { 0, &BX_CPU_C::STC },
   /* FA */  { 0, &BX_CPU_C::CLI },
   /* FB */  { 0, &BX_CPU_C::STI },
   /* FC */  { 0, &BX_CPU_C::CLD },
   /* FD */  { 0, &BX_CPU_C::STD },
-  /* FE */  { BxAnother | BxGroup4,  NULL, BxOpcodeInfo64G4 },
-  /* FF */  { BxAnother | BxGroup5,  NULL, BxOpcodeInfo64G5q },
+  /* FE */  { BxAnother | BxGroup4, NULL, BxOpcodeInfo64G4 },
+  /* FF */  { BxAnother | BxGroup5, NULL, BxOpcodeInfo64G5q },
 
-  /* 0F 00 */  { BxAnother | BxGroup6,  NULL, BxOpcodeInfo64G6 },
-  /* 0F 01 */  { BxAnother | BxGroup7,  NULL, BxOpcodeInfo64G7 },
+  /* 0F 00 */  { BxAnother | BxGroup6, NULL, BxOpcodeInfo64G6 },
+  /* 0F 01 */  { BxAnother | BxGroup7, NULL, BxOpcodeInfo64G7 },
   /* 0F 02 */  { BxAnother, &BX_CPU_C::LAR_GvEw },
   /* 0F 03 */  { BxAnother, &BX_CPU_C::LSL_GvEw },
   /* 0F 04 */  { 0, &BX_CPU_C::BxError },
@@ -2872,7 +2872,7 @@
   /* 0F A2 */  { 0, &BX_CPU_C::CPUID },
   /* 0F A3 */  { BxAnother, &BX_CPU_C::BT_EvGv },
   /* 0F A4 */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHLD_EqGq },
-  /* 0F A5 */  { BxAnother,                 &BX_CPU_C::SHLD_EqGq },
+  /* 0F A5 */  { BxAnother,                  &BX_CPU_C::SHLD_EqGq },
   /* 0F A6 */  { 0, &BX_CPU_C::CMPXCHG_XBTS },
   /* 0F A7 */  { 0, &BX_CPU_C::CMPXCHG_IBTS },
   /* 0F A8 */  { 0, &BX_CPU_C::PUSH64_GS },
@@ -2880,11 +2880,11 @@
   /* 0F AA */  { 0, &BX_CPU_C::RSM },
   /* 0F AB */  { BxAnother, &BX_CPU_C::BTS_EvGv },
   /* 0F AC */  { BxAnother | BxImmediate_Ib, &BX_CPU_C::SHRD_EqGq },
-  /* 0F AD */  { BxAnother,                 &BX_CPU_C::SHRD_EqGq },
+  /* 0F AD */  { BxAnother,                  &BX_CPU_C::SHRD_EqGq },
   /* 0F AE */  { BxAnother | BxGroup15, NULL, BxOpcodeInfo64G15 },
   /* 0F AF */  { BxAnother, &BX_CPU_C::IMUL_GqEq },
-  /* 0F B0 */  { BxAnother, &BX_CPU_C::CMPXCHG_EbGb },
-  /* 0F B1 */  { BxAnother, &BX_CPU_C::CMPXCHG_EqGq },
+  /* 0F B0 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EbGb },
+  /* 0F B1 */  { BxAnother | BxLockable, &BX_CPU_C::CMPXCHG_EqGq },
   /* 0F B2 */  { BxAnother, &BX_CPU_C::LSS_GvMp },
   /* 0F B3 */  { BxAnother, &BX_CPU_C::BTR_EvGv },
   /* 0F B4 */  { BxAnother, &BX_CPU_C::LFS_GvMp },
@@ -2893,20 +2893,20 @@
   /* 0F B7 */  { BxAnother, &BX_CPU_C::MOVZX_GqEw },
   /* 0F B8 */  { 0, &BX_CPU_C::BxError },
   /* 0F B9 */  { 0, &BX_CPU_C::BxError },
-  /* 0F BA */  { BxAnother | BxGroup8,  NULL, BxOpcodeInfo64G8EvIb },
+  /* 0F BA */  { BxAnother | BxGroup8, NULL, BxOpcodeInfo64G8EvIb },
   /* 0F BB */  { BxAnother, &BX_CPU_C::BTC_EvGv },
   /* 0F BC */  { BxAnother, &BX_CPU_C::BSF_GvEv },
   /* 0F BD */  { BxAnother, &BX_CPU_C::BSR_GvEv },
   /* 0F BE */  { BxAnother, &BX_CPU_C::MOVSX_GqEb },
   /* 0F BF */  { BxAnother, &BX_CPU_C::MOVSX_GqEw },
   /* 0F C0 */  { BxAnother, &BX_CPU_C::XADD_EbGb },
-  /* 0F C1 */  { BxAnother, &BX_CPU_C::XADD_EqGq },
+  /* 0F C1 */  { BxAnother | BxLockable, &BX_CPU_C::XADD_EqGq },
   /* 0F C2 */  { BxAnother | BxImmediate_Ib | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc2 },
   /* 0F C3 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc3 },
   /* 0F C4 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc4 },
   /* 0F C5 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc5 },
   /* 0F C6 */  { BxAnother | BxPrefixSSE, NULL, BxOpcodeGroupSSE_0fc6 },
-  /* 0F C7 */  { BxAnother | BxGroup9,  NULL, BxOpcodeInfo64G9 },
+  /* 0F C7 */  { BxAnother | BxGroup9, NULL, BxOpcodeInfo64G9 },
   /* 0F C8 */  { 0, &BX_CPU_C::BSWAP_RAX },
   /* 0F C9 */  { 0, &BX_CPU_C::BSWAP_RCX },
   /* 0F CA */  { 0, &BX_CPU_C::BSWAP_RDX },
@@ -2974,7 +2974,7 @@
 {
   // remain must be at least 1
 
-  unsigned b1, b2, ilen=1, attr;
+  unsigned b1, b2, ilen=1, attr, lock=0;
   unsigned imm_mode, offset, rex_r,rex_x,rex_b;
   unsigned rm, mod, nnn;
   unsigned sse_prefix;
@@ -3149,6 +3149,7 @@
           return(0);
         case 0xf0: // LOCK:
           BX_INSTR_PREFIX_LOCK(BX_CPU_ID);
+          lock = 1;
           if (ilen < remain) {
             ilen++;
             goto fetch_b1;
@@ -3181,6 +3182,14 @@
     instruction->modRMForm.modRMData |= mod;
     instruction->modRMForm.modRMData |= (nnn<<8);
 
+    if (lock) { // lock prefix
+      // lock prefix not allowed or destination operand is not memory
+      if ((mod == 0xc0) || !(attr & BxLockable)) {
+        BX_INFO(("LOCK prefix unallowed (op1=0x%x, nnn=%u)", b1, nnn));
+        UndefinedOpcode(instruction);
+      }
+    }
+
     if (mod == 0xc0) { // mod == 11b
       rm |= rex_b;
       instruction->modRMForm.modRMData |= rm;
